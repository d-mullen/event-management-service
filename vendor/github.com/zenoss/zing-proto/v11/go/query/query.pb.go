// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zenoss/zing/proto/query/query.proto

package query

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/zenoss/zing-proto/v11/go/cloud/common"
	metric "github.com/zenoss/zing-proto/v11/go/metric"
	model "github.com/zenoss/zing-proto/v11/go/model"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BySeries_AggregateOp int32

const (
	BySeries_LAST BySeries_AggregateOp = 0
	BySeries_AVG  BySeries_AggregateOp = 1
)

var BySeries_AggregateOp_name = map[int32]string{
	0: "LAST",
	1: "AVG",
}

var BySeries_AggregateOp_value = map[string]int32{
	"LAST": 0,
	"AVG":  1,
}

func (x BySeries_AggregateOp) String() string {
	return proto.EnumName(BySeries_AggregateOp_name, int32(x))
}

func (BySeries_AggregateOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{4, 0}
}

type SortBy_SortOrder int32

const (
	SortBy_ASC  SortBy_SortOrder = 0
	SortBy_DESC SortBy_SortOrder = 1
)

var SortBy_SortOrder_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var SortBy_SortOrder_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x SortBy_SortOrder) String() string {
	return proto.EnumName(SortBy_SortOrder_name, int32(x))
}

func (SortBy_SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{5, 0}
}

type PagingInput_PageDirection int32

const (
	PagingInput_FORWARD  PagingInput_PageDirection = 0
	PagingInput_BACKWARD PagingInput_PageDirection = 1
)

var PagingInput_PageDirection_name = map[int32]string{
	0: "FORWARD",
	1: "BACKWARD",
}

var PagingInput_PageDirection_value = map[string]int32{
	"FORWARD":  0,
	"BACKWARD": 1,
}

func (x PagingInput_PageDirection) String() string {
	return proto.EnumName(PagingInput_PageDirection_name, int32(x))
}

func (PagingInput_PageDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{6, 0}
}

type EntityResult struct {
	// The entity id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The entity name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Facts associated with this entity.
	FactIds []string `protobuf:"bytes,3,rep,name=fact_ids,json=factIds,proto3" json:"fact_ids,omitempty"`
	// Schemas associated with this entity.
	SchemaIds []string `protobuf:"bytes,4,rep,name=schema_ids,json=schemaIds,proto3" json:"schema_ids,omitempty"`
	// Metadata associated with this entity.
	Metadata map[string]*common.ScalarArray `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Dimensions associated with this entity.
	Dimensions           map[string]*common.Scalar `protobuf:"bytes,8,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *EntityResult) Reset()         { *m = EntityResult{} }
func (m *EntityResult) String() string { return proto.CompactTextString(m) }
func (*EntityResult) ProtoMessage()    {}
func (*EntityResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{0}
}

func (m *EntityResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityResult.Unmarshal(m, b)
}
func (m *EntityResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityResult.Marshal(b, m, deterministic)
}
func (m *EntityResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityResult.Merge(m, src)
}
func (m *EntityResult) XXX_Size() int {
	return xxx_messageInfo_EntityResult.Size(m)
}
func (m *EntityResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityResult.DiscardUnknown(m)
}

var xxx_messageInfo_EntityResult proto.InternalMessageInfo

func (m *EntityResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EntityResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EntityResult) GetFactIds() []string {
	if m != nil {
		return m.FactIds
	}
	return nil
}

func (m *EntityResult) GetSchemaIds() []string {
	if m != nil {
		return m.SchemaIds
	}
	return nil
}

func (m *EntityResult) GetMetadata() map[string]*common.ScalarArray {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *EntityResult) GetDimensions() map[string]*common.Scalar {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

// Fields needed to search on metadata
type MetadataQuery struct {
	// An id to fetch
	Id string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	// A string to filter by name
	NameFilter string `protobuf:"bytes,4,opt,name=name_filter,json=nameFilter,proto3" json:"name_filter,omitempty"`
	// Fields we want in our result
	ResultFields []string `protobuf:"bytes,5,rep,name=result_fields,json=resultFields,proto3" json:"result_fields,omitempty"`
	// The time range for this query
	TimeRange *TimeRange `protobuf:"bytes,6,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	// The sort criteria for results
	Sort *SortBy `protobuf:"bytes,8,opt,name=sort,proto3" json:"sort,omitempty"`
	// A map of field filters
	Filters map[string]*common.Scalar `protobuf:"bytes,9,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// A map of dimension filters
	DimensionFilters     map[string]*common.Scalar `protobuf:"bytes,10,rep,name=dimension_filters,json=dimensionFilters,proto3" json:"dimension_filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MetadataQuery) Reset()         { *m = MetadataQuery{} }
func (m *MetadataQuery) String() string { return proto.CompactTextString(m) }
func (*MetadataQuery) ProtoMessage()    {}
func (*MetadataQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{1}
}

func (m *MetadataQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataQuery.Unmarshal(m, b)
}
func (m *MetadataQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataQuery.Marshal(b, m, deterministic)
}
func (m *MetadataQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataQuery.Merge(m, src)
}
func (m *MetadataQuery) XXX_Size() int {
	return xxx_messageInfo_MetadataQuery.Size(m)
}
func (m *MetadataQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataQuery.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataQuery proto.InternalMessageInfo

func (m *MetadataQuery) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetadataQuery) GetNameFilter() string {
	if m != nil {
		return m.NameFilter
	}
	return ""
}

func (m *MetadataQuery) GetResultFields() []string {
	if m != nil {
		return m.ResultFields
	}
	return nil
}

func (m *MetadataQuery) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *MetadataQuery) GetSort() *SortBy {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *MetadataQuery) GetFilters() map[string]*common.Scalar {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *MetadataQuery) GetDimensionFilters() map[string]*common.Scalar {
	if m != nil {
		return m.DimensionFilters
	}
	return nil
}

// The start and end timestamp for a query
type TimeRange struct {
	Start                int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{2}
}

func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (m *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(m, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *TimeRange) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

// The top-level, dimension or metadata property to sort by
type ByField struct {
	// Types that are valid to be assigned to SortField:
	//	*ByField_Property
	//	*ByField_Dimension
	//	*ByField_Metadata
	SortField            isByField_SortField `protobuf_oneof:"sort_field"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ByField) Reset()         { *m = ByField{} }
func (m *ByField) String() string { return proto.CompactTextString(m) }
func (*ByField) ProtoMessage()    {}
func (*ByField) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{3}
}

func (m *ByField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByField.Unmarshal(m, b)
}
func (m *ByField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByField.Marshal(b, m, deterministic)
}
func (m *ByField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByField.Merge(m, src)
}
func (m *ByField) XXX_Size() int {
	return xxx_messageInfo_ByField.Size(m)
}
func (m *ByField) XXX_DiscardUnknown() {
	xxx_messageInfo_ByField.DiscardUnknown(m)
}

var xxx_messageInfo_ByField proto.InternalMessageInfo

type isByField_SortField interface {
	isByField_SortField()
}

type ByField_Property struct {
	Property string `protobuf:"bytes,1,opt,name=property,proto3,oneof"`
}

type ByField_Dimension struct {
	Dimension string `protobuf:"bytes,2,opt,name=dimension,proto3,oneof"`
}

type ByField_Metadata struct {
	Metadata string `protobuf:"bytes,3,opt,name=metadata,proto3,oneof"`
}

func (*ByField_Property) isByField_SortField() {}

func (*ByField_Dimension) isByField_SortField() {}

func (*ByField_Metadata) isByField_SortField() {}

func (m *ByField) GetSortField() isByField_SortField {
	if m != nil {
		return m.SortField
	}
	return nil
}

func (m *ByField) GetProperty() string {
	if x, ok := m.GetSortField().(*ByField_Property); ok {
		return x.Property
	}
	return ""
}

func (m *ByField) GetDimension() string {
	if x, ok := m.GetSortField().(*ByField_Dimension); ok {
		return x.Dimension
	}
	return ""
}

func (m *ByField) GetMetadata() string {
	if x, ok := m.GetSortField().(*ByField_Metadata); ok {
		return x.Metadata
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ByField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ByField_Property)(nil),
		(*ByField_Dimension)(nil),
		(*ByField_Metadata)(nil),
	}
}

// The series name and aggregate operation to sort by
type BySeries struct {
	SeriesName           string               `protobuf:"bytes,1,opt,name=series_name,json=seriesName,proto3" json:"series_name,omitempty"`
	Operation            BySeries_AggregateOp `protobuf:"varint,2,opt,name=operation,proto3,enum=query.BySeries_AggregateOp" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BySeries) Reset()         { *m = BySeries{} }
func (m *BySeries) String() string { return proto.CompactTextString(m) }
func (*BySeries) ProtoMessage()    {}
func (*BySeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{4}
}

func (m *BySeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BySeries.Unmarshal(m, b)
}
func (m *BySeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BySeries.Marshal(b, m, deterministic)
}
func (m *BySeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BySeries.Merge(m, src)
}
func (m *BySeries) XXX_Size() int {
	return xxx_messageInfo_BySeries.Size(m)
}
func (m *BySeries) XXX_DiscardUnknown() {
	xxx_messageInfo_BySeries.DiscardUnknown(m)
}

var xxx_messageInfo_BySeries proto.InternalMessageInfo

func (m *BySeries) GetSeriesName() string {
	if m != nil {
		return m.SeriesName
	}
	return ""
}

func (m *BySeries) GetOperation() BySeries_AggregateOp {
	if m != nil {
		return m.Operation
	}
	return BySeries_LAST
}

// Query results can be sorted by a field or metric series
type SortBy struct {
	// Types that are valid to be assigned to SortType:
	//	*SortBy_ByField
	//	*SortBy_BySeries
	SortType             isSortBy_SortType `protobuf_oneof:"sort_type"`
	Order                SortBy_SortOrder  `protobuf:"varint,3,opt,name=order,proto3,enum=query.SortBy_SortOrder" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SortBy) Reset()         { *m = SortBy{} }
func (m *SortBy) String() string { return proto.CompactTextString(m) }
func (*SortBy) ProtoMessage()    {}
func (*SortBy) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{5}
}

func (m *SortBy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortBy.Unmarshal(m, b)
}
func (m *SortBy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortBy.Marshal(b, m, deterministic)
}
func (m *SortBy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortBy.Merge(m, src)
}
func (m *SortBy) XXX_Size() int {
	return xxx_messageInfo_SortBy.Size(m)
}
func (m *SortBy) XXX_DiscardUnknown() {
	xxx_messageInfo_SortBy.DiscardUnknown(m)
}

var xxx_messageInfo_SortBy proto.InternalMessageInfo

type isSortBy_SortType interface {
	isSortBy_SortType()
}

type SortBy_ByField struct {
	ByField *ByField `protobuf:"bytes,1,opt,name=by_field,json=byField,proto3,oneof"`
}

type SortBy_BySeries struct {
	BySeries *BySeries `protobuf:"bytes,2,opt,name=by_series,json=bySeries,proto3,oneof"`
}

func (*SortBy_ByField) isSortBy_SortType() {}

func (*SortBy_BySeries) isSortBy_SortType() {}

func (m *SortBy) GetSortType() isSortBy_SortType {
	if m != nil {
		return m.SortType
	}
	return nil
}

func (m *SortBy) GetByField() *ByField {
	if x, ok := m.GetSortType().(*SortBy_ByField); ok {
		return x.ByField
	}
	return nil
}

func (m *SortBy) GetBySeries() *BySeries {
	if x, ok := m.GetSortType().(*SortBy_BySeries); ok {
		return x.BySeries
	}
	return nil
}

func (m *SortBy) GetOrder() SortBy_SortOrder {
	if m != nil {
		return m.Order
	}
	return SortBy_ASC
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SortBy) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SortBy_ByField)(nil),
		(*SortBy_BySeries)(nil),
	}
}

type PagingInput struct {
	Count                int64                     `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Cursor               string                    `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Direction            PagingInput_PageDirection `protobuf:"varint,4,opt,name=direction,proto3,enum=query.PagingInput_PageDirection" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PagingInput) Reset()         { *m = PagingInput{} }
func (m *PagingInput) String() string { return proto.CompactTextString(m) }
func (*PagingInput) ProtoMessage()    {}
func (*PagingInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{6}
}

func (m *PagingInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingInput.Unmarshal(m, b)
}
func (m *PagingInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingInput.Marshal(b, m, deterministic)
}
func (m *PagingInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingInput.Merge(m, src)
}
func (m *PagingInput) XXX_Size() int {
	return xxx_messageInfo_PagingInput.Size(m)
}
func (m *PagingInput) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingInput.DiscardUnknown(m)
}

var xxx_messageInfo_PagingInput proto.InternalMessageInfo

func (m *PagingInput) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PagingInput) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *PagingInput) GetDirection() PagingInput_PageDirection {
	if m != nil {
		return m.Direction
	}
	return PagingInput_FORWARD
}

type PageInfo struct {
	Cursor               string   `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	TotalCount           int64    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	HasNext              bool     `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	HasPrev              bool     `protobuf:"varint,4,opt,name=has_prev,json=hasPrev,proto3" json:"has_prev,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageInfo) Reset()         { *m = PageInfo{} }
func (m *PageInfo) String() string { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()    {}
func (*PageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{7}
}

func (m *PageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInfo.Unmarshal(m, b)
}
func (m *PageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInfo.Marshal(b, m, deterministic)
}
func (m *PageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInfo.Merge(m, src)
}
func (m *PageInfo) XXX_Size() int {
	return xxx_messageInfo_PageInfo.Size(m)
}
func (m *PageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PageInfo proto.InternalMessageInfo

func (m *PageInfo) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *PageInfo) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *PageInfo) GetHasNext() bool {
	if m != nil {
		return m.HasNext
	}
	return false
}

func (m *PageInfo) GetHasPrev() bool {
	if m != nil {
		return m.HasPrev
	}
	return false
}

// Fields needed for a METRIC query
type MetricQuery struct {
	// Types that are valid to be assigned to MetricMetadata:
	//	*MetricQuery_MetricId
	//	*MetricQuery_MetadataQuery
	MetricMetadata isMetricQuery_MetricMetadata `protobuf_oneof:"metric_metadata"`
	// Time range for metrics in this query
	TimeRange            *TimeRange `protobuf:"bytes,3,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MetricQuery) Reset()         { *m = MetricQuery{} }
func (m *MetricQuery) String() string { return proto.CompactTextString(m) }
func (*MetricQuery) ProtoMessage()    {}
func (*MetricQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{8}
}

func (m *MetricQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricQuery.Unmarshal(m, b)
}
func (m *MetricQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricQuery.Marshal(b, m, deterministic)
}
func (m *MetricQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricQuery.Merge(m, src)
}
func (m *MetricQuery) XXX_Size() int {
	return xxx_messageInfo_MetricQuery.Size(m)
}
func (m *MetricQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricQuery.DiscardUnknown(m)
}

var xxx_messageInfo_MetricQuery proto.InternalMessageInfo

type isMetricQuery_MetricMetadata interface {
	isMetricQuery_MetricMetadata()
}

type MetricQuery_MetricId struct {
	MetricId string `protobuf:"bytes,1,opt,name=metric_id,json=metricId,proto3,oneof"`
}

type MetricQuery_MetadataQuery struct {
	MetadataQuery *MetadataQuery `protobuf:"bytes,2,opt,name=metadata_query,json=metadataQuery,proto3,oneof"`
}

func (*MetricQuery_MetricId) isMetricQuery_MetricMetadata() {}

func (*MetricQuery_MetadataQuery) isMetricQuery_MetricMetadata() {}

func (m *MetricQuery) GetMetricMetadata() isMetricQuery_MetricMetadata {
	if m != nil {
		return m.MetricMetadata
	}
	return nil
}

func (m *MetricQuery) GetMetricId() string {
	if x, ok := m.GetMetricMetadata().(*MetricQuery_MetricId); ok {
		return x.MetricId
	}
	return ""
}

func (m *MetricQuery) GetMetadataQuery() *MetadataQuery {
	if x, ok := m.GetMetricMetadata().(*MetricQuery_MetadataQuery); ok {
		return x.MetadataQuery
	}
	return nil
}

func (m *MetricQuery) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MetricQuery) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MetricQuery_MetricId)(nil),
		(*MetricQuery_MetadataQuery)(nil),
	}
}

// Fields needed for an ENTITY query
type EntityQuery struct {
	// The (optional) schemaId of the type of entity we are looking for
	SchemaId string `protobuf:"bytes,1,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	// Metadata filters
	MetadataQuery *MetadataQuery `protobuf:"bytes,2,opt,name=metadata_query,json=metadataQuery,proto3" json:"metadata_query,omitempty"`
	// (optional) A list of metrics to fetch with each result
	MetricQueries []*MetadataQuery `protobuf:"bytes,5,rep,name=metric_queries,json=metricQueries,proto3" json:"metric_queries,omitempty"`
	// (optional) A time range for metric ZTS to return with the metrics.
	MetricTimeRange      *TimeRange `protobuf:"bytes,6,opt,name=metric_time_range,json=metricTimeRange,proto3" json:"metric_time_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EntityQuery) Reset()         { *m = EntityQuery{} }
func (m *EntityQuery) String() string { return proto.CompactTextString(m) }
func (*EntityQuery) ProtoMessage()    {}
func (*EntityQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{9}
}

func (m *EntityQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityQuery.Unmarshal(m, b)
}
func (m *EntityQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityQuery.Marshal(b, m, deterministic)
}
func (m *EntityQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityQuery.Merge(m, src)
}
func (m *EntityQuery) XXX_Size() int {
	return xxx_messageInfo_EntityQuery.Size(m)
}
func (m *EntityQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityQuery.DiscardUnknown(m)
}

var xxx_messageInfo_EntityQuery proto.InternalMessageInfo

func (m *EntityQuery) GetSchemaId() string {
	if m != nil {
		return m.SchemaId
	}
	return ""
}

func (m *EntityQuery) GetMetadataQuery() *MetadataQuery {
	if m != nil {
		return m.MetadataQuery
	}
	return nil
}

func (m *EntityQuery) GetMetricQueries() []*MetadataQuery {
	if m != nil {
		return m.MetricQueries
	}
	return nil
}

func (m *EntityQuery) GetMetricTimeRange() *TimeRange {
	if m != nil {
		return m.MetricTimeRange
	}
	return nil
}

// Fields needed for a RELATIONSHIP query
type RelationshipQuery struct {
	// The entity Id to return relationships for
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// (optional) A time range for the relationships
	TimeRange            *TimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RelationshipQuery) Reset()         { *m = RelationshipQuery{} }
func (m *RelationshipQuery) String() string { return proto.CompactTextString(m) }
func (*RelationshipQuery) ProtoMessage()    {}
func (*RelationshipQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{10}
}

func (m *RelationshipQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationshipQuery.Unmarshal(m, b)
}
func (m *RelationshipQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationshipQuery.Marshal(b, m, deterministic)
}
func (m *RelationshipQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationshipQuery.Merge(m, src)
}
func (m *RelationshipQuery) XXX_Size() int {
	return xxx_messageInfo_RelationshipQuery.Size(m)
}
func (m *RelationshipQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationshipQuery.DiscardUnknown(m)
}

var xxx_messageInfo_RelationshipQuery proto.InternalMessageInfo

func (m *RelationshipQuery) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *RelationshipQuery) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

// Domain Query struct. Used by domain-query and dataflow-query
type Query struct {
	// A unique ID of this query (Will be included in the results)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Tenant ID to scope this query
	Tenant string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// These fields depend on the type of the query
	//
	// Types that are valid to be assigned to QueryType:
	//	*Query_MetricQuery
	//	*Query_EntityQuery
	//	*Query_RelationshipQuery
	QueryType isQuery_QueryType `protobuf_oneof:"query_type"`
	// The collection of sort criteria for query results
	SortingRules []*SortBy `protobuf:"bytes,5,rep,name=sorting_rules,json=sortingRules,proto3" json:"sorting_rules,omitempty"`
	// The maxium number of query results to retrieve
	Limit                int64    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{11}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Query) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type isQuery_QueryType interface {
	isQuery_QueryType()
}

type Query_MetricQuery struct {
	MetricQuery *MetricQuery `protobuf:"bytes,3,opt,name=metric_query,json=metricQuery,proto3,oneof"`
}

type Query_EntityQuery struct {
	EntityQuery *EntityQuery `protobuf:"bytes,4,opt,name=entity_query,json=entityQuery,proto3,oneof"`
}

type Query_RelationshipQuery struct {
	RelationshipQuery *RelationshipQuery `protobuf:"bytes,7,opt,name=relationship_query,json=relationshipQuery,proto3,oneof"`
}

func (*Query_MetricQuery) isQuery_QueryType() {}

func (*Query_EntityQuery) isQuery_QueryType() {}

func (*Query_RelationshipQuery) isQuery_QueryType() {}

func (m *Query) GetQueryType() isQuery_QueryType {
	if m != nil {
		return m.QueryType
	}
	return nil
}

func (m *Query) GetMetricQuery() *MetricQuery {
	if x, ok := m.GetQueryType().(*Query_MetricQuery); ok {
		return x.MetricQuery
	}
	return nil
}

func (m *Query) GetEntityQuery() *EntityQuery {
	if x, ok := m.GetQueryType().(*Query_EntityQuery); ok {
		return x.EntityQuery
	}
	return nil
}

func (m *Query) GetRelationshipQuery() *RelationshipQuery {
	if x, ok := m.GetQueryType().(*Query_RelationshipQuery); ok {
		return x.RelationshipQuery
	}
	return nil
}

func (m *Query) GetSortingRules() []*SortBy {
	if m != nil {
		return m.SortingRules
	}
	return nil
}

func (m *Query) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Query) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Query_MetricQuery)(nil),
		(*Query_EntityQuery)(nil),
		(*Query_RelationshipQuery)(nil),
	}
}

// Query result struct
type Result struct {
	// Identifies the ResultInstance that owns this data
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Identifies the QueryInstance from which this ResultInstance was generated
	QueryId string `protobuf:"bytes,2,opt,name=queryId,proto3" json:"queryId,omitempty"`
	// Timestamp when this result was retrieved
	Timestamp int64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Result record
	//
	// Types that are valid to be assigned to MetadataResult:
	//	*Result_Entity
	//	*Result_Metric
	//	*Result_MetaResult_
	MetadataResult isResult_MetadataResult `protobuf_oneof:"metadata_result"`
	// Optional map of metric name/id --> MetricSeries
	MetricSeries         map[string]*metric.MetricSeries `protobuf:"bytes,7,rep,name=metric_series,json=metricSeries,proto3" json:"metric_series,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{12}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Result) GetQueryId() string {
	if m != nil {
		return m.QueryId
	}
	return ""
}

func (m *Result) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type isResult_MetadataResult interface {
	isResult_MetadataResult()
}

type Result_Entity struct {
	Entity *model.Entity `protobuf:"bytes,4,opt,name=entity,proto3,oneof"`
}

type Result_Metric struct {
	Metric *metric.Metric `protobuf:"bytes,5,opt,name=metric,proto3,oneof"`
}

type Result_MetaResult_ struct {
	MetaResult *Result_MetaResult `protobuf:"bytes,6,opt,name=meta_result,json=metaResult,proto3,oneof"`
}

func (*Result_Entity) isResult_MetadataResult() {}

func (*Result_Metric) isResult_MetadataResult() {}

func (*Result_MetaResult_) isResult_MetadataResult() {}

func (m *Result) GetMetadataResult() isResult_MetadataResult {
	if m != nil {
		return m.MetadataResult
	}
	return nil
}

func (m *Result) GetEntity() *model.Entity {
	if x, ok := m.GetMetadataResult().(*Result_Entity); ok {
		return x.Entity
	}
	return nil
}

func (m *Result) GetMetric() *metric.Metric {
	if x, ok := m.GetMetadataResult().(*Result_Metric); ok {
		return x.Metric
	}
	return nil
}

func (m *Result) GetMetaResult() *Result_MetaResult {
	if x, ok := m.GetMetadataResult().(*Result_MetaResult_); ok {
		return x.MetaResult
	}
	return nil
}

func (m *Result) GetMetricSeries() map[string]*metric.MetricSeries {
	if m != nil {
		return m.MetricSeries
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Result) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Result_Entity)(nil),
		(*Result_Metric)(nil),
		(*Result_MetaResult_)(nil),
	}
}

type Result_MetaResult struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result_MetaResult) Reset()         { *m = Result_MetaResult{} }
func (m *Result_MetaResult) String() string { return proto.CompactTextString(m) }
func (*Result_MetaResult) ProtoMessage()    {}
func (*Result_MetaResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_06186807df919488, []int{12, 0}
}

func (m *Result_MetaResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result_MetaResult.Unmarshal(m, b)
}
func (m *Result_MetaResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result_MetaResult.Marshal(b, m, deterministic)
}
func (m *Result_MetaResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result_MetaResult.Merge(m, src)
}
func (m *Result_MetaResult) XXX_Size() int {
	return xxx_messageInfo_Result_MetaResult.Size(m)
}
func (m *Result_MetaResult) XXX_DiscardUnknown() {
	xxx_messageInfo_Result_MetaResult.DiscardUnknown(m)
}

var xxx_messageInfo_Result_MetaResult proto.InternalMessageInfo

func (m *Result_MetaResult) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterEnum("query.BySeries_AggregateOp", BySeries_AggregateOp_name, BySeries_AggregateOp_value)
	proto.RegisterEnum("query.SortBy_SortOrder", SortBy_SortOrder_name, SortBy_SortOrder_value)
	proto.RegisterEnum("query.PagingInput_PageDirection", PagingInput_PageDirection_name, PagingInput_PageDirection_value)
	proto.RegisterType((*EntityResult)(nil), "query.EntityResult")
	proto.RegisterMapType((map[string]*common.Scalar)(nil), "query.EntityResult.DimensionsEntry")
	proto.RegisterMapType((map[string]*common.ScalarArray)(nil), "query.EntityResult.MetadataEntry")
	proto.RegisterType((*MetadataQuery)(nil), "query.MetadataQuery")
	proto.RegisterMapType((map[string]*common.Scalar)(nil), "query.MetadataQuery.DimensionFiltersEntry")
	proto.RegisterMapType((map[string]*common.Scalar)(nil), "query.MetadataQuery.FiltersEntry")
	proto.RegisterType((*TimeRange)(nil), "query.TimeRange")
	proto.RegisterType((*ByField)(nil), "query.ByField")
	proto.RegisterType((*BySeries)(nil), "query.BySeries")
	proto.RegisterType((*SortBy)(nil), "query.SortBy")
	proto.RegisterType((*PagingInput)(nil), "query.PagingInput")
	proto.RegisterType((*PageInfo)(nil), "query.PageInfo")
	proto.RegisterType((*MetricQuery)(nil), "query.MetricQuery")
	proto.RegisterType((*EntityQuery)(nil), "query.EntityQuery")
	proto.RegisterType((*RelationshipQuery)(nil), "query.RelationshipQuery")
	proto.RegisterType((*Query)(nil), "query.Query")
	proto.RegisterType((*Result)(nil), "query.Result")
	proto.RegisterMapType((map[string]*metric.MetricSeries)(nil), "query.Result.MetricSeriesEntry")
	proto.RegisterType((*Result_MetaResult)(nil), "query.Result.MetaResult")
}

func init() {
	proto.RegisterFile("zenoss/zing/proto/query/query.proto", fileDescriptor_06186807df919488)
}

var fileDescriptor_06186807df919488 = []byte{
	// 1328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xef, 0x72, 0xdb, 0x44,
	0x10, 0xb7, 0x2c, 0xff, 0x91, 0xd6, 0x76, 0xea, 0xdc, 0x94, 0xe2, 0xba, 0xff, 0x52, 0x15, 0x86,
	0x50, 0xa6, 0xf6, 0x34, 0xfd, 0x50, 0xa0, 0x94, 0x99, 0x38, 0x69, 0xb1, 0x03, 0x6d, 0xc3, 0xb9,
	0xb4, 0x03, 0x5f, 0x34, 0x8a, 0x75, 0x71, 0x34, 0x58, 0x92, 0x39, 0x9d, 0x33, 0x55, 0x9f, 0xa0,
	0x6f, 0xc2, 0xf0, 0x89, 0x2f, 0xbc, 0x00, 0x33, 0x3c, 0x09, 0x4f, 0xc2, 0xdc, 0xed, 0x49, 0x96,
	0x13, 0x77, 0x5a, 0x06, 0xbe, 0x24, 0x77, 0x7b, 0xbb, 0x7b, 0xbb, 0xbf, 0xdf, 0x6a, 0x6f, 0x0d,
	0xb7, 0x5e, 0xb3, 0x28, 0x4e, 0x92, 0xfe, 0xeb, 0x20, 0x9a, 0xf6, 0xe7, 0x3c, 0x16, 0x71, 0xff,
	0x97, 0x05, 0xe3, 0x29, 0xfe, 0xed, 0x29, 0x09, 0xa9, 0xaa, 0x4d, 0xf7, 0xe3, 0xf3, 0xba, 0x21,
	0x13, 0x3c, 0x98, 0xe8, 0x7f, 0xa8, 0xdd, 0x5d, 0xe3, 0x32, 0x8c, 0x7d, 0x36, 0xc3, 0xbf, 0x5a,
	0xe9, 0xa3, 0xf3, 0x4a, 0x93, 0x59, 0xbc, 0xf0, 0xfb, 0xc9, 0xc4, 0x9b, 0x79, 0x1c, 0xb5, 0x9c,
	0xdf, 0x4c, 0x68, 0x3e, 0x8a, 0x44, 0x20, 0x52, 0xca, 0x92, 0xc5, 0x4c, 0x90, 0x0d, 0x28, 0x07,
	0x7e, 0xc7, 0xd8, 0x32, 0xb6, 0x6d, 0x5a, 0x0e, 0x7c, 0x42, 0xa0, 0x12, 0x79, 0x21, 0xeb, 0x94,
	0x95, 0x44, 0xad, 0xc9, 0x65, 0xb0, 0x8e, 0xbd, 0x89, 0x70, 0x03, 0x3f, 0xe9, 0x98, 0x5b, 0xe6,
	0xb6, 0x4d, 0xeb, 0x72, 0x3f, 0xf2, 0x13, 0x72, 0x0d, 0x20, 0x99, 0x9c, 0xb0, 0xd0, 0x53, 0x87,
	0x15, 0x75, 0x68, 0xa3, 0x44, 0x1e, 0x3f, 0x04, 0x2b, 0x64, 0xc2, 0xf3, 0x3d, 0xe1, 0x75, 0xea,
	0x5b, 0xe6, 0x76, 0x63, 0xe7, 0x66, 0x0f, 0x71, 0x28, 0x06, 0xd1, 0x7b, 0xa2, 0x75, 0x1e, 0x45,
	0x82, 0xa7, 0x34, 0x37, 0x21, 0x7b, 0x00, 0x7e, 0x10, 0xb2, 0x28, 0x09, 0xe2, 0x28, 0xe9, 0x58,
	0xca, 0xc1, 0xad, 0x75, 0x0e, 0xf6, 0x73, 0x2d, 0x74, 0x51, 0x30, 0xeb, 0xbe, 0x80, 0xd6, 0x8a,
	0x7f, 0xd2, 0x06, 0xf3, 0x67, 0x96, 0xea, 0x9c, 0xe5, 0x92, 0xf4, 0xa1, 0x7a, 0xea, 0xcd, 0x16,
	0x98, 0x75, 0x63, 0xe7, 0x72, 0x0f, 0xb1, 0xec, 0x29, 0x00, 0x7b, 0x63, 0x05, 0xe0, 0x2e, 0xe7,
	0x5e, 0x4a, 0x51, 0xef, 0xcb, 0xf2, 0xe7, 0x46, 0x77, 0x0c, 0x17, 0xce, 0x5c, 0xbb, 0xc6, 0xf3,
	0xed, 0x55, 0xcf, 0x17, 0xd7, 0x79, 0x2e, 0x38, 0x3d, 0xa8, 0x58, 0xd5, 0x76, 0xed, 0xa0, 0x62,
	0xd5, 0xda, 0x75, 0xe7, 0x4d, 0x65, 0x19, 0xf9, 0xf7, 0x32, 0x67, 0x4d, 0x56, 0x3d, 0x27, 0xeb,
	0x06, 0x34, 0x24, 0x41, 0xee, 0x71, 0x30, 0x13, 0x8c, 0x77, 0x2a, 0xea, 0x00, 0xa4, 0xe8, 0xb1,
	0x92, 0x90, 0x5b, 0xd0, 0xe2, 0x0a, 0x21, 0xf7, 0x38, 0x60, 0x33, 0x3f, 0xe9, 0x54, 0x15, 0x43,
	0x4d, 0x14, 0x3e, 0x56, 0x32, 0xd2, 0x07, 0x10, 0x41, 0xc8, 0x5c, 0xee, 0x45, 0x53, 0xd6, 0xa9,
	0xa9, 0x40, 0xdb, 0x1a, 0xe5, 0xe7, 0x41, 0xc8, 0xa8, 0x94, 0x53, 0x5b, 0x64, 0x4b, 0x72, 0x13,
	0x2a, 0x49, 0xcc, 0x45, 0xc7, 0x52, 0xaa, 0x2d, 0xad, 0x3a, 0x8e, 0xb9, 0x18, 0xa4, 0x54, 0x1d,
	0x91, 0x07, 0x50, 0xc7, 0xa0, 0x92, 0x8e, 0xbd, 0xc2, 0xfb, 0x4a, 0x42, 0x3d, 0x0c, 0x53, 0x93,
	0x96, 0x59, 0x90, 0x97, 0xb0, 0x99, 0xf3, 0xe7, 0x66, 0x6e, 0x40, 0xb9, 0xb9, 0xbd, 0xd6, 0x4d,
	0xce, 0xc3, 0x8a, 0xbf, 0xb6, 0x7f, 0x46, 0xdc, 0x3d, 0x84, 0x66, 0x51, 0xe3, 0xbf, 0xf3, 0xd5,
	0xfd, 0x11, 0x3e, 0x58, 0x7b, 0xf9, 0xff, 0x52, 0x0a, 0x46, 0xbb, 0x7c, 0x50, 0xb1, 0xcc, 0x76,
	0xc5, 0xb9, 0x07, 0x76, 0xce, 0x04, 0xb9, 0x08, 0xd5, 0x44, 0x78, 0x5c, 0x28, 0xe7, 0x26, 0xc5,
	0x8d, 0xbc, 0x90, 0x45, 0xbe, 0x72, 0x6e, 0x52, 0xb9, 0x74, 0x12, 0xa8, 0x0f, 0x52, 0xc5, 0x31,
	0xb9, 0x0a, 0xd6, 0x9c, 0xc7, 0x73, 0xc6, 0x85, 0x0e, 0x69, 0x58, 0xa2, 0xb9, 0x84, 0x5c, 0x07,
	0x3b, 0x87, 0x0a, 0x3f, 0xfc, 0x61, 0x89, 0x2e, 0x45, 0xd2, 0x3a, 0xff, 0x8a, 0xcd, 0xcc, 0x3a,
	0x93, 0x0c, 0x9a, 0x00, 0x92, 0x72, 0xac, 0x30, 0xe7, 0x8d, 0x01, 0xd6, 0x20, 0x1d, 0x33, 0x1e,
	0xb0, 0x44, 0xd6, 0x67, 0xa2, 0x56, 0xae, 0xea, 0x29, 0x08, 0x06, 0xa0, 0xe8, 0xa9, 0xec, 0x2c,
	0x5f, 0x80, 0x2d, 0x63, 0xf0, 0x44, 0x76, 0xf3, 0xc6, 0xce, 0x15, 0xcd, 0x70, 0xe6, 0xa4, 0xb7,
	0x3b, 0x9d, 0x72, 0x36, 0xf5, 0x04, 0x7b, 0x36, 0xa7, 0x4b, 0x6d, 0x67, 0x0b, 0x1a, 0x85, 0x13,
	0x62, 0x41, 0xe5, 0xbb, 0xdd, 0xf1, 0xf3, 0x76, 0x89, 0xd4, 0xc1, 0xdc, 0x7d, 0xf1, 0x4d, 0xdb,
	0x70, 0xfe, 0x34, 0xa0, 0x86, 0x45, 0x49, 0x3e, 0x03, 0xeb, 0x28, 0xc5, 0x08, 0x55, 0x14, 0x8d,
	0x9d, 0x8d, 0xfc, 0x1a, 0x85, 0xd0, 0xb0, 0x44, 0xeb, 0x47, 0x1a, 0xac, 0x1e, 0xd8, 0x47, 0xa9,
	0x8b, 0x51, 0x6a, 0xb2, 0x2e, 0x9c, 0x09, 0x4a, 0x02, 0x70, 0x94, 0x65, 0x79, 0x07, 0xaa, 0x31,
	0xf7, 0x19, 0x57, 0xd8, 0x6c, 0xec, 0x7c, 0xb8, 0xf2, 0x3d, 0xa8, 0x7f, 0xcf, 0xe4, 0x31, 0x45,
	0x2d, 0xe7, 0x3a, 0xd8, 0xb9, 0x4c, 0x05, 0x3b, 0xde, 0x6b, 0x97, 0x64, 0xfc, 0xfb, 0x8f, 0xc6,
	0x7b, 0x6d, 0x63, 0xd0, 0x00, 0x5b, 0xe1, 0x29, 0xd2, 0x39, 0x73, 0x7e, 0x35, 0xa0, 0x71, 0xe8,
	0x4d, 0x83, 0x68, 0x3a, 0x8a, 0xe6, 0x0b, 0x21, 0xb9, 0x9f, 0xc4, 0x8b, 0x28, 0xe7, 0x5e, 0x6d,
	0xc8, 0x25, 0xa8, 0x4d, 0x16, 0x3c, 0x89, 0xb9, 0x6e, 0xdb, 0x7a, 0x47, 0xbe, 0x96, 0xc4, 0x72,
	0x36, 0x51, 0xf0, 0x56, 0x54, 0x74, 0x5b, 0x3a, 0xba, 0x82, 0x53, 0xb9, 0x66, 0xfb, 0x99, 0x1e,
	0x5d, 0x9a, 0x38, 0xb7, 0xa1, 0xb5, 0x72, 0x46, 0x1a, 0x50, 0x7f, 0xfc, 0x8c, 0xbe, 0xdc, 0xa5,
	0xfb, 0xed, 0x12, 0x69, 0x82, 0x35, 0xd8, 0xdd, 0xfb, 0x56, 0xed, 0x0c, 0x27, 0x05, 0x4b, 0xea,
	0x8e, 0xa2, 0xe3, 0xb8, 0x10, 0x8f, 0xb1, 0x12, 0xcf, 0x0d, 0x68, 0x88, 0x58, 0x78, 0x33, 0x17,
	0x73, 0xc0, 0x5a, 0x05, 0x25, 0xda, 0x53, 0x89, 0x5c, 0x06, 0xeb, 0xc4, 0x4b, 0xdc, 0x88, 0xbd,
	0x12, 0x0a, 0x4d, 0x8b, 0xd6, 0x4f, 0xbc, 0xe4, 0x29, 0x7b, 0x95, 0x1f, 0xcd, 0x39, 0x3b, 0x55,
	0xa9, 0xe0, 0xd1, 0x21, 0x67, 0xa7, 0xce, 0xef, 0x06, 0x34, 0x9e, 0xa8, 0x07, 0x13, 0xdb, 0xe4,
	0x35, 0xb0, 0xf1, 0xfd, 0x74, 0xb3, 0xa7, 0x4d, 0x17, 0x2c, 0x0f, 0x26, 0x23, 0x9f, 0x3c, 0x84,
	0x8d, 0xac, 0x78, 0x5d, 0x05, 0x46, 0xfe, 0x45, 0xae, 0xe9, 0x2d, 0xc3, 0x12, 0x6d, 0x85, 0x2b,
	0x4d, 0x78, 0xb5, 0x5d, 0x9a, 0xef, 0x6c, 0x97, 0x83, 0x4d, 0xb8, 0xa0, 0xc3, 0xc9, 0x1c, 0x39,
	0x7f, 0x1b, 0xd0, 0xc0, 0x07, 0x0c, 0x7d, 0x5e, 0x01, 0x3b, 0x7f, 0x46, 0x35, 0x66, 0x56, 0xf6,
	0x8a, 0x92, 0x07, 0xff, 0x26, 0xde, 0xb3, 0xd1, 0xa2, 0xb1, 0xbc, 0x5c, 0x2a, 0xcb, 0x8a, 0xae,
	0xaa, 0x46, 0xfa, 0x76, 0x63, 0x0d, 0xa3, 0xac, 0xec, 0xaf, 0x60, 0x53, 0x1b, 0xbf, 0xc7, 0x03,
	0xa1, 0x93, 0xcc, 0x05, 0x8e, 0x07, 0x9b, 0x94, 0xcd, 0xd4, 0xd7, 0x9a, 0x9c, 0x04, 0xf3, 0x3c,
	0x53, 0xa6, 0x12, 0x2f, 0x64, 0x8a, 0x82, 0x91, 0x7f, 0x06, 0xda, 0xf2, 0x3b, 0xa1, 0x75, 0xfe,
	0x2a, 0x43, 0xb5, 0xf8, 0x34, 0x2e, 0xe7, 0x98, 0x4b, 0x50, 0x13, 0x2c, 0xf2, 0x74, 0x95, 0xd9,
	0x54, 0xef, 0xc8, 0x7d, 0x68, 0x16, 0xf0, 0x48, 0x35, 0x7f, 0x64, 0x89, 0x46, 0x56, 0x45, 0xc3,
	0x12, 0x6d, 0x84, 0x85, 0xa2, 0xba, 0x0f, 0x4d, 0x1d, 0x38, 0x1a, 0x56, 0x56, 0x0c, 0x0b, 0x64,
	0x4a, 0x43, 0x56, 0xe0, 0x76, 0x04, 0x84, 0x17, 0x60, 0xd0, 0xe6, 0x75, 0x65, 0xde, 0xd1, 0xe6,
	0xe7, 0x70, 0x1a, 0x96, 0xe8, 0x26, 0x3f, 0x07, 0xde, 0x0e, 0xb4, 0x64, 0x6b, 0x08, 0xa2, 0xa9,
	0xcb, 0x17, 0xb3, 0x9c, 0xcb, 0x33, 0x2f, 0x70, 0x53, 0xeb, 0x50, 0xa9, 0x22, 0x3b, 0xc6, 0x2c,
	0x08, 0x03, 0xa1, 0x78, 0x33, 0x29, 0x6e, 0x64, 0xd3, 0x56, 0x36, 0xd8, 0x65, 0xfe, 0x30, 0xa1,
	0xf6, 0x96, 0x79, 0xb0, 0x03, 0x75, 0xa5, 0x38, 0xf2, 0x35, 0x90, 0xd9, 0x96, 0x5c, 0x05, 0x45,
	0x44, 0x22, 0xbc, 0x70, 0xae, 0x60, 0x34, 0xe9, 0x52, 0x40, 0x3e, 0x81, 0x1a, 0x82, 0xa0, 0x81,
	0x6a, 0xf5, 0x70, 0x58, 0x45, 0xa0, 0x86, 0x25, 0xaa, 0x8f, 0xc9, 0x36, 0xd4, 0x10, 0xe6, 0x4e,
	0x55, 0x37, 0x66, 0x3d, 0xfb, 0x22, 0x17, 0x52, 0x13, 0x05, 0xe4, 0x01, 0x48, 0x42, 0x3c, 0x17,
	0x87, 0x17, 0x5d, 0x87, 0x4b, 0x04, 0xf3, 0x49, 0x12, 0x97, 0xc3, 0x12, 0x85, 0x30, 0xdf, 0x91,
	0x7d, 0xd0, 0xb5, 0x9d, 0x35, 0x76, 0x1c, 0x47, 0x6f, 0x9c, 0x33, 0xe7, 0xc1, 0x04, 0xfb, 0x3a,
	0x0e, 0x11, 0xba, 0x5a, 0x50, 0xd4, 0x75, 0x00, 0x96, 0x37, 0xac, 0x6f, 0xc6, 0xdd, 0x1f, 0x60,
	0xf3, 0x9c, 0x9b, 0xf7, 0x19, 0x07, 0x56, 0xd2, 0x46, 0xdb, 0xc2, 0x38, 0xa0, 0xbb, 0x08, 0x76,
	0x01, 0x44, 0x60, 0x70, 0x00, 0x57, 0x62, 0x3e, 0xcd, 0xe6, 0x08, 0x39, 0xf8, 0xe3, 0x94, 0x8f,
	0x39, 0x1d, 0x1a, 0x3f, 0x7d, 0x3a, 0x0d, 0xc4, 0xc9, 0xe2, 0xa8, 0x37, 0x89, 0xc3, 0x7e, 0xe1,
	0xe7, 0xc1, 0x1d, 0xfc, 0x79, 0x70, 0x7a, 0xf7, 0x6e, 0x7f, 0xaa, 0x7f, 0x9d, 0x1c, 0xd5, 0x94,
	0xec, 0xde, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xcf, 0xec, 0x3d, 0xbf, 0x0c, 0x00, 0x00,
}
