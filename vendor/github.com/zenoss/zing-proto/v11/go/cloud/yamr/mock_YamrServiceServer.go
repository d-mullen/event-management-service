// Code generated by mockery v1.0.0. DO NOT EDIT.

package yamr

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockYamrServiceServer is an autogenerated mock type for the YamrServiceServer type
type MockYamrServiceServer struct {
	mock.Mock
}

// Count provides a mock function with given fields: _a0, _a1
func (_m *MockYamrServiceServer) Count(_a0 context.Context, _a1 *CountRequest) (*CountResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *CountResponse
	if rf, ok := ret.Get(0).(func(context.Context, *CountRequest) *CountResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*CountResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *CountRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0, _a1
func (_m *MockYamrServiceServer) Get(_a0 context.Context, _a1 *GetRequest) (*GetResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetRequest) *GetResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBulk provides a mock function with given fields: _a0, _a1
func (_m *MockYamrServiceServer) GetBulk(_a0 context.Context, _a1 *GetBulkRequest) (*GetBulkResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetBulkResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetBulkRequest) *GetBulkResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetBulkResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetBulkRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Put provides a mock function with given fields: _a0, _a1
func (_m *MockYamrServiceServer) Put(_a0 context.Context, _a1 *PutRequest) (*PutResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *PutResponse
	if rf, ok := ret.Get(0).(func(context.Context, *PutRequest) *PutResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*PutResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *PutRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutBulk provides a mock function with given fields: _a0, _a1
func (_m *MockYamrServiceServer) PutBulk(_a0 context.Context, _a1 *PutBulkRequest) (*PutBulkResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *PutBulkResponse
	if rf, ok := ret.Get(0).(func(context.Context, *PutBulkRequest) *PutBulkResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*PutBulkResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *PutBulkRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Search provides a mock function with given fields: _a0, _a1
func (_m *MockYamrServiceServer) Search(_a0 context.Context, _a1 *SearchRequest) (*SearchResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *SearchResponse
	if rf, ok := ret.Get(0).(func(context.Context, *SearchRequest) *SearchResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*SearchResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *SearchRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StreamingSearch provides a mock function with given fields: _a0, _a1
func (_m *MockYamrServiceServer) StreamingSearch(_a0 *SearchRequest, _a1 YamrService_StreamingSearchServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*SearchRequest, YamrService_StreamingSearchServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
