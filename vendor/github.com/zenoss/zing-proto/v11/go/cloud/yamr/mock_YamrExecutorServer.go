// Code generated by mockery v2.12.2. DO NOT EDIT.

package yamr

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockYamrExecutorServer is an autogenerated mock type for the YamrExecutorServer type
type MockYamrExecutorServer struct {
	mock.Mock
}

type MockYamrExecutorServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockYamrExecutorServer) EXPECT() *MockYamrExecutorServer_Expecter {
	return &MockYamrExecutorServer_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *MockYamrExecutorServer) Execute(_a0 *YamrExecuteRequest, _a1 YamrExecutor_ExecuteServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*YamrExecuteRequest, YamrExecutor_ExecuteServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockYamrExecutorServer_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockYamrExecutorServer_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//  - _a0 *YamrExecuteRequest
//  - _a1 YamrExecutor_ExecuteServer
func (_e *MockYamrExecutorServer_Expecter) Execute(_a0 interface{}, _a1 interface{}) *MockYamrExecutorServer_Execute_Call {
	return &MockYamrExecutorServer_Execute_Call{Call: _e.mock.On("Execute", _a0, _a1)}
}

func (_c *MockYamrExecutorServer_Execute_Call) Run(run func(_a0 *YamrExecuteRequest, _a1 YamrExecutor_ExecuteServer)) *MockYamrExecutorServer_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*YamrExecuteRequest), args[1].(YamrExecutor_ExecuteServer))
	})
	return _c
}

func (_c *MockYamrExecutorServer_Execute_Call) Return(_a0 error) *MockYamrExecutorServer_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

// NewMockYamrExecutorServer creates a new instance of MockYamrExecutorServer. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockYamrExecutorServer(t testing.TB) *MockYamrExecutorServer {
	mock := &MockYamrExecutorServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
