// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zenoss/zing/proto/cloud/yamr_executor.proto

package yamr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type YamrExecuteRequest struct {
	Items                map[string]*YamrExecuteRequest_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *YamrExecuteRequest) Reset()         { *m = YamrExecuteRequest{} }
func (m *YamrExecuteRequest) String() string { return proto.CompactTextString(m) }
func (*YamrExecuteRequest) ProtoMessage()    {}
func (*YamrExecuteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bc65916a7dc9d51, []int{0}
}

func (m *YamrExecuteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrExecuteRequest.Unmarshal(m, b)
}
func (m *YamrExecuteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrExecuteRequest.Marshal(b, m, deterministic)
}
func (m *YamrExecuteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrExecuteRequest.Merge(m, src)
}
func (m *YamrExecuteRequest) XXX_Size() int {
	return xxx_messageInfo_YamrExecuteRequest.Size(m)
}
func (m *YamrExecuteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrExecuteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YamrExecuteRequest proto.InternalMessageInfo

func (m *YamrExecuteRequest) GetItems() map[string]*YamrExecuteRequest_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type YamrExecuteRequest_Input struct {
	When                 *When    `protobuf:"bytes,1,opt,name=when,proto3" json:"when,omitempty"`
	RowCount             int64    `protobuf:"varint,2,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamrExecuteRequest_Input) Reset()         { *m = YamrExecuteRequest_Input{} }
func (m *YamrExecuteRequest_Input) String() string { return proto.CompactTextString(m) }
func (*YamrExecuteRequest_Input) ProtoMessage()    {}
func (*YamrExecuteRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bc65916a7dc9d51, []int{0, 0}
}

func (m *YamrExecuteRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrExecuteRequest_Input.Unmarshal(m, b)
}
func (m *YamrExecuteRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrExecuteRequest_Input.Marshal(b, m, deterministic)
}
func (m *YamrExecuteRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrExecuteRequest_Input.Merge(m, src)
}
func (m *YamrExecuteRequest_Input) XXX_Size() int {
	return xxx_messageInfo_YamrExecuteRequest_Input.Size(m)
}
func (m *YamrExecuteRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrExecuteRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_YamrExecuteRequest_Input proto.InternalMessageInfo

func (m *YamrExecuteRequest_Input) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *YamrExecuteRequest_Input) GetRowCount() int64 {
	if m != nil {
		return m.RowCount
	}
	return 0
}

type YamrExecuteRequest_Item struct {
	Inputs               []*YamrExecuteRequest_Input `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *YamrExecuteRequest_Item) Reset()         { *m = YamrExecuteRequest_Item{} }
func (m *YamrExecuteRequest_Item) String() string { return proto.CompactTextString(m) }
func (*YamrExecuteRequest_Item) ProtoMessage()    {}
func (*YamrExecuteRequest_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bc65916a7dc9d51, []int{0, 1}
}

func (m *YamrExecuteRequest_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrExecuteRequest_Item.Unmarshal(m, b)
}
func (m *YamrExecuteRequest_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrExecuteRequest_Item.Marshal(b, m, deterministic)
}
func (m *YamrExecuteRequest_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrExecuteRequest_Item.Merge(m, src)
}
func (m *YamrExecuteRequest_Item) XXX_Size() int {
	return xxx_messageInfo_YamrExecuteRequest_Item.Size(m)
}
func (m *YamrExecuteRequest_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrExecuteRequest_Item.DiscardUnknown(m)
}

var xxx_messageInfo_YamrExecuteRequest_Item proto.InternalMessageInfo

func (m *YamrExecuteRequest_Item) GetInputs() []*YamrExecuteRequest_Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

type YamrExecuteResponse struct {
	Hash                 string                                      `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Ids                  map[string]*YamrExecuteResponse_IntervalSet `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DefinitionIds        map[string]*YamrExecuteResponse_IntervalSet `protobuf:"bytes,3,rep,name=definition_ids,json=definitionIds,proto3" json:"definition_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *YamrExecuteResponse) Reset()         { *m = YamrExecuteResponse{} }
func (m *YamrExecuteResponse) String() string { return proto.CompactTextString(m) }
func (*YamrExecuteResponse) ProtoMessage()    {}
func (*YamrExecuteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bc65916a7dc9d51, []int{1}
}

func (m *YamrExecuteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrExecuteResponse.Unmarshal(m, b)
}
func (m *YamrExecuteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrExecuteResponse.Marshal(b, m, deterministic)
}
func (m *YamrExecuteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrExecuteResponse.Merge(m, src)
}
func (m *YamrExecuteResponse) XXX_Size() int {
	return xxx_messageInfo_YamrExecuteResponse.Size(m)
}
func (m *YamrExecuteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrExecuteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YamrExecuteResponse proto.InternalMessageInfo

func (m *YamrExecuteResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *YamrExecuteResponse) GetIds() map[string]*YamrExecuteResponse_IntervalSet {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *YamrExecuteResponse) GetDefinitionIds() map[string]*YamrExecuteResponse_IntervalSet {
	if m != nil {
		return m.DefinitionIds
	}
	return nil
}

type YamrExecuteResponse_IntervalSet struct {
	Intervals            []uint64 `protobuf:"varint,1,rep,packed,name=intervals,proto3" json:"intervals,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamrExecuteResponse_IntervalSet) Reset()         { *m = YamrExecuteResponse_IntervalSet{} }
func (m *YamrExecuteResponse_IntervalSet) String() string { return proto.CompactTextString(m) }
func (*YamrExecuteResponse_IntervalSet) ProtoMessage()    {}
func (*YamrExecuteResponse_IntervalSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bc65916a7dc9d51, []int{1, 0}
}

func (m *YamrExecuteResponse_IntervalSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrExecuteResponse_IntervalSet.Unmarshal(m, b)
}
func (m *YamrExecuteResponse_IntervalSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrExecuteResponse_IntervalSet.Marshal(b, m, deterministic)
}
func (m *YamrExecuteResponse_IntervalSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrExecuteResponse_IntervalSet.Merge(m, src)
}
func (m *YamrExecuteResponse_IntervalSet) XXX_Size() int {
	return xxx_messageInfo_YamrExecuteResponse_IntervalSet.Size(m)
}
func (m *YamrExecuteResponse_IntervalSet) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrExecuteResponse_IntervalSet.DiscardUnknown(m)
}

var xxx_messageInfo_YamrExecuteResponse_IntervalSet proto.InternalMessageInfo

func (m *YamrExecuteResponse_IntervalSet) GetIntervals() []uint64 {
	if m != nil {
		return m.Intervals
	}
	return nil
}

func init() {
	proto.RegisterType((*YamrExecuteRequest)(nil), "zenoss.cloud.YamrExecuteRequest")
	proto.RegisterMapType((map[string]*YamrExecuteRequest_Item)(nil), "zenoss.cloud.YamrExecuteRequest.ItemsEntry")
	proto.RegisterType((*YamrExecuteRequest_Input)(nil), "zenoss.cloud.YamrExecuteRequest.Input")
	proto.RegisterType((*YamrExecuteRequest_Item)(nil), "zenoss.cloud.YamrExecuteRequest.Item")
	proto.RegisterType((*YamrExecuteResponse)(nil), "zenoss.cloud.YamrExecuteResponse")
	proto.RegisterMapType((map[string]*YamrExecuteResponse_IntervalSet)(nil), "zenoss.cloud.YamrExecuteResponse.DefinitionIdsEntry")
	proto.RegisterMapType((map[string]*YamrExecuteResponse_IntervalSet)(nil), "zenoss.cloud.YamrExecuteResponse.IdsEntry")
	proto.RegisterType((*YamrExecuteResponse_IntervalSet)(nil), "zenoss.cloud.YamrExecuteResponse.IntervalSet")
}

func init() {
	proto.RegisterFile("zenoss/zing/proto/cloud/yamr_executor.proto", fileDescriptor_8bc65916a7dc9d51)
}

var fileDescriptor_8bc65916a7dc9d51 = []byte{
	// 455 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0x4f, 0x6b, 0x13, 0x41,
	0x14, 0x67, 0xb3, 0x49, 0x6d, 0x5e, 0xaa, 0xc8, 0xf3, 0x12, 0x56, 0x0f, 0x6b, 0xc0, 0x12, 0x0c,
	0xdd, 0xb5, 0xd1, 0x83, 0xa8, 0x08, 0x5a, 0x2b, 0x04, 0x3c, 0x94, 0x55, 0x10, 0xf5, 0x10, 0xb7,
	0xd9, 0x67, 0x76, 0x30, 0x99, 0x89, 0x33, 0xb3, 0x89, 0xe9, 0x37, 0xf4, 0xe2, 0x67, 0x92, 0x99,
	0xd9, 0x34, 0x1b, 0x2a, 0x4d, 0x2e, 0xbd, 0xcd, 0x9f, 0xdf, 0xbf, 0x79, 0xcc, 0x0f, 0x7a, 0x17,
	0xc4, 0x85, 0x52, 0xf1, 0x05, 0xe3, 0xe3, 0x78, 0x26, 0x85, 0x16, 0xf1, 0x68, 0x22, 0x8a, 0x2c,
	0x5e, 0xa6, 0x53, 0x39, 0xa4, 0xdf, 0x34, 0x2a, 0xb4, 0x90, 0x91, 0xbd, 0xc1, 0x03, 0x07, 0x8e,
	0x2c, 0x22, 0xe8, 0x5c, 0x47, 0x75, 0x8c, 0xce, 0xdf, 0x1a, 0xe0, 0x97, 0x74, 0x2a, 0x4f, 0xad,
	0x10, 0x25, 0xf4, 0xab, 0x20, 0xa5, 0xf1, 0x0d, 0x34, 0x98, 0xa6, 0xa9, 0x6a, 0x7b, 0xa1, 0xdf,
	0x6d, 0xf5, 0x7b, 0x51, 0x55, 0x38, 0xba, 0x4a, 0x88, 0x06, 0x06, 0x7d, 0xca, 0xb5, 0x5c, 0x26,
	0x8e, 0x19, 0x7c, 0x80, 0xc6, 0x80, 0xcf, 0x0a, 0x8d, 0x87, 0x50, 0x5f, 0xe4, 0xc4, 0xdb, 0x5e,
	0xe8, 0x75, 0x5b, 0x7d, 0xdc, 0x94, 0xfa, 0x9c, 0x13, 0x4f, 0xec, 0x3d, 0xde, 0x87, 0xa6, 0x14,
	0x8b, 0xe1, 0x48, 0x14, 0x5c, 0xb7, 0x6b, 0xa1, 0xd7, 0xf5, 0x93, 0x7d, 0x29, 0x16, 0x27, 0x66,
	0x1f, 0xbc, 0x87, 0xba, 0xb1, 0xc0, 0xd7, 0xb0, 0xc7, 0x8c, 0xaa, 0x6a, 0xd7, 0x6c, 0xb2, 0xc3,
	0xed, 0xc9, 0x0c, 0x3c, 0x29, 0x59, 0xc1, 0x10, 0x60, 0x1d, 0x15, 0xef, 0x82, 0xff, 0x93, 0x96,
	0x36, 0x59, 0x33, 0x31, 0x4b, 0x7c, 0x09, 0x8d, 0x79, 0x3a, 0x29, 0xc8, 0x06, 0x68, 0xf5, 0x1f,
	0xed, 0xf4, 0xf0, 0xc4, 0x71, 0x5e, 0xd4, 0x9e, 0x7b, 0x9d, 0x3f, 0x3e, 0xdc, 0xdb, 0x80, 0xa9,
	0x99, 0xe0, 0x8a, 0x10, 0xa1, 0x9e, 0xa7, 0x2a, 0x2f, 0xbd, 0xec, 0x1a, 0x5f, 0x81, 0xcf, 0xb2,
	0xd5, 0x4b, 0x1e, 0x5f, 0x63, 0xe5, 0x34, 0xa2, 0x41, 0x56, 0x8e, 0xd8, 0xd0, 0xf0, 0x1b, 0xdc,
	0xc9, 0xe8, 0x07, 0xe3, 0x4c, 0x33, 0xc1, 0x87, 0x46, 0xc8, 0xb7, 0x42, 0xcf, 0xb6, 0x0b, 0xbd,
	0xbb, 0xe4, 0x5d, 0x4a, 0xde, 0xce, 0xaa, 0x67, 0x41, 0x0f, 0x5a, 0x03, 0xae, 0x49, 0xce, 0xd3,
	0xc9, 0x47, 0xd2, 0xf8, 0x00, 0x9a, 0xac, 0xdc, 0xba, 0x3f, 0x51, 0x4f, 0xd6, 0x07, 0x01, 0xc1,
	0xfe, 0x4a, 0xe7, 0x3f, 0x23, 0x3d, 0xd9, 0x1c, 0xe9, 0xd1, 0x0e, 0xef, 0x5c, 0x3b, 0x57, 0x46,
	0x1b, 0x08, 0xc0, 0xab, 0xc1, 0x6f, 0xd0, 0xb0, 0xff, 0x1d, 0x0e, 0xd6, 0x68, 0x21, 0xf1, 0x0c,
	0x6e, 0x95, 0x4c, 0x0c, 0xb7, 0x7d, 0x8c, 0xe0, 0xe1, 0x56, 0xdb, 0x27, 0xde, 0xdb, 0x4f, 0x10,
	0x0a, 0x39, 0x5e, 0x21, 0x4d, 0x51, 0x5d, 0x2f, 0x4b, 0x92, 0x29, 0xea, 0x99, 0xf7, 0x35, 0x1a,
	0x33, 0x9d, 0x17, 0xe7, 0xd1, 0x48, 0x4c, 0xe3, 0x4a, 0xa7, 0x8f, 0x5c, 0xa7, 0xe7, 0xc7, 0xc7,
	0xf1, 0xb8, 0x5a, 0xed, 0xf3, 0x3d, 0x7b, 0xf1, 0xf4, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12,
	0x42, 0x93, 0xd2, 0x3c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// YamrExecutorClient is the client API for YamrExecutor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YamrExecutorClient interface {
	Execute(ctx context.Context, in *YamrExecuteRequest, opts ...grpc.CallOption) (YamrExecutor_ExecuteClient, error)
}

type yamrExecutorClient struct {
	cc grpc.ClientConnInterface
}

func NewYamrExecutorClient(cc grpc.ClientConnInterface) YamrExecutorClient {
	return &yamrExecutorClient{cc}
}

func (c *yamrExecutorClient) Execute(ctx context.Context, in *YamrExecuteRequest, opts ...grpc.CallOption) (YamrExecutor_ExecuteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_YamrExecutor_serviceDesc.Streams[0], "/zenoss.cloud.YamrExecutor/Execute", opts...)
	if err != nil {
		return nil, err
	}
	x := &yamrExecutorExecuteClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type YamrExecutor_ExecuteClient interface {
	Recv() (*YamrExecuteResponse, error)
	grpc.ClientStream
}

type yamrExecutorExecuteClient struct {
	grpc.ClientStream
}

func (x *yamrExecutorExecuteClient) Recv() (*YamrExecuteResponse, error) {
	m := new(YamrExecuteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// YamrExecutorServer is the server API for YamrExecutor service.
type YamrExecutorServer interface {
	Execute(*YamrExecuteRequest, YamrExecutor_ExecuteServer) error
}

// UnimplementedYamrExecutorServer can be embedded to have forward compatible implementations.
type UnimplementedYamrExecutorServer struct {
}

func (*UnimplementedYamrExecutorServer) Execute(req *YamrExecuteRequest, srv YamrExecutor_ExecuteServer) error {
	return status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterYamrExecutorServer(s *grpc.Server, srv YamrExecutorServer) {
	s.RegisterService(&_YamrExecutor_serviceDesc, srv)
}

func _YamrExecutor_Execute_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(YamrExecuteRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(YamrExecutorServer).Execute(m, &yamrExecutorExecuteServer{stream})
}

type YamrExecutor_ExecuteServer interface {
	Send(*YamrExecuteResponse) error
	grpc.ServerStream
}

type yamrExecutorExecuteServer struct {
	grpc.ServerStream
}

func (x *yamrExecutorExecuteServer) Send(m *YamrExecuteResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _YamrExecutor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zenoss.cloud.YamrExecutor",
	HandlerType: (*YamrExecutorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Execute",
			Handler:       _YamrExecutor_Execute_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "zenoss/zing/proto/cloud/yamr_executor.proto",
}
