// Code generated by mockery v2.14.0. DO NOT EDIT.

package yamr

import mock "github.com/stretchr/testify/mock"

// mockIsSort_Sort is an autogenerated mock type for the isSort_Sort type
type mockIsSort_Sort struct {
	mock.Mock
}

type mockIsSort_Sort_Expecter struct {
	mock *mock.Mock
}

func (_m *mockIsSort_Sort) EXPECT() *mockIsSort_Sort_Expecter {
	return &mockIsSort_Sort_Expecter{mock: &_m.Mock}
}

// isSort_Sort provides a mock function with given fields:
func (_m *mockIsSort_Sort) isSort_Sort() {
	_m.Called()
}

// mockIsSort_Sort_isSort_Sort_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isSort_Sort'
type mockIsSort_Sort_isSort_Sort_Call struct {
	*mock.Call
}

// isSort_Sort is a helper method to define mock.On call
func (_e *mockIsSort_Sort_Expecter) isSort_Sort() *mockIsSort_Sort_isSort_Sort_Call {
	return &mockIsSort_Sort_isSort_Sort_Call{Call: _e.mock.On("isSort_Sort")}
}

func (_c *mockIsSort_Sort_isSort_Sort_Call) Run(run func()) *mockIsSort_Sort_isSort_Sort_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockIsSort_Sort_isSort_Sort_Call) Return() *mockIsSort_Sort_isSort_Sort_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTnewMockIsSort_Sort interface {
	mock.TestingT
	Cleanup(func())
}

// newMockIsSort_Sort creates a new instance of mockIsSort_Sort. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockIsSort_Sort(t mockConstructorTestingTnewMockIsSort_Sort) *mockIsSort_Sort {
	mock := &mockIsSort_Sort{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
