// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zenoss/zing/proto/cloud/yamr.proto

package yamr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/zenoss/zing-proto/v11/go/cloud/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BoundType int32

const (
	BoundType_UNBOUNDED BoundType = 0
	BoundType_CLOSED    BoundType = 1
	BoundType_OPEN      BoundType = 2
)

var BoundType_name = map[int32]string{
	0: "UNBOUNDED",
	1: "CLOSED",
	2: "OPEN",
}

var BoundType_value = map[string]int32{
	"UNBOUNDED": 0,
	"CLOSED":    1,
	"OPEN":      2,
}

func (x BoundType) String() string {
	return proto.EnumName(BoundType_name, int32(x))
}

func (BoundType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{0}
}

// Aggregator is the type of aggregator to apply to the field
type Aggregator int32

const (
	Aggregator_NONE  Aggregator = 0
	Aggregator_FIRST Aggregator = 1
	Aggregator_LAST  Aggregator = 2
	Aggregator_MIN   Aggregator = 3
	Aggregator_MAX   Aggregator = 4
)

var Aggregator_name = map[int32]string{
	0: "NONE",
	1: "FIRST",
	2: "LAST",
	3: "MIN",
	4: "MAX",
}

var Aggregator_value = map[string]int32{
	"NONE":  0,
	"FIRST": 1,
	"LAST":  2,
	"MIN":   3,
	"MAX":   4,
}

func (x Aggregator) String() string {
	return proto.EnumName(Aggregator_name, int32(x))
}

func (Aggregator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{1}
}

type GraphDirection int32

const (
	GraphDirection_IN   GraphDirection = 0
	GraphDirection_OUT  GraphDirection = 1
	GraphDirection_BOTH GraphDirection = 2
)

var GraphDirection_name = map[int32]string{
	0: "IN",
	1: "OUT",
	2: "BOTH",
}

var GraphDirection_value = map[string]int32{
	"IN":   0,
	"OUT":  1,
	"BOTH": 2,
}

func (x GraphDirection) String() string {
	return proto.EnumName(GraphDirection_name, int32(x))
}

func (GraphDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{2}
}

type SearchRequest_PageInput_Direction int32

const (
	SearchRequest_PageInput_FORWARD  SearchRequest_PageInput_Direction = 0
	SearchRequest_PageInput_BACKWARD SearchRequest_PageInput_Direction = 1
)

var SearchRequest_PageInput_Direction_name = map[int32]string{
	0: "FORWARD",
	1: "BACKWARD",
}

var SearchRequest_PageInput_Direction_value = map[string]int32{
	"FORWARD":  0,
	"BACKWARD": 1,
}

func (x SearchRequest_PageInput_Direction) String() string {
	return proto.EnumName(SearchRequest_PageInput_Direction_name, int32(x))
}

func (SearchRequest_PageInput_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{4, 0, 0}
}

type Sort_Order int32

const (
	Sort_ASCENDING  Sort_Order = 0
	Sort_DESCENDING Sort_Order = 1
)

var Sort_Order_name = map[int32]string{
	0: "ASCENDING",
	1: "DESCENDING",
}

var Sort_Order_value = map[string]int32{
	"ASCENDING":  0,
	"DESCENDING": 1,
}

func (x Sort_Order) String() string {
	return proto.EnumName(Sort_Order_name, int32(x))
}

func (Sort_Order) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{24, 0}
}

type PutRequest struct {
	Item                 *YamrItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{0}
}

func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (m *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(m, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetItem() *YamrItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type PutResponse struct {
	Errors               []string `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	Retryable            bool     `protobuf:"varint,2,opt,name=retryable,proto3" json:"retryable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{1}
}

func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (m *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(m, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

func (m *PutResponse) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *PutResponse) GetRetryable() bool {
	if m != nil {
		return m.Retryable
	}
	return false
}

type PutBulkRequest struct {
	Items                []*YamrItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PutBulkRequest) Reset()         { *m = PutBulkRequest{} }
func (m *PutBulkRequest) String() string { return proto.CompactTextString(m) }
func (*PutBulkRequest) ProtoMessage()    {}
func (*PutBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{2}
}

func (m *PutBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutBulkRequest.Unmarshal(m, b)
}
func (m *PutBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutBulkRequest.Marshal(b, m, deterministic)
}
func (m *PutBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutBulkRequest.Merge(m, src)
}
func (m *PutBulkRequest) XXX_Size() int {
	return xxx_messageInfo_PutBulkRequest.Size(m)
}
func (m *PutBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutBulkRequest proto.InternalMessageInfo

func (m *PutBulkRequest) GetItems() []*YamrItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type PutBulkResponse struct {
	// Entries for items with errors
	Entries              []*PutBulkResponse_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PutBulkResponse) Reset()         { *m = PutBulkResponse{} }
func (m *PutBulkResponse) String() string { return proto.CompactTextString(m) }
func (*PutBulkResponse) ProtoMessage()    {}
func (*PutBulkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{3}
}

func (m *PutBulkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutBulkResponse.Unmarshal(m, b)
}
func (m *PutBulkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutBulkResponse.Marshal(b, m, deterministic)
}
func (m *PutBulkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutBulkResponse.Merge(m, src)
}
func (m *PutBulkResponse) XXX_Size() int {
	return xxx_messageInfo_PutBulkResponse.Size(m)
}
func (m *PutBulkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutBulkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutBulkResponse proto.InternalMessageInfo

func (m *PutBulkResponse) GetEntries() []*PutBulkResponse_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type PutBulkResponse_Entry struct {
	Id                   *YamrID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MessageId            string   `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Errors               []string `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	Retryable            bool     `protobuf:"varint,4,opt,name=retryable,proto3" json:"retryable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutBulkResponse_Entry) Reset()         { *m = PutBulkResponse_Entry{} }
func (m *PutBulkResponse_Entry) String() string { return proto.CompactTextString(m) }
func (*PutBulkResponse_Entry) ProtoMessage()    {}
func (*PutBulkResponse_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{3, 0}
}

func (m *PutBulkResponse_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutBulkResponse_Entry.Unmarshal(m, b)
}
func (m *PutBulkResponse_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutBulkResponse_Entry.Marshal(b, m, deterministic)
}
func (m *PutBulkResponse_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutBulkResponse_Entry.Merge(m, src)
}
func (m *PutBulkResponse_Entry) XXX_Size() int {
	return xxx_messageInfo_PutBulkResponse_Entry.Size(m)
}
func (m *PutBulkResponse_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_PutBulkResponse_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_PutBulkResponse_Entry proto.InternalMessageInfo

func (m *PutBulkResponse_Entry) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PutBulkResponse_Entry) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *PutBulkResponse_Entry) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *PutBulkResponse_Entry) GetRetryable() bool {
	if m != nil {
		return m.Retryable
	}
	return false
}

type SearchRequest struct {
	Query                *Query                   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Fields               []*Field                 `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Sorts                []*Sort                  `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	PageInput            *SearchRequest_PageInput `protobuf:"bytes,4,opt,name=page_input,json=pageInput,proto3" json:"page_input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{4}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SearchRequest) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *SearchRequest) GetSorts() []*Sort {
	if m != nil {
		return m.Sorts
	}
	return nil
}

func (m *SearchRequest) GetPageInput() *SearchRequest_PageInput {
	if m != nil {
		return m.PageInput
	}
	return nil
}

type SearchRequest_PageInput struct {
	Cursor               string                            `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Direction            SearchRequest_PageInput_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=zenoss.cloud.SearchRequest_PageInput_Direction" json:"direction,omitempty"`
	Limit                int64                             `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SearchRequest_PageInput) Reset()         { *m = SearchRequest_PageInput{} }
func (m *SearchRequest_PageInput) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_PageInput) ProtoMessage()    {}
func (*SearchRequest_PageInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{4, 0}
}

func (m *SearchRequest_PageInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_PageInput.Unmarshal(m, b)
}
func (m *SearchRequest_PageInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_PageInput.Marshal(b, m, deterministic)
}
func (m *SearchRequest_PageInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_PageInput.Merge(m, src)
}
func (m *SearchRequest_PageInput) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_PageInput.Size(m)
}
func (m *SearchRequest_PageInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_PageInput.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_PageInput proto.InternalMessageInfo

func (m *SearchRequest_PageInput) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *SearchRequest_PageInput) GetDirection() SearchRequest_PageInput_Direction {
	if m != nil {
		return m.Direction
	}
	return SearchRequest_PageInput_FORWARD
}

func (m *SearchRequest_PageInput) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type SearchResponse struct {
	Results              []*YamrResult            `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	PageInfo             *SearchResponse_PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{5}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetResults() []*YamrResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *SearchResponse) GetPageInfo() *SearchResponse_PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

type SearchResponse_PageInfo struct {
	StartCursor          string   `protobuf:"bytes,1,opt,name=start_cursor,json=startCursor,proto3" json:"start_cursor,omitempty"`
	EndCursor            string   `protobuf:"bytes,2,opt,name=end_cursor,json=endCursor,proto3" json:"end_cursor,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	HasPrev              bool     `protobuf:"varint,4,opt,name=has_prev,json=hasPrev,proto3" json:"has_prev,omitempty"`
	HasNext              bool     `protobuf:"varint,5,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	TotalCount           int64    `protobuf:"varint,6,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse_PageInfo) Reset()         { *m = SearchResponse_PageInfo{} }
func (m *SearchResponse_PageInfo) String() string { return proto.CompactTextString(m) }
func (*SearchResponse_PageInfo) ProtoMessage()    {}
func (*SearchResponse_PageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{5, 0}
}

func (m *SearchResponse_PageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse_PageInfo.Unmarshal(m, b)
}
func (m *SearchResponse_PageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse_PageInfo.Marshal(b, m, deterministic)
}
func (m *SearchResponse_PageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse_PageInfo.Merge(m, src)
}
func (m *SearchResponse_PageInfo) XXX_Size() int {
	return xxx_messageInfo_SearchResponse_PageInfo.Size(m)
}
func (m *SearchResponse_PageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse_PageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse_PageInfo proto.InternalMessageInfo

func (m *SearchResponse_PageInfo) GetStartCursor() string {
	if m != nil {
		return m.StartCursor
	}
	return ""
}

func (m *SearchResponse_PageInfo) GetEndCursor() string {
	if m != nil {
		return m.EndCursor
	}
	return ""
}

func (m *SearchResponse_PageInfo) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SearchResponse_PageInfo) GetHasPrev() bool {
	if m != nil {
		return m.HasPrev
	}
	return false
}

func (m *SearchResponse_PageInfo) GetHasNext() bool {
	if m != nil {
		return m.HasNext
	}
	return false
}

func (m *SearchResponse_PageInfo) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetRequest struct {
	Id                   *YamrID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	When                 *When    `protobuf:"bytes,4,opt,name=when,proto3" json:"when,omitempty"`
	Fields               []*Field `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{6}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GetRequest) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *GetRequest) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

type GetResponse struct {
	Result               *YamrResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{7}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetResult() *YamrResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetBulkRequest struct {
	Ids                  []*YamrID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	When                 *When     `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
	Fields               []*Field  `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetBulkRequest) Reset()         { *m = GetBulkRequest{} }
func (m *GetBulkRequest) String() string { return proto.CompactTextString(m) }
func (*GetBulkRequest) ProtoMessage()    {}
func (*GetBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{8}
}

func (m *GetBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBulkRequest.Unmarshal(m, b)
}
func (m *GetBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBulkRequest.Marshal(b, m, deterministic)
}
func (m *GetBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBulkRequest.Merge(m, src)
}
func (m *GetBulkRequest) XXX_Size() int {
	return xxx_messageInfo_GetBulkRequest.Size(m)
}
func (m *GetBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBulkRequest proto.InternalMessageInfo

func (m *GetBulkRequest) GetIds() []*YamrID {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetBulkRequest) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *GetBulkRequest) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

type GetBulkResponse struct {
	Results              []*YamrResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetBulkResponse) Reset()         { *m = GetBulkResponse{} }
func (m *GetBulkResponse) String() string { return proto.CompactTextString(m) }
func (*GetBulkResponse) ProtoMessage()    {}
func (*GetBulkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{9}
}

func (m *GetBulkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBulkResponse.Unmarshal(m, b)
}
func (m *GetBulkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBulkResponse.Marshal(b, m, deterministic)
}
func (m *GetBulkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBulkResponse.Merge(m, src)
}
func (m *GetBulkResponse) XXX_Size() int {
	return xxx_messageInfo_GetBulkResponse.Size(m)
}
func (m *GetBulkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBulkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBulkResponse proto.InternalMessageInfo

func (m *GetBulkResponse) GetResults() []*YamrResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type CountRequest struct {
	Query                *Query   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Field                *Field   `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Downsample           int64    `protobuf:"varint,3,opt,name=downsample,proto3" json:"downsample,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountRequest) Reset()         { *m = CountRequest{} }
func (m *CountRequest) String() string { return proto.CompactTextString(m) }
func (*CountRequest) ProtoMessage()    {}
func (*CountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{10}
}

func (m *CountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountRequest.Unmarshal(m, b)
}
func (m *CountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountRequest.Marshal(b, m, deterministic)
}
func (m *CountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountRequest.Merge(m, src)
}
func (m *CountRequest) XXX_Size() int {
	return xxx_messageInfo_CountRequest.Size(m)
}
func (m *CountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountRequest proto.InternalMessageInfo

func (m *CountRequest) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *CountRequest) GetField() *Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *CountRequest) GetDownsample() int64 {
	if m != nil {
		return m.Downsample
	}
	return 0
}

type CountResponse struct {
	Timestamps           []int64      `protobuf:"varint,1,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
	Counts               []*YamrCount `protobuf:"bytes,2,rep,name=counts,proto3" json:"counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CountResponse) Reset()         { *m = CountResponse{} }
func (m *CountResponse) String() string { return proto.CompactTextString(m) }
func (*CountResponse) ProtoMessage()    {}
func (*CountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{11}
}

func (m *CountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountResponse.Unmarshal(m, b)
}
func (m *CountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountResponse.Marshal(b, m, deterministic)
}
func (m *CountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountResponse.Merge(m, src)
}
func (m *CountResponse) XXX_Size() int {
	return xxx_messageInfo_CountResponse.Size(m)
}
func (m *CountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountResponse proto.InternalMessageInfo

func (m *CountResponse) GetTimestamps() []int64 {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *CountResponse) GetCounts() []*YamrCount {
	if m != nil {
		return m.Counts
	}
	return nil
}

type SuggestRequest struct {
	Suggest              *Suggest `protobuf:"bytes,7,opt,name=suggest,proto3" json:"suggest,omitempty"`
	Limit                int64    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	NoCount              bool     `protobuf:"varint,8,opt,name=no_count,json=noCount,proto3" json:"no_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestRequest) Reset()         { *m = SuggestRequest{} }
func (m *SuggestRequest) String() string { return proto.CompactTextString(m) }
func (*SuggestRequest) ProtoMessage()    {}
func (*SuggestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{12}
}

func (m *SuggestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestRequest.Unmarshal(m, b)
}
func (m *SuggestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestRequest.Marshal(b, m, deterministic)
}
func (m *SuggestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestRequest.Merge(m, src)
}
func (m *SuggestRequest) XXX_Size() int {
	return xxx_messageInfo_SuggestRequest.Size(m)
}
func (m *SuggestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestRequest proto.InternalMessageInfo

func (m *SuggestRequest) GetSuggest() *Suggest {
	if m != nil {
		return m.Suggest
	}
	return nil
}

func (m *SuggestRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SuggestRequest) GetNoCount() bool {
	if m != nil {
		return m.NoCount
	}
	return false
}

type SuggestResponse struct {
	Results              []*SuggestResponse_Result `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SuggestResponse) Reset()         { *m = SuggestResponse{} }
func (m *SuggestResponse) String() string { return proto.CompactTextString(m) }
func (*SuggestResponse) ProtoMessage()    {}
func (*SuggestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{13}
}

func (m *SuggestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestResponse.Unmarshal(m, b)
}
func (m *SuggestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestResponse.Marshal(b, m, deterministic)
}
func (m *SuggestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestResponse.Merge(m, src)
}
func (m *SuggestResponse) XXX_Size() int {
	return xxx_messageInfo_SuggestResponse.Size(m)
}
func (m *SuggestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestResponse proto.InternalMessageInfo

func (m *SuggestResponse) GetResults() []*SuggestResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type SuggestResponse_Result struct {
	Tenant               string         `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Type                 string         `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Field                string         `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	Value                *common.Scalar `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Count                int64          `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SuggestResponse_Result) Reset()         { *m = SuggestResponse_Result{} }
func (m *SuggestResponse_Result) String() string { return proto.CompactTextString(m) }
func (*SuggestResponse_Result) ProtoMessage()    {}
func (*SuggestResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{13, 0}
}

func (m *SuggestResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestResponse_Result.Unmarshal(m, b)
}
func (m *SuggestResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestResponse_Result.Marshal(b, m, deterministic)
}
func (m *SuggestResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestResponse_Result.Merge(m, src)
}
func (m *SuggestResponse_Result) XXX_Size() int {
	return xxx_messageInfo_SuggestResponse_Result.Size(m)
}
func (m *SuggestResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestResponse_Result proto.InternalMessageInfo

func (m *SuggestResponse_Result) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *SuggestResponse_Result) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SuggestResponse_Result) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *SuggestResponse_Result) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SuggestResponse_Result) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type FrequencyRequest struct {
	Query                *Query   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Fields               []*Field `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	GroupBy              []*Field `protobuf:"bytes,3,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Downsample           int64    `protobuf:"varint,4,opt,name=downsample,proto3" json:"downsample,omitempty"`
	PersistCounts        bool     `protobuf:"varint,5,opt,name=persist_counts,json=persistCounts,proto3" json:"persist_counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrequencyRequest) Reset()         { *m = FrequencyRequest{} }
func (m *FrequencyRequest) String() string { return proto.CompactTextString(m) }
func (*FrequencyRequest) ProtoMessage()    {}
func (*FrequencyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{14}
}

func (m *FrequencyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrequencyRequest.Unmarshal(m, b)
}
func (m *FrequencyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrequencyRequest.Marshal(b, m, deterministic)
}
func (m *FrequencyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrequencyRequest.Merge(m, src)
}
func (m *FrequencyRequest) XXX_Size() int {
	return xxx_messageInfo_FrequencyRequest.Size(m)
}
func (m *FrequencyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FrequencyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FrequencyRequest proto.InternalMessageInfo

func (m *FrequencyRequest) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *FrequencyRequest) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *FrequencyRequest) GetGroupBy() []*Field {
	if m != nil {
		return m.GroupBy
	}
	return nil
}

func (m *FrequencyRequest) GetDownsample() int64 {
	if m != nil {
		return m.Downsample
	}
	return 0
}

func (m *FrequencyRequest) GetPersistCounts() bool {
	if m != nil {
		return m.PersistCounts
	}
	return false
}

type FrequencyResponse struct {
	Timestamps           []int64                     `protobuf:"varint,1,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
	Results              []*FrequencyResponse_Result `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *FrequencyResponse) Reset()         { *m = FrequencyResponse{} }
func (m *FrequencyResponse) String() string { return proto.CompactTextString(m) }
func (*FrequencyResponse) ProtoMessage()    {}
func (*FrequencyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{15}
}

func (m *FrequencyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrequencyResponse.Unmarshal(m, b)
}
func (m *FrequencyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrequencyResponse.Marshal(b, m, deterministic)
}
func (m *FrequencyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrequencyResponse.Merge(m, src)
}
func (m *FrequencyResponse) XXX_Size() int {
	return xxx_messageInfo_FrequencyResponse.Size(m)
}
func (m *FrequencyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FrequencyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FrequencyResponse proto.InternalMessageInfo

func (m *FrequencyResponse) GetTimestamps() []int64 {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *FrequencyResponse) GetResults() []*FrequencyResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type FrequencyResponse_Result struct {
	Key                  map[string]*common.Scalar `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Values               []int64                   `protobuf:"varint,2,rep,packed,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *FrequencyResponse_Result) Reset()         { *m = FrequencyResponse_Result{} }
func (m *FrequencyResponse_Result) String() string { return proto.CompactTextString(m) }
func (*FrequencyResponse_Result) ProtoMessage()    {}
func (*FrequencyResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{15, 0}
}

func (m *FrequencyResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrequencyResponse_Result.Unmarshal(m, b)
}
func (m *FrequencyResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrequencyResponse_Result.Marshal(b, m, deterministic)
}
func (m *FrequencyResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrequencyResponse_Result.Merge(m, src)
}
func (m *FrequencyResponse_Result) XXX_Size() int {
	return xxx_messageInfo_FrequencyResponse_Result.Size(m)
}
func (m *FrequencyResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_FrequencyResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_FrequencyResponse_Result proto.InternalMessageInfo

func (m *FrequencyResponse_Result) GetKey() map[string]*common.Scalar {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *FrequencyResponse_Result) GetValues() []int64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type YamrID struct {
	Tenant               string   `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamrID) Reset()         { *m = YamrID{} }
func (m *YamrID) String() string { return proto.CompactTextString(m) }
func (*YamrID) ProtoMessage()    {}
func (*YamrID) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{16}
}

func (m *YamrID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrID.Unmarshal(m, b)
}
func (m *YamrID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrID.Marshal(b, m, deterministic)
}
func (m *YamrID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrID.Merge(m, src)
}
func (m *YamrID) XXX_Size() int {
	return xxx_messageInfo_YamrID.Size(m)
}
func (m *YamrID) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrID.DiscardUnknown(m)
}

var xxx_messageInfo_YamrID proto.InternalMessageInfo

func (m *YamrID) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *YamrID) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *YamrID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type YamrNamedEdge struct {
	Tenant               string   `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamrNamedEdge) Reset()         { *m = YamrNamedEdge{} }
func (m *YamrNamedEdge) String() string { return proto.CompactTextString(m) }
func (*YamrNamedEdge) ProtoMessage()    {}
func (*YamrNamedEdge) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{17}
}

func (m *YamrNamedEdge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrNamedEdge.Unmarshal(m, b)
}
func (m *YamrNamedEdge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrNamedEdge.Marshal(b, m, deterministic)
}
func (m *YamrNamedEdge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrNamedEdge.Merge(m, src)
}
func (m *YamrNamedEdge) XXX_Size() int {
	return xxx_messageInfo_YamrNamedEdge.Size(m)
}
func (m *YamrNamedEdge) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrNamedEdge.DiscardUnknown(m)
}

var xxx_messageInfo_YamrNamedEdge proto.InternalMessageInfo

func (m *YamrNamedEdge) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *YamrNamedEdge) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *YamrNamedEdge) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type YamrRelated struct {
	ToIds                []*YamrID        `protobuf:"bytes,1,rep,name=to_ids,json=toIds,proto3" json:"to_ids,omitempty"`
	FromIds              []*YamrID        `protobuf:"bytes,2,rep,name=from_ids,json=fromIds,proto3" json:"from_ids,omitempty"`
	ToEdges              []*YamrNamedEdge `protobuf:"bytes,3,rep,name=to_edges,json=toEdges,proto3" json:"to_edges,omitempty"`
	FromEdges            []*YamrNamedEdge `protobuf:"bytes,4,rep,name=from_edges,json=fromEdges,proto3" json:"from_edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *YamrRelated) Reset()         { *m = YamrRelated{} }
func (m *YamrRelated) String() string { return proto.CompactTextString(m) }
func (*YamrRelated) ProtoMessage()    {}
func (*YamrRelated) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{18}
}

func (m *YamrRelated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrRelated.Unmarshal(m, b)
}
func (m *YamrRelated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrRelated.Marshal(b, m, deterministic)
}
func (m *YamrRelated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrRelated.Merge(m, src)
}
func (m *YamrRelated) XXX_Size() int {
	return xxx_messageInfo_YamrRelated.Size(m)
}
func (m *YamrRelated) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrRelated.DiscardUnknown(m)
}

var xxx_messageInfo_YamrRelated proto.InternalMessageInfo

func (m *YamrRelated) GetToIds() []*YamrID {
	if m != nil {
		return m.ToIds
	}
	return nil
}

func (m *YamrRelated) GetFromIds() []*YamrID {
	if m != nil {
		return m.FromIds
	}
	return nil
}

func (m *YamrRelated) GetToEdges() []*YamrNamedEdge {
	if m != nil {
		return m.ToEdges
	}
	return nil
}

func (m *YamrRelated) GetFromEdges() []*YamrNamedEdge {
	if m != nil {
		return m.FromEdges
	}
	return nil
}

type YamrItem struct {
	Id                   *YamrID                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MessageId            string                         `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Timestamp            int64                          `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsDefinition         bool                           `protobuf:"varint,4,opt,name=is_definition,json=isDefinition,proto3" json:"is_definition,omitempty"`
	Delete               bool                           `protobuf:"varint,6,opt,name=delete,proto3" json:"delete,omitempty"`
	Definitions          []string                       `protobuf:"bytes,7,rep,name=definitions,proto3" json:"definitions,omitempty"`
	Relationships        map[string]*YamrRelated        `protobuf:"bytes,9,rep,name=relationships,proto3" json:"relationships,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data                 map[string]*common.ScalarArray `protobuf:"bytes,10,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *YamrItem) Reset()         { *m = YamrItem{} }
func (m *YamrItem) String() string { return proto.CompactTextString(m) }
func (*YamrItem) ProtoMessage()    {}
func (*YamrItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{19}
}

func (m *YamrItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrItem.Unmarshal(m, b)
}
func (m *YamrItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrItem.Marshal(b, m, deterministic)
}
func (m *YamrItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrItem.Merge(m, src)
}
func (m *YamrItem) XXX_Size() int {
	return xxx_messageInfo_YamrItem.Size(m)
}
func (m *YamrItem) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrItem.DiscardUnknown(m)
}

var xxx_messageInfo_YamrItem proto.InternalMessageInfo

func (m *YamrItem) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *YamrItem) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *YamrItem) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *YamrItem) GetIsDefinition() bool {
	if m != nil {
		return m.IsDefinition
	}
	return false
}

func (m *YamrItem) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

func (m *YamrItem) GetDefinitions() []string {
	if m != nil {
		return m.Definitions
	}
	return nil
}

func (m *YamrItem) GetRelationships() map[string]*YamrRelated {
	if m != nil {
		return m.Relationships
	}
	return nil
}

func (m *YamrItem) GetData() map[string]*common.ScalarArray {
	if m != nil {
		return m.Data
	}
	return nil
}

type YamrResult struct {
	Id                   *YamrID                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Values               []*YamrResult_Value       `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	Metadata             map[string]*common.Scalar `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *YamrResult) Reset()         { *m = YamrResult{} }
func (m *YamrResult) String() string { return proto.CompactTextString(m) }
func (*YamrResult) ProtoMessage()    {}
func (*YamrResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{20}
}

func (m *YamrResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrResult.Unmarshal(m, b)
}
func (m *YamrResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrResult.Marshal(b, m, deterministic)
}
func (m *YamrResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrResult.Merge(m, src)
}
func (m *YamrResult) XXX_Size() int {
	return xxx_messageInfo_YamrResult.Size(m)
}
func (m *YamrResult) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrResult.DiscardUnknown(m)
}

var xxx_messageInfo_YamrResult proto.InternalMessageInfo

func (m *YamrResult) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *YamrResult) GetValues() []*YamrResult_Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *YamrResult) GetMetadata() map[string]*common.Scalar {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type YamrResult_Value struct {
	When                 *When                          `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
	Data                 map[string]*common.ScalarArray `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *YamrResult_Value) Reset()         { *m = YamrResult_Value{} }
func (m *YamrResult_Value) String() string { return proto.CompactTextString(m) }
func (*YamrResult_Value) ProtoMessage()    {}
func (*YamrResult_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{20, 0}
}

func (m *YamrResult_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrResult_Value.Unmarshal(m, b)
}
func (m *YamrResult_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrResult_Value.Marshal(b, m, deterministic)
}
func (m *YamrResult_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrResult_Value.Merge(m, src)
}
func (m *YamrResult_Value) XXX_Size() int {
	return xxx_messageInfo_YamrResult_Value.Size(m)
}
func (m *YamrResult_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrResult_Value.DiscardUnknown(m)
}

var xxx_messageInfo_YamrResult_Value proto.InternalMessageInfo

func (m *YamrResult_Value) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *YamrResult_Value) GetData() map[string]*common.ScalarArray {
	if m != nil {
		return m.Data
	}
	return nil
}

type YamrCount struct {
	Buckets              []int64        `protobuf:"varint,2,rep,packed,name=buckets,proto3" json:"buckets,omitempty"`
	Value                *common.Scalar `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *YamrCount) Reset()         { *m = YamrCount{} }
func (m *YamrCount) String() string { return proto.CompactTextString(m) }
func (*YamrCount) ProtoMessage()    {}
func (*YamrCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{21}
}

func (m *YamrCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrCount.Unmarshal(m, b)
}
func (m *YamrCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrCount.Marshal(b, m, deterministic)
}
func (m *YamrCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrCount.Merge(m, src)
}
func (m *YamrCount) XXX_Size() int {
	return xxx_messageInfo_YamrCount.Size(m)
}
func (m *YamrCount) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrCount.DiscardUnknown(m)
}

var xxx_messageInfo_YamrCount proto.InternalMessageInfo

func (m *YamrCount) GetBuckets() []int64 {
	if m != nil {
		return m.Buckets
	}
	return nil
}

func (m *YamrCount) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type When struct {
	Lower                *When_Bound `protobuf:"bytes,1,opt,name=lower,proto3" json:"lower,omitempty"`
	Upper                *When_Bound `protobuf:"bytes,2,opt,name=upper,proto3" json:"upper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *When) Reset()         { *m = When{} }
func (m *When) String() string { return proto.CompactTextString(m) }
func (*When) ProtoMessage()    {}
func (*When) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{22}
}

func (m *When) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_When.Unmarshal(m, b)
}
func (m *When) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_When.Marshal(b, m, deterministic)
}
func (m *When) XXX_Merge(src proto.Message) {
	xxx_messageInfo_When.Merge(m, src)
}
func (m *When) XXX_Size() int {
	return xxx_messageInfo_When.Size(m)
}
func (m *When) XXX_DiscardUnknown() {
	xxx_messageInfo_When.DiscardUnknown(m)
}

var xxx_messageInfo_When proto.InternalMessageInfo

func (m *When) GetLower() *When_Bound {
	if m != nil {
		return m.Lower
	}
	return nil
}

func (m *When) GetUpper() *When_Bound {
	if m != nil {
		return m.Upper
	}
	return nil
}

type When_Bound struct {
	Time                 int64     `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	BoundType            BoundType `protobuf:"varint,2,opt,name=bound_type,json=boundType,proto3,enum=zenoss.cloud.BoundType" json:"bound_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *When_Bound) Reset()         { *m = When_Bound{} }
func (m *When_Bound) String() string { return proto.CompactTextString(m) }
func (*When_Bound) ProtoMessage()    {}
func (*When_Bound) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{22, 0}
}

func (m *When_Bound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_When_Bound.Unmarshal(m, b)
}
func (m *When_Bound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_When_Bound.Marshal(b, m, deterministic)
}
func (m *When_Bound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_When_Bound.Merge(m, src)
}
func (m *When_Bound) XXX_Size() int {
	return xxx_messageInfo_When_Bound.Size(m)
}
func (m *When_Bound) XXX_DiscardUnknown() {
	xxx_messageInfo_When_Bound.DiscardUnknown(m)
}

var xxx_messageInfo_When_Bound proto.InternalMessageInfo

func (m *When_Bound) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *When_Bound) GetBoundType() BoundType {
	if m != nil {
		return m.BoundType
	}
	return BoundType_UNBOUNDED
}

type Field struct {
	// Name of the field to return
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Optional aggregator to apply to the field
	Aggregator Aggregator `protobuf:"varint,2,opt,name=aggregator,proto3,enum=zenoss.cloud.Aggregator" json:"aggregator,omitempty"`
	// Optional label to name the field
	Label                string   `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Field) Reset()         { *m = Field{} }
func (m *Field) String() string { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()    {}
func (*Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{23}
}

func (m *Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Field.Unmarshal(m, b)
}
func (m *Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Field.Marshal(b, m, deterministic)
}
func (m *Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Field.Merge(m, src)
}
func (m *Field) XXX_Size() int {
	return xxx_messageInfo_Field.Size(m)
}
func (m *Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Field proto.InternalMessageInfo

func (m *Field) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Field) GetAggregator() Aggregator {
	if m != nil {
		return m.Aggregator
	}
	return Aggregator_NONE
}

func (m *Field) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type Sort struct {
	// Types that are valid to be assigned to Sort:
	//	*Sort_Aggregate_
	//	*Sort_Relevance_
	Sort                 isSort_Sort `protobuf_oneof:"sort"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Sort) Reset()         { *m = Sort{} }
func (m *Sort) String() string { return proto.CompactTextString(m) }
func (*Sort) ProtoMessage()    {}
func (*Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{24}
}

func (m *Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sort.Unmarshal(m, b)
}
func (m *Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sort.Marshal(b, m, deterministic)
}
func (m *Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sort.Merge(m, src)
}
func (m *Sort) XXX_Size() int {
	return xxx_messageInfo_Sort.Size(m)
}
func (m *Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_Sort proto.InternalMessageInfo

type isSort_Sort interface {
	isSort_Sort()
}

type Sort_Aggregate_ struct {
	Aggregate *Sort_Aggregate `protobuf:"bytes,6,opt,name=aggregate,proto3,oneof"`
}

type Sort_Relevance_ struct {
	Relevance *Sort_Relevance `protobuf:"bytes,7,opt,name=relevance,proto3,oneof"`
}

func (*Sort_Aggregate_) isSort_Sort() {}

func (*Sort_Relevance_) isSort_Sort() {}

func (m *Sort) GetSort() isSort_Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *Sort) GetAggregate() *Sort_Aggregate {
	if x, ok := m.GetSort().(*Sort_Aggregate_); ok {
		return x.Aggregate
	}
	return nil
}

func (m *Sort) GetRelevance() *Sort_Relevance {
	if x, ok := m.GetSort().(*Sort_Relevance_); ok {
		return x.Relevance
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Sort) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Sort_Aggregate_)(nil),
		(*Sort_Relevance_)(nil),
	}
}

type Sort_Aggregate struct {
	Field                string     `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Aggregator           Aggregator `protobuf:"varint,2,opt,name=aggregator,proto3,enum=zenoss.cloud.Aggregator" json:"aggregator,omitempty"`
	ValueOrder           Sort_Order `protobuf:"varint,3,opt,name=value_order,json=valueOrder,proto3,enum=zenoss.cloud.Sort_Order" json:"value_order,omitempty"`
	TemporalOrder        Sort_Order `protobuf:"varint,4,opt,name=temporal_order,json=temporalOrder,proto3,enum=zenoss.cloud.Sort_Order" json:"temporal_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Sort_Aggregate) Reset()         { *m = Sort_Aggregate{} }
func (m *Sort_Aggregate) String() string { return proto.CompactTextString(m) }
func (*Sort_Aggregate) ProtoMessage()    {}
func (*Sort_Aggregate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{24, 0}
}

func (m *Sort_Aggregate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sort_Aggregate.Unmarshal(m, b)
}
func (m *Sort_Aggregate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sort_Aggregate.Marshal(b, m, deterministic)
}
func (m *Sort_Aggregate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sort_Aggregate.Merge(m, src)
}
func (m *Sort_Aggregate) XXX_Size() int {
	return xxx_messageInfo_Sort_Aggregate.Size(m)
}
func (m *Sort_Aggregate) XXX_DiscardUnknown() {
	xxx_messageInfo_Sort_Aggregate.DiscardUnknown(m)
}

var xxx_messageInfo_Sort_Aggregate proto.InternalMessageInfo

func (m *Sort_Aggregate) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Sort_Aggregate) GetAggregator() Aggregator {
	if m != nil {
		return m.Aggregator
	}
	return Aggregator_NONE
}

func (m *Sort_Aggregate) GetValueOrder() Sort_Order {
	if m != nil {
		return m.ValueOrder
	}
	return Sort_ASCENDING
}

func (m *Sort_Aggregate) GetTemporalOrder() Sort_Order {
	if m != nil {
		return m.TemporalOrder
	}
	return Sort_ASCENDING
}

type Sort_Relevance struct {
	Key                  *YamrID  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Field                string   `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Limit                int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sort_Relevance) Reset()         { *m = Sort_Relevance{} }
func (m *Sort_Relevance) String() string { return proto.CompactTextString(m) }
func (*Sort_Relevance) ProtoMessage()    {}
func (*Sort_Relevance) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{24, 1}
}

func (m *Sort_Relevance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sort_Relevance.Unmarshal(m, b)
}
func (m *Sort_Relevance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sort_Relevance.Marshal(b, m, deterministic)
}
func (m *Sort_Relevance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sort_Relevance.Merge(m, src)
}
func (m *Sort_Relevance) XXX_Size() int {
	return xxx_messageInfo_Sort_Relevance.Size(m)
}
func (m *Sort_Relevance) XXX_DiscardUnknown() {
	xxx_messageInfo_Sort_Relevance.DiscardUnknown(m)
}

var xxx_messageInfo_Sort_Relevance proto.InternalMessageInfo

func (m *Sort_Relevance) GetKey() *YamrID {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Sort_Relevance) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Sort_Relevance) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Query struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Tenants              []string `protobuf:"bytes,2,rep,name=tenants,proto3" json:"tenants,omitempty"`
	When                 *When    `protobuf:"bytes,3,opt,name=when,proto3" json:"when,omitempty"`
	Subqueries           []*Query `protobuf:"bytes,4,rep,name=subqueries,proto3" json:"subqueries,omitempty"`
	Clause               *Clause  `protobuf:"bytes,5,opt,name=clause,proto3" json:"clause,omitempty"`
	Label                string   `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{25}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Query) GetTenants() []string {
	if m != nil {
		return m.Tenants
	}
	return nil
}

func (m *Query) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *Query) GetSubqueries() []*Query {
	if m != nil {
		return m.Subqueries
	}
	return nil
}

func (m *Query) GetClause() *Clause {
	if m != nil {
		return m.Clause
	}
	return nil
}

func (m *Query) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type Suggest struct {
	Type                 string         `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Tenants              []string       `protobuf:"bytes,2,rep,name=tenants,proto3" json:"tenants,omitempty"`
	When                 *When          `protobuf:"bytes,3,opt,name=when,proto3" json:"when,omitempty"`
	Scope                *Suggest_Scope `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	Criteria             []*Clause      `protobuf:"bytes,5,rep,name=criteria,proto3" json:"criteria,omitempty"`
	Label                string         `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Suggest) Reset()         { *m = Suggest{} }
func (m *Suggest) String() string { return proto.CompactTextString(m) }
func (*Suggest) ProtoMessage()    {}
func (*Suggest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{26}
}

func (m *Suggest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Suggest.Unmarshal(m, b)
}
func (m *Suggest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Suggest.Marshal(b, m, deterministic)
}
func (m *Suggest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Suggest.Merge(m, src)
}
func (m *Suggest) XXX_Size() int {
	return xxx_messageInfo_Suggest.Size(m)
}
func (m *Suggest) XXX_DiscardUnknown() {
	xxx_messageInfo_Suggest.DiscardUnknown(m)
}

var xxx_messageInfo_Suggest proto.InternalMessageInfo

func (m *Suggest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Suggest) GetTenants() []string {
	if m != nil {
		return m.Tenants
	}
	return nil
}

func (m *Suggest) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *Suggest) GetScope() *Suggest_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *Suggest) GetCriteria() []*Clause {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (m *Suggest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type Suggest_Scope struct {
	Subqueries           []*Query `protobuf:"bytes,1,rep,name=subqueries,proto3" json:"subqueries,omitempty"`
	Clause               *Clause  `protobuf:"bytes,2,opt,name=clause,proto3" json:"clause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Suggest_Scope) Reset()         { *m = Suggest_Scope{} }
func (m *Suggest_Scope) String() string { return proto.CompactTextString(m) }
func (*Suggest_Scope) ProtoMessage()    {}
func (*Suggest_Scope) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{26, 0}
}

func (m *Suggest_Scope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Suggest_Scope.Unmarshal(m, b)
}
func (m *Suggest_Scope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Suggest_Scope.Marshal(b, m, deterministic)
}
func (m *Suggest_Scope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Suggest_Scope.Merge(m, src)
}
func (m *Suggest_Scope) XXX_Size() int {
	return xxx_messageInfo_Suggest_Scope.Size(m)
}
func (m *Suggest_Scope) XXX_DiscardUnknown() {
	xxx_messageInfo_Suggest_Scope.DiscardUnknown(m)
}

var xxx_messageInfo_Suggest_Scope proto.InternalMessageInfo

func (m *Suggest_Scope) GetSubqueries() []*Query {
	if m != nil {
		return m.Subqueries
	}
	return nil
}

func (m *Suggest_Scope) GetClause() *Clause {
	if m != nil {
		return m.Clause
	}
	return nil
}

type Clause struct {
	Tenants []string `protobuf:"bytes,1,rep,name=tenants,proto3" json:"tenants,omitempty"`
	When    *When    `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
	// Types that are valid to be assigned to Clause:
	//	*Clause_And
	//	*Clause_Or
	//	*Clause_Not
	//	*Clause_Equals
	//	*Clause_Map
	//	*Clause_Range
	//	*Clause_Exists
	//	*Clause_Prefix
	//	*Clause_Regexp
	//	*Clause_Deleted
	//	*Clause_WithIds
	//	*Clause_RelatedTo
	//	*Clause_WithCursor
	Clause               isClause_Clause `protobuf_oneof:"clause"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Clause) Reset()         { *m = Clause{} }
func (m *Clause) String() string { return proto.CompactTextString(m) }
func (*Clause) ProtoMessage()    {}
func (*Clause) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{27}
}

func (m *Clause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clause.Unmarshal(m, b)
}
func (m *Clause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clause.Marshal(b, m, deterministic)
}
func (m *Clause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clause.Merge(m, src)
}
func (m *Clause) XXX_Size() int {
	return xxx_messageInfo_Clause.Size(m)
}
func (m *Clause) XXX_DiscardUnknown() {
	xxx_messageInfo_Clause.DiscardUnknown(m)
}

var xxx_messageInfo_Clause proto.InternalMessageInfo

func (m *Clause) GetTenants() []string {
	if m != nil {
		return m.Tenants
	}
	return nil
}

func (m *Clause) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

type isClause_Clause interface {
	isClause_Clause()
}

type Clause_And struct {
	And *And `protobuf:"bytes,3,opt,name=and,proto3,oneof"`
}

type Clause_Or struct {
	Or *Or `protobuf:"bytes,4,opt,name=or,proto3,oneof"`
}

type Clause_Not struct {
	Not *Not `protobuf:"bytes,5,opt,name=not,proto3,oneof"`
}

type Clause_Equals struct {
	Equals *Equals `protobuf:"bytes,6,opt,name=equals,proto3,oneof"`
}

type Clause_Map struct {
	Map *Map `protobuf:"bytes,7,opt,name=map,proto3,oneof"`
}

type Clause_Range struct {
	Range *Range `protobuf:"bytes,8,opt,name=range,proto3,oneof"`
}

type Clause_Exists struct {
	Exists *Exists `protobuf:"bytes,9,opt,name=exists,proto3,oneof"`
}

type Clause_Prefix struct {
	Prefix *Prefix `protobuf:"bytes,10,opt,name=prefix,proto3,oneof"`
}

type Clause_Regexp struct {
	Regexp *Regexp `protobuf:"bytes,11,opt,name=regexp,proto3,oneof"`
}

type Clause_Deleted struct {
	Deleted *Deleted `protobuf:"bytes,12,opt,name=deleted,proto3,oneof"`
}

type Clause_WithIds struct {
	WithIds *WithIDs `protobuf:"bytes,13,opt,name=with_ids,json=withIds,proto3,oneof"`
}

type Clause_RelatedTo struct {
	RelatedTo *RelatedTo `protobuf:"bytes,14,opt,name=related_to,json=relatedTo,proto3,oneof"`
}

type Clause_WithCursor struct {
	WithCursor *WithCursor `protobuf:"bytes,15,opt,name=with_cursor,json=withCursor,proto3,oneof"`
}

func (*Clause_And) isClause_Clause() {}

func (*Clause_Or) isClause_Clause() {}

func (*Clause_Not) isClause_Clause() {}

func (*Clause_Equals) isClause_Clause() {}

func (*Clause_Map) isClause_Clause() {}

func (*Clause_Range) isClause_Clause() {}

func (*Clause_Exists) isClause_Clause() {}

func (*Clause_Prefix) isClause_Clause() {}

func (*Clause_Regexp) isClause_Clause() {}

func (*Clause_Deleted) isClause_Clause() {}

func (*Clause_WithIds) isClause_Clause() {}

func (*Clause_RelatedTo) isClause_Clause() {}

func (*Clause_WithCursor) isClause_Clause() {}

func (m *Clause) GetClause() isClause_Clause {
	if m != nil {
		return m.Clause
	}
	return nil
}

func (m *Clause) GetAnd() *And {
	if x, ok := m.GetClause().(*Clause_And); ok {
		return x.And
	}
	return nil
}

func (m *Clause) GetOr() *Or {
	if x, ok := m.GetClause().(*Clause_Or); ok {
		return x.Or
	}
	return nil
}

func (m *Clause) GetNot() *Not {
	if x, ok := m.GetClause().(*Clause_Not); ok {
		return x.Not
	}
	return nil
}

func (m *Clause) GetEquals() *Equals {
	if x, ok := m.GetClause().(*Clause_Equals); ok {
		return x.Equals
	}
	return nil
}

func (m *Clause) GetMap() *Map {
	if x, ok := m.GetClause().(*Clause_Map); ok {
		return x.Map
	}
	return nil
}

func (m *Clause) GetRange() *Range {
	if x, ok := m.GetClause().(*Clause_Range); ok {
		return x.Range
	}
	return nil
}

func (m *Clause) GetExists() *Exists {
	if x, ok := m.GetClause().(*Clause_Exists); ok {
		return x.Exists
	}
	return nil
}

func (m *Clause) GetPrefix() *Prefix {
	if x, ok := m.GetClause().(*Clause_Prefix); ok {
		return x.Prefix
	}
	return nil
}

func (m *Clause) GetRegexp() *Regexp {
	if x, ok := m.GetClause().(*Clause_Regexp); ok {
		return x.Regexp
	}
	return nil
}

func (m *Clause) GetDeleted() *Deleted {
	if x, ok := m.GetClause().(*Clause_Deleted); ok {
		return x.Deleted
	}
	return nil
}

func (m *Clause) GetWithIds() *WithIDs {
	if x, ok := m.GetClause().(*Clause_WithIds); ok {
		return x.WithIds
	}
	return nil
}

func (m *Clause) GetRelatedTo() *RelatedTo {
	if x, ok := m.GetClause().(*Clause_RelatedTo); ok {
		return x.RelatedTo
	}
	return nil
}

func (m *Clause) GetWithCursor() *WithCursor {
	if x, ok := m.GetClause().(*Clause_WithCursor); ok {
		return x.WithCursor
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Clause) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Clause_And)(nil),
		(*Clause_Or)(nil),
		(*Clause_Not)(nil),
		(*Clause_Equals)(nil),
		(*Clause_Map)(nil),
		(*Clause_Range)(nil),
		(*Clause_Exists)(nil),
		(*Clause_Prefix)(nil),
		(*Clause_Regexp)(nil),
		(*Clause_Deleted)(nil),
		(*Clause_WithIds)(nil),
		(*Clause_RelatedTo)(nil),
		(*Clause_WithCursor)(nil),
	}
}

type And struct {
	Clauses              []*Clause `protobuf:"bytes,1,rep,name=clauses,proto3" json:"clauses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *And) Reset()         { *m = And{} }
func (m *And) String() string { return proto.CompactTextString(m) }
func (*And) ProtoMessage()    {}
func (*And) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{28}
}

func (m *And) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_And.Unmarshal(m, b)
}
func (m *And) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_And.Marshal(b, m, deterministic)
}
func (m *And) XXX_Merge(src proto.Message) {
	xxx_messageInfo_And.Merge(m, src)
}
func (m *And) XXX_Size() int {
	return xxx_messageInfo_And.Size(m)
}
func (m *And) XXX_DiscardUnknown() {
	xxx_messageInfo_And.DiscardUnknown(m)
}

var xxx_messageInfo_And proto.InternalMessageInfo

func (m *And) GetClauses() []*Clause {
	if m != nil {
		return m.Clauses
	}
	return nil
}

type Or struct {
	Clauses              []*Clause `protobuf:"bytes,1,rep,name=clauses,proto3" json:"clauses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Or) Reset()         { *m = Or{} }
func (m *Or) String() string { return proto.CompactTextString(m) }
func (*Or) ProtoMessage()    {}
func (*Or) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{29}
}

func (m *Or) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Or.Unmarshal(m, b)
}
func (m *Or) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Or.Marshal(b, m, deterministic)
}
func (m *Or) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Or.Merge(m, src)
}
func (m *Or) XXX_Size() int {
	return xxx_messageInfo_Or.Size(m)
}
func (m *Or) XXX_DiscardUnknown() {
	xxx_messageInfo_Or.DiscardUnknown(m)
}

var xxx_messageInfo_Or proto.InternalMessageInfo

func (m *Or) GetClauses() []*Clause {
	if m != nil {
		return m.Clauses
	}
	return nil
}

type Not struct {
	Clause               *Clause  `protobuf:"bytes,1,opt,name=clause,proto3" json:"clause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Not) Reset()         { *m = Not{} }
func (m *Not) String() string { return proto.CompactTextString(m) }
func (*Not) ProtoMessage()    {}
func (*Not) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{30}
}

func (m *Not) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Not.Unmarshal(m, b)
}
func (m *Not) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Not.Marshal(b, m, deterministic)
}
func (m *Not) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Not.Merge(m, src)
}
func (m *Not) XXX_Size() int {
	return xxx_messageInfo_Not.Size(m)
}
func (m *Not) XXX_DiscardUnknown() {
	xxx_messageInfo_Not.DiscardUnknown(m)
}

var xxx_messageInfo_Not proto.InternalMessageInfo

func (m *Not) GetClause() *Clause {
	if m != nil {
		return m.Clause
	}
	return nil
}

type Map struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	SubLabel             string   `protobuf:"bytes,2,opt,name=sub_label,json=subLabel,proto3" json:"sub_label,omitempty"`
	SubField             string   `protobuf:"bytes,3,opt,name=sub_field,json=subField,proto3" json:"sub_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Map) Reset()         { *m = Map{} }
func (m *Map) String() string { return proto.CompactTextString(m) }
func (*Map) ProtoMessage()    {}
func (*Map) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{31}
}

func (m *Map) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Map.Unmarshal(m, b)
}
func (m *Map) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Map.Marshal(b, m, deterministic)
}
func (m *Map) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Map.Merge(m, src)
}
func (m *Map) XXX_Size() int {
	return xxx_messageInfo_Map.Size(m)
}
func (m *Map) XXX_DiscardUnknown() {
	xxx_messageInfo_Map.DiscardUnknown(m)
}

var xxx_messageInfo_Map proto.InternalMessageInfo

func (m *Map) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Map) GetSubLabel() string {
	if m != nil {
		return m.SubLabel
	}
	return ""
}

func (m *Map) GetSubField() string {
	if m != nil {
		return m.SubField
	}
	return ""
}

type Deleted struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Deleted) Reset()         { *m = Deleted{} }
func (m *Deleted) String() string { return proto.CompactTextString(m) }
func (*Deleted) ProtoMessage()    {}
func (*Deleted) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{32}
}

func (m *Deleted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deleted.Unmarshal(m, b)
}
func (m *Deleted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deleted.Marshal(b, m, deterministic)
}
func (m *Deleted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deleted.Merge(m, src)
}
func (m *Deleted) XXX_Size() int {
	return xxx_messageInfo_Deleted.Size(m)
}
func (m *Deleted) XXX_DiscardUnknown() {
	xxx_messageInfo_Deleted.DiscardUnknown(m)
}

var xxx_messageInfo_Deleted proto.InternalMessageInfo

type Equals struct {
	Field                string         `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value                *common.Scalar `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Equals) Reset()         { *m = Equals{} }
func (m *Equals) String() string { return proto.CompactTextString(m) }
func (*Equals) ProtoMessage()    {}
func (*Equals) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{33}
}

func (m *Equals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Equals.Unmarshal(m, b)
}
func (m *Equals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Equals.Marshal(b, m, deterministic)
}
func (m *Equals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Equals.Merge(m, src)
}
func (m *Equals) XXX_Size() int {
	return xxx_messageInfo_Equals.Size(m)
}
func (m *Equals) XXX_DiscardUnknown() {
	xxx_messageInfo_Equals.DiscardUnknown(m)
}

var xxx_messageInfo_Equals proto.InternalMessageInfo

func (m *Equals) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Equals) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type Exists struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exists) Reset()         { *m = Exists{} }
func (m *Exists) String() string { return proto.CompactTextString(m) }
func (*Exists) ProtoMessage()    {}
func (*Exists) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{34}
}

func (m *Exists) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exists.Unmarshal(m, b)
}
func (m *Exists) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exists.Marshal(b, m, deterministic)
}
func (m *Exists) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exists.Merge(m, src)
}
func (m *Exists) XXX_Size() int {
	return xxx_messageInfo_Exists.Size(m)
}
func (m *Exists) XXX_DiscardUnknown() {
	xxx_messageInfo_Exists.DiscardUnknown(m)
}

var xxx_messageInfo_Exists proto.InternalMessageInfo

func (m *Exists) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

type WithIDs struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithIDs) Reset()         { *m = WithIDs{} }
func (m *WithIDs) String() string { return proto.CompactTextString(m) }
func (*WithIDs) ProtoMessage()    {}
func (*WithIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{35}
}

func (m *WithIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithIDs.Unmarshal(m, b)
}
func (m *WithIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithIDs.Marshal(b, m, deterministic)
}
func (m *WithIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithIDs.Merge(m, src)
}
func (m *WithIDs) XXX_Size() int {
	return xxx_messageInfo_WithIDs.Size(m)
}
func (m *WithIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_WithIDs.DiscardUnknown(m)
}

var xxx_messageInfo_WithIDs proto.InternalMessageInfo

func (m *WithIDs) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type WithCursor struct {
	Cursor               string   `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithCursor) Reset()         { *m = WithCursor{} }
func (m *WithCursor) String() string { return proto.CompactTextString(m) }
func (*WithCursor) ProtoMessage()    {}
func (*WithCursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{36}
}

func (m *WithCursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithCursor.Unmarshal(m, b)
}
func (m *WithCursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithCursor.Marshal(b, m, deterministic)
}
func (m *WithCursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithCursor.Merge(m, src)
}
func (m *WithCursor) XXX_Size() int {
	return xxx_messageInfo_WithCursor.Size(m)
}
func (m *WithCursor) XXX_DiscardUnknown() {
	xxx_messageInfo_WithCursor.DiscardUnknown(m)
}

var xxx_messageInfo_WithCursor proto.InternalMessageInfo

func (m *WithCursor) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

type Prefix struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	ValueMatcher         string   `protobuf:"bytes,2,opt,name=value_matcher,json=valueMatcher,proto3" json:"value_matcher,omitempty"`
	CaseInsensitive      bool     `protobuf:"varint,3,opt,name=case_insensitive,json=caseInsensitive,proto3" json:"case_insensitive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Prefix) Reset()         { *m = Prefix{} }
func (m *Prefix) String() string { return proto.CompactTextString(m) }
func (*Prefix) ProtoMessage()    {}
func (*Prefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{37}
}

func (m *Prefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prefix.Unmarshal(m, b)
}
func (m *Prefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prefix.Marshal(b, m, deterministic)
}
func (m *Prefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prefix.Merge(m, src)
}
func (m *Prefix) XXX_Size() int {
	return xxx_messageInfo_Prefix.Size(m)
}
func (m *Prefix) XXX_DiscardUnknown() {
	xxx_messageInfo_Prefix.DiscardUnknown(m)
}

var xxx_messageInfo_Prefix proto.InternalMessageInfo

func (m *Prefix) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Prefix) GetValueMatcher() string {
	if m != nil {
		return m.ValueMatcher
	}
	return ""
}

func (m *Prefix) GetCaseInsensitive() bool {
	if m != nil {
		return m.CaseInsensitive
	}
	return false
}

type Regexp struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	ValueMatcher         string   `protobuf:"bytes,2,opt,name=value_matcher,json=valueMatcher,proto3" json:"value_matcher,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Regexp) Reset()         { *m = Regexp{} }
func (m *Regexp) String() string { return proto.CompactTextString(m) }
func (*Regexp) ProtoMessage()    {}
func (*Regexp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{38}
}

func (m *Regexp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Regexp.Unmarshal(m, b)
}
func (m *Regexp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Regexp.Marshal(b, m, deterministic)
}
func (m *Regexp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Regexp.Merge(m, src)
}
func (m *Regexp) XXX_Size() int {
	return xxx_messageInfo_Regexp.Size(m)
}
func (m *Regexp) XXX_DiscardUnknown() {
	xxx_messageInfo_Regexp.DiscardUnknown(m)
}

var xxx_messageInfo_Regexp proto.InternalMessageInfo

func (m *Regexp) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Regexp) GetValueMatcher() string {
	if m != nil {
		return m.ValueMatcher
	}
	return ""
}

type Range struct {
	Field                string       `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Lower                *Range_Bound `protobuf:"bytes,2,opt,name=lower,proto3" json:"lower,omitempty"`
	Upper                *Range_Bound `protobuf:"bytes,3,opt,name=upper,proto3" json:"upper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Range) Reset()         { *m = Range{} }
func (m *Range) String() string { return proto.CompactTextString(m) }
func (*Range) ProtoMessage()    {}
func (*Range) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{39}
}

func (m *Range) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Range.Unmarshal(m, b)
}
func (m *Range) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Range.Marshal(b, m, deterministic)
}
func (m *Range) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Range.Merge(m, src)
}
func (m *Range) XXX_Size() int {
	return xxx_messageInfo_Range.Size(m)
}
func (m *Range) XXX_DiscardUnknown() {
	xxx_messageInfo_Range.DiscardUnknown(m)
}

var xxx_messageInfo_Range proto.InternalMessageInfo

func (m *Range) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Range) GetLower() *Range_Bound {
	if m != nil {
		return m.Lower
	}
	return nil
}

func (m *Range) GetUpper() *Range_Bound {
	if m != nil {
		return m.Upper
	}
	return nil
}

type Range_Bound struct {
	BoundType            BoundType      `protobuf:"varint,2,opt,name=bound_type,json=boundType,proto3,enum=zenoss.cloud.BoundType" json:"bound_type,omitempty"`
	Value                *common.Scalar `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Range_Bound) Reset()         { *m = Range_Bound{} }
func (m *Range_Bound) String() string { return proto.CompactTextString(m) }
func (*Range_Bound) ProtoMessage()    {}
func (*Range_Bound) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{39, 0}
}

func (m *Range_Bound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Range_Bound.Unmarshal(m, b)
}
func (m *Range_Bound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Range_Bound.Marshal(b, m, deterministic)
}
func (m *Range_Bound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Range_Bound.Merge(m, src)
}
func (m *Range_Bound) XXX_Size() int {
	return xxx_messageInfo_Range_Bound.Size(m)
}
func (m *Range_Bound) XXX_DiscardUnknown() {
	xxx_messageInfo_Range_Bound.DiscardUnknown(m)
}

var xxx_messageInfo_Range_Bound proto.InternalMessageInfo

func (m *Range_Bound) GetBoundType() BoundType {
	if m != nil {
		return m.BoundType
	}
	return BoundType_UNBOUNDED
}

func (m *Range_Bound) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type RelatedTo struct {
	Field                string         `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Id                   *YamrID        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Direction            GraphDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=zenoss.cloud.GraphDirection" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RelatedTo) Reset()         { *m = RelatedTo{} }
func (m *RelatedTo) String() string { return proto.CompactTextString(m) }
func (*RelatedTo) ProtoMessage()    {}
func (*RelatedTo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{40}
}

func (m *RelatedTo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelatedTo.Unmarshal(m, b)
}
func (m *RelatedTo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelatedTo.Marshal(b, m, deterministic)
}
func (m *RelatedTo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelatedTo.Merge(m, src)
}
func (m *RelatedTo) XXX_Size() int {
	return xxx_messageInfo_RelatedTo.Size(m)
}
func (m *RelatedTo) XXX_DiscardUnknown() {
	xxx_messageInfo_RelatedTo.DiscardUnknown(m)
}

var xxx_messageInfo_RelatedTo proto.InternalMessageInfo

func (m *RelatedTo) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *RelatedTo) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RelatedTo) GetDirection() GraphDirection {
	if m != nil {
		return m.Direction
	}
	return GraphDirection_IN
}

// A message that serves as input to the
//  field_index and value_index tables
// It represents one value for one field of a YamrItem
type IndexItem struct {
	// The id of the object
	Id *YamrID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The timestamp of this data
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Whether this message describes a definition
	IsDefinition bool `protobuf:"varint,3,opt,name=is_definition,json=isDefinition,proto3" json:"is_definition,omitempty"`
	// The field we are indexing
	Field string `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`
	// Whether or not this value is present at this time
	Presence bool `protobuf:"varint,6,opt,name=presence,proto3" json:"presence,omitempty"`
	// Original field name that was transformed
	OriginalField string `protobuf:"bytes,7,opt,name=original_field,json=originalField,proto3" json:"original_field,omitempty"`
	// Number of bytes zeroed out. Only set if transformed
	TrailingZeroCount int32 `protobuf:"varint,8,opt,name=trailing_zero_count,json=trailingZeroCount,proto3" json:"trailing_zero_count,omitempty"`
	// The value for this field
	Value *common.Scalar `protobuf:"bytes,9,opt,name=value,proto3" json:"value,omitempty"`
	// The interval that this change impacts
	When                 *When    `protobuf:"bytes,10,opt,name=when,proto3" json:"when,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexItem) Reset()         { *m = IndexItem{} }
func (m *IndexItem) String() string { return proto.CompactTextString(m) }
func (*IndexItem) ProtoMessage()    {}
func (*IndexItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d624d0eeba83565, []int{41}
}

func (m *IndexItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexItem.Unmarshal(m, b)
}
func (m *IndexItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexItem.Marshal(b, m, deterministic)
}
func (m *IndexItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexItem.Merge(m, src)
}
func (m *IndexItem) XXX_Size() int {
	return xxx_messageInfo_IndexItem.Size(m)
}
func (m *IndexItem) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexItem.DiscardUnknown(m)
}

var xxx_messageInfo_IndexItem proto.InternalMessageInfo

func (m *IndexItem) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *IndexItem) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *IndexItem) GetIsDefinition() bool {
	if m != nil {
		return m.IsDefinition
	}
	return false
}

func (m *IndexItem) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *IndexItem) GetPresence() bool {
	if m != nil {
		return m.Presence
	}
	return false
}

func (m *IndexItem) GetOriginalField() string {
	if m != nil {
		return m.OriginalField
	}
	return ""
}

func (m *IndexItem) GetTrailingZeroCount() int32 {
	if m != nil {
		return m.TrailingZeroCount
	}
	return 0
}

func (m *IndexItem) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *IndexItem) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

func init() {
	proto.RegisterEnum("zenoss.cloud.BoundType", BoundType_name, BoundType_value)
	proto.RegisterEnum("zenoss.cloud.Aggregator", Aggregator_name, Aggregator_value)
	proto.RegisterEnum("zenoss.cloud.GraphDirection", GraphDirection_name, GraphDirection_value)
	proto.RegisterEnum("zenoss.cloud.SearchRequest_PageInput_Direction", SearchRequest_PageInput_Direction_name, SearchRequest_PageInput_Direction_value)
	proto.RegisterEnum("zenoss.cloud.Sort_Order", Sort_Order_name, Sort_Order_value)
	proto.RegisterType((*PutRequest)(nil), "zenoss.cloud.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "zenoss.cloud.PutResponse")
	proto.RegisterType((*PutBulkRequest)(nil), "zenoss.cloud.PutBulkRequest")
	proto.RegisterType((*PutBulkResponse)(nil), "zenoss.cloud.PutBulkResponse")
	proto.RegisterType((*PutBulkResponse_Entry)(nil), "zenoss.cloud.PutBulkResponse.Entry")
	proto.RegisterType((*SearchRequest)(nil), "zenoss.cloud.SearchRequest")
	proto.RegisterType((*SearchRequest_PageInput)(nil), "zenoss.cloud.SearchRequest.PageInput")
	proto.RegisterType((*SearchResponse)(nil), "zenoss.cloud.SearchResponse")
	proto.RegisterType((*SearchResponse_PageInfo)(nil), "zenoss.cloud.SearchResponse.PageInfo")
	proto.RegisterType((*GetRequest)(nil), "zenoss.cloud.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "zenoss.cloud.GetResponse")
	proto.RegisterType((*GetBulkRequest)(nil), "zenoss.cloud.GetBulkRequest")
	proto.RegisterType((*GetBulkResponse)(nil), "zenoss.cloud.GetBulkResponse")
	proto.RegisterType((*CountRequest)(nil), "zenoss.cloud.CountRequest")
	proto.RegisterType((*CountResponse)(nil), "zenoss.cloud.CountResponse")
	proto.RegisterType((*SuggestRequest)(nil), "zenoss.cloud.SuggestRequest")
	proto.RegisterType((*SuggestResponse)(nil), "zenoss.cloud.SuggestResponse")
	proto.RegisterType((*SuggestResponse_Result)(nil), "zenoss.cloud.SuggestResponse.Result")
	proto.RegisterType((*FrequencyRequest)(nil), "zenoss.cloud.FrequencyRequest")
	proto.RegisterType((*FrequencyResponse)(nil), "zenoss.cloud.FrequencyResponse")
	proto.RegisterType((*FrequencyResponse_Result)(nil), "zenoss.cloud.FrequencyResponse.Result")
	proto.RegisterMapType((map[string]*common.Scalar)(nil), "zenoss.cloud.FrequencyResponse.Result.KeyEntry")
	proto.RegisterType((*YamrID)(nil), "zenoss.cloud.YamrID")
	proto.RegisterType((*YamrNamedEdge)(nil), "zenoss.cloud.YamrNamedEdge")
	proto.RegisterType((*YamrRelated)(nil), "zenoss.cloud.YamrRelated")
	proto.RegisterType((*YamrItem)(nil), "zenoss.cloud.YamrItem")
	proto.RegisterMapType((map[string]*common.ScalarArray)(nil), "zenoss.cloud.YamrItem.DataEntry")
	proto.RegisterMapType((map[string]*YamrRelated)(nil), "zenoss.cloud.YamrItem.RelationshipsEntry")
	proto.RegisterType((*YamrResult)(nil), "zenoss.cloud.YamrResult")
	proto.RegisterMapType((map[string]*common.Scalar)(nil), "zenoss.cloud.YamrResult.MetadataEntry")
	proto.RegisterType((*YamrResult_Value)(nil), "zenoss.cloud.YamrResult.Value")
	proto.RegisterMapType((map[string]*common.ScalarArray)(nil), "zenoss.cloud.YamrResult.Value.DataEntry")
	proto.RegisterType((*YamrCount)(nil), "zenoss.cloud.YamrCount")
	proto.RegisterType((*When)(nil), "zenoss.cloud.When")
	proto.RegisterType((*When_Bound)(nil), "zenoss.cloud.When.Bound")
	proto.RegisterType((*Field)(nil), "zenoss.cloud.Field")
	proto.RegisterType((*Sort)(nil), "zenoss.cloud.Sort")
	proto.RegisterType((*Sort_Aggregate)(nil), "zenoss.cloud.Sort.Aggregate")
	proto.RegisterType((*Sort_Relevance)(nil), "zenoss.cloud.Sort.Relevance")
	proto.RegisterType((*Query)(nil), "zenoss.cloud.Query")
	proto.RegisterType((*Suggest)(nil), "zenoss.cloud.Suggest")
	proto.RegisterType((*Suggest_Scope)(nil), "zenoss.cloud.Suggest.Scope")
	proto.RegisterType((*Clause)(nil), "zenoss.cloud.Clause")
	proto.RegisterType((*And)(nil), "zenoss.cloud.And")
	proto.RegisterType((*Or)(nil), "zenoss.cloud.Or")
	proto.RegisterType((*Not)(nil), "zenoss.cloud.Not")
	proto.RegisterType((*Map)(nil), "zenoss.cloud.Map")
	proto.RegisterType((*Deleted)(nil), "zenoss.cloud.Deleted")
	proto.RegisterType((*Equals)(nil), "zenoss.cloud.Equals")
	proto.RegisterType((*Exists)(nil), "zenoss.cloud.Exists")
	proto.RegisterType((*WithIDs)(nil), "zenoss.cloud.WithIDs")
	proto.RegisterType((*WithCursor)(nil), "zenoss.cloud.WithCursor")
	proto.RegisterType((*Prefix)(nil), "zenoss.cloud.Prefix")
	proto.RegisterType((*Regexp)(nil), "zenoss.cloud.Regexp")
	proto.RegisterType((*Range)(nil), "zenoss.cloud.Range")
	proto.RegisterType((*Range_Bound)(nil), "zenoss.cloud.Range.Bound")
	proto.RegisterType((*RelatedTo)(nil), "zenoss.cloud.RelatedTo")
	proto.RegisterType((*IndexItem)(nil), "zenoss.cloud.IndexItem")
}

func init() {
	proto.RegisterFile("zenoss/zing/proto/cloud/yamr.proto", fileDescriptor_3d624d0eeba83565)
}

var fileDescriptor_3d624d0eeba83565 = []byte{
	// 2740 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcf, 0x73, 0xdb, 0xc6,
	0xf5, 0x17, 0x7e, 0x12, 0x78, 0x94, 0x68, 0x66, 0xe3, 0x6f, 0xc2, 0xd0, 0x8e, 0xbf, 0x2a, 0x62,
	0x7b, 0x6c, 0x27, 0x25, 0x6d, 0x25, 0xcd, 0xb8, 0x6e, 0x7e, 0x49, 0xa2, 0x6c, 0xc9, 0xb1, 0x29,
	0x05, 0xb2, 0xeb, 0x36, 0x3d, 0xb0, 0x10, 0xb1, 0xa6, 0xd0, 0x90, 0x00, 0xbc, 0x58, 0xca, 0x96,
	0x8f, 0x6d, 0x67, 0x3a, 0xd3, 0x1f, 0x33, 0xfd, 0x1b, 0x7a, 0xeb, 0xad, 0x9d, 0x5e, 0xda, 0xe9,
	0xb5, 0xd3, 0x1e, 0x7a, 0x6e, 0x73, 0xec, 0xf4, 0xde, 0xe9, 0xa1, 0x7f, 0x41, 0x67, 0x7f, 0x00,
	0x04, 0x21, 0x50, 0x94, 0x9c, 0x64, 0xa6, 0x27, 0x71, 0x77, 0x3f, 0xef, 0xe1, 0xbd, 0xb7, 0x6f,
	0xdf, 0x7e, 0x76, 0x57, 0xe0, 0x3c, 0xc7, 0x61, 0x94, 0x24, 0xed, 0xe7, 0x41, 0x38, 0x68, 0xc7,
	0x24, 0xa2, 0x51, 0xbb, 0x3f, 0x8c, 0xc6, 0x7e, 0xfb, 0xd0, 0x1b, 0x91, 0x16, 0xef, 0x40, 0x8b,
	0x02, 0xd3, 0xe2, 0x03, 0xcd, 0x8b, 0xb3, 0x24, 0x92, 0xbe, 0x37, 0xf4, 0xa4, 0x8c, 0x73, 0x13,
	0x60, 0x67, 0x4c, 0x5d, 0xfc, 0x64, 0x8c, 0x13, 0x8a, 0xae, 0x81, 0x1e, 0x50, 0x3c, 0x6a, 0x28,
	0xcb, 0xca, 0x95, 0xea, 0xca, 0x2b, 0xad, 0xbc, 0xc2, 0xd6, 0x77, 0xbd, 0x11, 0xd9, 0xa2, 0x78,
	0xe4, 0x72, 0x8c, 0xb3, 0x0e, 0x55, 0x2e, 0x99, 0xc4, 0x51, 0x98, 0x60, 0xf4, 0x0a, 0x98, 0x98,
	0x90, 0x88, 0x24, 0x0d, 0x65, 0x59, 0xbb, 0x62, 0xbb, 0xb2, 0x85, 0xce, 0x83, 0x4d, 0x30, 0x25,
	0x87, 0xde, 0xde, 0x10, 0x37, 0xd4, 0x65, 0xe5, 0x8a, 0xe5, 0x4e, 0x3a, 0x9c, 0x0f, 0xa0, 0xb6,
	0x33, 0xa6, 0x6b, 0xe3, 0xe1, 0x67, 0xa9, 0x09, 0x6f, 0x81, 0xc1, 0xd4, 0x0b, 0x35, 0xb3, 0x6d,
	0x10, 0x20, 0xe7, 0x6f, 0x0a, 0x9c, 0xc9, 0x14, 0x48, 0x4b, 0xde, 0x87, 0x0a, 0x0e, 0x29, 0x09,
	0x70, 0xaa, 0xe3, 0x8d, 0x69, 0x1d, 0x05, 0x7c, 0x6b, 0x23, 0xa4, 0xe4, 0xd0, 0x4d, 0x65, 0x9a,
	0x3f, 0x54, 0xc0, 0xe0, 0x5d, 0xe8, 0x22, 0xa8, 0x81, 0x2f, 0x63, 0x71, 0xb6, 0xc4, 0x8e, 0x8e,
	0xab, 0x06, 0x3e, 0x7a, 0x1d, 0x60, 0x84, 0x93, 0xc4, 0x1b, 0xe0, 0x5e, 0xe0, 0x73, 0x0f, 0x6d,
	0xd7, 0x96, 0x3d, 0x5b, 0x7e, 0x2e, 0x2e, 0xda, 0xec, 0xb8, 0xe8, 0xc5, 0xb8, 0xfc, 0x54, 0x83,
	0xa5, 0x5d, 0xec, 0x91, 0xfe, 0x7e, 0x1a, 0x97, 0xab, 0x60, 0x3c, 0x19, 0x63, 0x72, 0x28, 0xed,
	0x79, 0x79, 0xda, 0x9e, 0x4f, 0xd8, 0x90, 0x2b, 0x10, 0xe8, 0x4d, 0x30, 0x1f, 0x07, 0x78, 0xe8,
	0x27, 0x0d, 0x95, 0xfb, 0x5f, 0xc0, 0xde, 0x66, 0x63, 0xae, 0x84, 0xa0, 0x2b, 0x60, 0x24, 0x11,
	0xa1, 0xc2, 0xbc, 0xea, 0x0a, 0x9a, 0xc6, 0xee, 0x46, 0x84, 0xba, 0x02, 0x80, 0x3a, 0x00, 0x31,
	0xf7, 0x32, 0x8c, 0xc7, 0x94, 0x9b, 0x5c, 0x5d, 0xb9, 0x54, 0x80, 0xe7, 0x4d, 0x6e, 0xed, 0xb0,
	0x08, 0x30, 0xb0, 0x6b, 0xc7, 0xe9, 0xcf, 0xe6, 0x6f, 0x14, 0xb0, 0xb3, 0x01, 0x16, 0x9d, 0xfe,
	0x98, 0x24, 0x11, 0xe1, 0x6e, 0xd9, 0xae, 0x6c, 0xa1, 0xfb, 0x60, 0xfb, 0x01, 0xc1, 0x7d, 0x1a,
	0x44, 0x21, 0x8f, 0x69, 0x6d, 0xa5, 0x7d, 0xa2, 0x4f, 0xb5, 0x3a, 0xa9, 0x98, 0x3b, 0xd1, 0x80,
	0xce, 0x82, 0x31, 0x0c, 0x46, 0x01, 0x6d, 0x68, 0xcb, 0xca, 0x15, 0xcd, 0x15, 0x0d, 0xe7, 0x32,
	0xd8, 0x19, 0x1a, 0x55, 0xa1, 0x72, 0x7b, 0xdb, 0x7d, 0xb4, 0xea, 0x76, 0xea, 0x0b, 0x68, 0x11,
	0xac, 0xb5, 0xd5, 0xf5, 0x8f, 0x79, 0x4b, 0x71, 0xfe, 0xa4, 0x42, 0x2d, 0xfd, 0x9c, 0xcc, 0xb1,
	0x15, 0xa8, 0x10, 0x9c, 0x8c, 0x87, 0x34, 0xcd, 0xb1, 0xc6, 0xd1, 0xfc, 0x70, 0x39, 0xc0, 0x4d,
	0x81, 0x68, 0x0d, 0x6c, 0x19, 0xbf, 0xc7, 0x11, 0xf7, 0x69, 0x66, 0xf8, 0x64, 0x62, 0x0a, 0xa7,
	0x1e, 0x47, 0xae, 0x15, 0xcb, 0x5f, 0xcd, 0x3f, 0x28, 0x60, 0xa5, 0xdd, 0xe8, 0x6b, 0xb0, 0x98,
	0x50, 0x8f, 0xd0, 0xde, 0x54, 0x08, 0xab, 0xbc, 0x6f, 0x5d, 0xc4, 0xf1, 0x75, 0x00, 0x1c, 0xfa,
	0x29, 0x40, 0x26, 0x27, 0x0e, 0x7d, 0x39, 0x7c, 0x16, 0x8c, 0x7e, 0x34, 0x0e, 0xb3, 0xb8, 0xf0,
	0x06, 0x7a, 0x0d, 0xac, 0x7d, 0x2f, 0xe9, 0xc5, 0x04, 0x1f, 0xc8, 0xcc, 0xac, 0xec, 0x7b, 0xc9,
	0x0e, 0xc1, 0x07, 0xe9, 0x50, 0x88, 0x9f, 0xd1, 0x86, 0x91, 0x0d, 0x75, 0xf1, 0x33, 0x8a, 0xfe,
	0x1f, 0xaa, 0x34, 0xa2, 0xde, 0xb0, 0x27, 0x34, 0x9a, 0x5c, 0x23, 0xf0, 0xae, 0x75, 0xd6, 0xe3,
	0xfc, 0x44, 0x01, 0xb8, 0x83, 0xb3, 0x5a, 0x73, 0xb2, 0xd5, 0x75, 0x19, 0xf4, 0xa7, 0xfb, 0x38,
	0x94, 0xe9, 0x56, 0xc8, 0xce, 0x47, 0xfb, 0x38, 0x74, 0xf9, 0x78, 0x2e, 0xe7, 0x8d, 0xb9, 0x39,
	0xef, 0x7c, 0x08, 0x55, 0x6e, 0x88, 0x9c, 0xcc, 0xeb, 0x60, 0x8a, 0x39, 0x92, 0xd6, 0xcc, 0x9e,
	0x4b, 0x89, 0x73, 0x7e, 0xa1, 0x40, 0xed, 0x0e, 0x9e, 0xaa, 0x5b, 0x97, 0x41, 0x0b, 0xfc, 0x34,
	0x1b, 0xca, 0xfd, 0x61, 0x80, 0xcc, 0x21, 0xf5, 0xc4, 0x0e, 0x69, 0xf3, 0x1d, 0xda, 0x80, 0x33,
	0x99, 0x39, 0x2f, 0x9e, 0xa1, 0xce, 0x8f, 0x15, 0x58, 0xe4, 0x73, 0xf5, 0x02, 0x45, 0xe7, 0x2a,
	0x18, 0xdc, 0x18, 0xe9, 0x58, 0xa9, 0xb9, 0x02, 0x81, 0x2e, 0x00, 0xf8, 0xd1, 0xd3, 0x30, 0xf1,
	0x46, 0xf1, 0x10, 0xcb, 0xd4, 0xcb, 0xf5, 0x38, 0xdf, 0x87, 0x25, 0x69, 0x85, 0xf4, 0xe5, 0x02,
	0x00, 0x0d, 0x46, 0x38, 0xa1, 0xde, 0x28, 0x16, 0xee, 0xb0, 0xcc, 0xca, 0x7a, 0x50, 0x1b, 0x4c,
	0x9e, 0x74, 0x69, 0xc1, 0x7b, 0xf5, 0xa8, 0xab, 0x42, 0xa1, 0x84, 0x39, 0xbf, 0x53, 0xa0, 0xb6,
	0x3b, 0x1e, 0x0c, 0x70, 0x92, 0xb9, 0xda, 0x86, 0x4a, 0x22, 0x7a, 0x1a, 0x15, 0xee, 0xc1, 0xff,
	0x15, 0xd6, 0xa6, 0x84, 0xa7, 0xa8, 0x49, 0x4d, 0x31, 0x73, 0x35, 0x85, 0x2d, 0x90, 0x30, 0x92,
	0x4b, 0xc0, 0x12, 0x0b, 0x24, 0x8c, 0xf8, 0xc7, 0xef, 0xea, 0x96, 0x52, 0x57, 0xef, 0xea, 0x96,
	0x5a, 0xd7, 0xee, 0xea, 0x96, 0x56, 0xd7, 0xef, 0xea, 0x96, 0x5e, 0x37, 0xee, 0xea, 0x96, 0x51,
	0x37, 0x5d, 0x93, 0xe2, 0xd0, 0x0b, 0xa9, 0xab, 0xd3, 0xc3, 0x18, 0xcb, 0x48, 0xb9, 0x66, 0x4c,
	0xf0, 0xe3, 0xe0, 0x99, 0x48, 0x09, 0xe7, 0xdf, 0x0a, 0x9c, 0xc9, 0xac, 0x96, 0xa1, 0xf9, 0x60,
	0x32, 0xcd, 0xc2, 0xf7, 0x8b, 0xe5, 0x66, 0xa7, 0x35, 0xa5, 0x30, 0xe5, 0xcd, 0x9f, 0x2b, 0x60,
	0x8a, 0x3e, 0x56, 0x8b, 0x85, 0x0d, 0x69, 0x2d, 0x16, 0x2d, 0x84, 0x80, 0xdb, 0x24, 0xab, 0x07,
	0xff, 0xcd, 0x9c, 0x17, 0xb3, 0xad, 0xf1, 0x4e, 0x39, 0xb1, 0xd7, 0xc0, 0x38, 0xf0, 0x86, 0x63,
	0x2c, 0x57, 0x6b, 0x61, 0x15, 0xec, 0x72, 0xde, 0xe1, 0x0a, 0xc8, 0xa4, 0xf4, 0x18, 0xb9, 0xd2,
	0x23, 0x62, 0xe4, 0x9a, 0x1c, 0x92, 0x38, 0xff, 0x54, 0xa0, 0x7e, 0x9b, 0xb0, 0x09, 0x0a, 0xfb,
	0x87, 0x5f, 0xf5, 0x46, 0xd8, 0x02, 0x6b, 0x40, 0xa2, 0x71, 0xdc, 0xdb, 0x3b, 0x3c, 0x6e, 0xc9,
	0x55, 0x38, 0x68, 0xed, 0xb0, 0x90, 0xc5, 0x7a, 0x31, 0x8b, 0xd1, 0x25, 0xa8, 0xc5, 0x98, 0x24,
	0x41, 0x42, 0x7b, 0x32, 0x39, 0x45, 0xc1, 0x5c, 0x92, 0xbd, 0xeb, 0x22, 0x15, 0x7f, 0xad, 0xc2,
	0x4b, 0x39, 0x1f, 0x4f, 0x98, 0xf1, 0x1f, 0x15, 0xa7, 0xfd, 0x72, 0xc1, 0xd6, 0xa2, 0xc6, 0x23,
	0x13, 0xff, 0xdb, 0xc9, 0xc4, 0xaf, 0x82, 0xf6, 0x19, 0x3e, 0x94, 0x65, 0xa2, 0x7d, 0x32, 0x45,
	0xad, 0x8f, 0xf1, 0xa1, 0x20, 0x4e, 0x4c, 0x96, 0xe5, 0x8e, 0x98, 0x33, 0x6e, 0x8e, 0x96, 0xce,
	0x60, 0xf3, 0x1e, 0x58, 0x29, 0x10, 0xd5, 0xd3, 0xcf, 0xb0, 0x8c, 0xe1, 0x52, 0x59, 0xbe, 0xa8,
	0x73, 0xf3, 0xe5, 0x96, 0x7a, 0x53, 0x71, 0x3a, 0x60, 0x8a, 0x52, 0x7a, 0xaa, 0x5c, 0xad, 0xf1,
	0x8d, 0x46, 0x24, 0xaa, 0x1a, 0xf8, 0xce, 0x36, 0x2c, 0x31, 0x2d, 0x5d, 0x6f, 0x84, 0xfd, 0x0d,
	0x7f, 0x80, 0x4f, 0xa5, 0x0c, 0x81, 0x1e, 0x7a, 0x23, 0x2c, 0xd5, 0xf1, 0xdf, 0xce, 0x3f, 0x14,
	0xa8, 0x8a, 0x72, 0x3a, 0xf4, 0x28, 0xf6, 0x59, 0xda, 0xd1, 0xa8, 0x37, 0x6f, 0x37, 0x30, 0x68,
	0xb4, 0xe5, 0xb3, 0xda, 0x65, 0x3d, 0x26, 0xd1, 0x88, 0xc3, 0xd5, 0x63, 0xe0, 0x15, 0x86, 0x62,
	0x02, 0xef, 0x82, 0x45, 0xa3, 0x1e, 0xf6, 0x07, 0x38, 0xdd, 0x1a, 0xce, 0x1d, 0x15, 0xc8, 0x9c,
	0x73, 0x2b, 0x34, 0x62, 0x7f, 0x13, 0x74, 0x0b, 0x80, 0x7f, 0x48, 0x48, 0xea, 0xf3, 0x25, 0x6d,
	0x06, 0xe7, 0xb2, 0xce, 0xaf, 0x74, 0xb0, 0x52, 0xea, 0xfd, 0xe5, 0xd0, 0xe2, 0xf3, 0x60, 0x67,
	0xe9, 0x2c, 0xb7, 0x80, 0x49, 0x07, 0x7a, 0x03, 0x96, 0x82, 0xa4, 0xe7, 0xe3, 0xc7, 0x41, 0x18,
	0x70, 0x0a, 0x28, 0x68, 0xc8, 0x62, 0x90, 0x74, 0xb2, 0x3e, 0x36, 0x6d, 0x3e, 0x1e, 0x62, 0x8a,
	0x79, 0x05, 0xb6, 0x5c, 0xd9, 0x42, 0xcb, 0x50, 0x9d, 0x48, 0x26, 0x8d, 0x0a, 0xa7, 0xdd, 0xf9,
	0x2e, 0xb4, 0x0d, 0x4b, 0x84, 0xcd, 0x15, 0x6b, 0xec, 0x07, 0x71, 0xd2, 0xb0, 0x79, 0x34, 0xae,
	0x96, 0x9f, 0x35, 0x5a, 0x6e, 0x1e, 0x2b, 0x92, 0x7e, 0x5a, 0x1e, 0xbd, 0x03, 0xba, 0xef, 0x51,
	0xaf, 0x01, 0x5c, 0xcf, 0xf2, 0x0c, 0x3d, 0x1d, 0x8f, 0x7a, 0x42, 0x9c, 0xa3, 0x9b, 0xdf, 0x03,
	0x74, 0x54, 0x75, 0xc9, 0x32, 0x69, 0x4f, 0x2f, 0x93, 0xd7, 0xca, 0x36, 0x72, 0x9e, 0x79, 0xb9,
	0xb5, 0xd2, 0x74, 0xc1, 0xce, 0xbe, 0x77, 0x6a, 0x9d, 0x62, 0xe9, 0xad, 0x12, 0xe2, 0x1d, 0xe6,
	0x74, 0xde, 0xd5, 0x2d, 0xab, 0x6e, 0xcb, 0xfd, 0xaa, 0x1e, 0x8c, 0x46, 0x63, 0xca, 0x0e, 0x2b,
	0x3d, 0x49, 0x42, 0xfe, 0xaa, 0x01, 0x4c, 0x58, 0xc5, 0x09, 0xd3, 0xe4, 0xdd, 0xa9, 0xc2, 0x51,
	0x5d, 0xb9, 0x30, 0x8b, 0xa5, 0xb4, 0xbe, 0xcd, 0x60, 0x69, 0x61, 0x41, 0x6b, 0x60, 0x8d, 0x30,
	0xf5, 0x78, 0xd4, 0xb5, 0xb2, 0x0a, 0x98, 0x93, 0xbc, 0x2f, 0x81, 0x22, 0xf6, 0x99, 0x5c, 0xf3,
	0x2f, 0x0a, 0x18, 0x5c, 0xeb, 0x89, 0x49, 0xd9, 0x7b, 0x72, 0x9e, 0xc5, 0x17, 0xaf, 0x1c, 0x6f,
	0xeb, 0x91, 0xf9, 0xfe, 0x6a, 0xa6, 0x44, 0xa9, 0xab, 0xcd, 0x4f, 0x60, 0x69, 0xca, 0xc9, 0x2f,
	0xa1, 0xd6, 0x3e, 0x02, 0x3b, 0xe3, 0x4d, 0xa8, 0x01, 0x95, 0xbd, 0x71, 0xff, 0x33, 0x4c, 0xd3,
	0xfa, 0x9e, 0x36, 0x27, 0x6a, 0xb5, 0xb9, 0x6a, 0x85, 0xad, 0xce, 0x1f, 0x15, 0xd0, 0x59, 0x48,
	0x51, 0x0b, 0x8c, 0x61, 0xf4, 0x14, 0x93, 0x72, 0xd6, 0xcd, 0x20, 0xad, 0xb5, 0x68, 0x1c, 0xfa,
	0xae, 0x80, 0x31, 0xfc, 0x38, 0x8e, 0x31, 0x91, 0x1e, 0x1c, 0x83, 0xe7, 0xb0, 0xe6, 0x2e, 0x18,
	0xbc, 0xcd, 0xeb, 0x78, 0x30, 0xc2, 0xfc, 0x3b, 0x9a, 0xcb, 0x7f, 0xa3, 0x77, 0x01, 0xf6, 0xd8,
	0x60, 0x2f, 0xab, 0xf0, 0xb5, 0x22, 0x6d, 0xe4, 0xc2, 0x0f, 0x18, 0x1b, 0xb3, 0xf7, 0xd2, 0x9f,
	0xce, 0x08, 0x0c, 0xce, 0x03, 0x26, 0x0c, 0x48, 0xc9, 0x33, 0xa0, 0x9b, 0x00, 0xde, 0x60, 0x40,
	0xf0, 0xc0, 0xa3, 0xf2, 0xbc, 0x55, 0x2b, 0x1a, 0xba, 0x9a, 0x8d, 0xbb, 0x39, 0x2c, 0xa7, 0x93,
	0xde, 0x1e, 0x1e, 0xa6, 0x8c, 0x8a, 0x37, 0x9c, 0x9f, 0xe9, 0xa0, 0xb3, 0x33, 0x38, 0x7a, 0x0f,
	0xec, 0x14, 0x2c, 0xea, 0x5d, 0x75, 0xe5, 0xfc, 0xd1, 0xa3, 0x7a, 0xa6, 0x1c, 0x6f, 0x2e, 0xb8,
	0x13, 0x01, 0x26, 0x4d, 0xf0, 0x10, 0x1f, 0x78, 0x61, 0x1f, 0x4b, 0x7a, 0x5b, 0x26, 0xed, 0xa6,
	0x18, 0x26, 0x9d, 0x09, 0x34, 0x3f, 0x57, 0xc0, 0xce, 0x14, 0x7f, 0xe9, 0x8e, 0x7f, 0x13, 0xaa,
	0x3c, 0x3d, 0x7a, 0x11, 0xf1, 0x31, 0xe1, 0xee, 0x1f, 0x11, 0xe5, 0xd6, 0x6d, 0xb3, 0x71, 0x17,
	0x38, 0x98, 0xff, 0x46, 0x1f, 0x42, 0x8d, 0xe2, 0x51, 0x1c, 0x11, 0x6f, 0x28, 0xa5, 0xf5, 0x39,
	0xd2, 0x4b, 0x29, 0x9e, 0x37, 0x9b, 0x3d, 0xb0, 0x33, 0x9f, 0xd9, 0x09, 0x2e, 0x5d, 0x33, 0x33,
	0x4f, 0x70, 0x6c, 0x25, 0x9d, 0xcd, 0x9f, 0x74, 0xb2, 0x00, 0x4c, 0x5d, 0x31, 0x18, 0x93, 0x2b,
	0x06, 0x43, 0x98, 0xba, 0x04, 0xf6, 0xea, 0xee, 0xfa, 0x46, 0xb7, 0xb3, 0xd5, 0xbd, 0x53, 0x5f,
	0x40, 0x35, 0x80, 0xce, 0x46, 0xd6, 0x56, 0xd6, 0x4c, 0xd0, 0x93, 0x88, 0xcc, 0x39, 0x23, 0x38,
	0x7f, 0x57, 0xc0, 0xe0, 0x04, 0x37, 0xa3, 0x26, 0x4a, 0x8e, 0x9a, 0x34, 0xa0, 0x22, 0x88, 0x8b,
	0x58, 0xa4, 0xb6, 0x9b, 0x36, 0xb3, 0xf2, 0xa6, 0xcd, 0x29, 0x6f, 0x6f, 0x03, 0x24, 0xe3, 0x3d,
	0xc6, 0x9d, 0x83, 0x8c, 0x22, 0x94, 0xf2, 0xeb, 0x1c, 0x0c, 0xbd, 0x05, 0x66, 0x7f, 0xe8, 0x8d,
	0x13, 0xcc, 0xf9, 0xed, 0x91, 0xc8, 0xad, 0xf3, 0x31, 0x57, 0x62, 0x26, 0x69, 0x6e, 0xe6, 0xd3,
	0xfc, 0xcf, 0x2a, 0x54, 0xe4, 0x49, 0xe5, 0x2b, 0x72, 0xed, 0x06, 0x18, 0x49, 0x3f, 0x8a, 0xd3,
	0xa3, 0xc9, 0xb9, 0xd2, 0x53, 0x52, 0x6b, 0x97, 0x41, 0x5c, 0x81, 0x44, 0xd7, 0xc1, 0xea, 0x93,
	0x80, 0x62, 0x12, 0x78, 0xf2, 0x52, 0xa1, 0xdc, 0xb5, 0x0c, 0x55, 0xee, 0x5c, 0xf3, 0x07, 0x60,
	0x70, 0xbd, 0x85, 0xf0, 0x2a, 0xa7, 0x0d, 0xaf, 0x3a, 0x3f, 0xbc, 0xce, 0xef, 0x0d, 0x30, 0x45,
	0x57, 0x3e, 0x66, 0x4a, 0x79, 0xcc, 0xe6, 0xed, 0x76, 0x97, 0x40, 0xf3, 0x42, 0x5f, 0x86, 0xf6,
	0xa5, 0xc2, 0x62, 0x0e, 0xfd, 0xcd, 0x05, 0x97, 0x8d, 0x23, 0x07, 0xd4, 0x88, 0xc8, 0xb8, 0xd6,
	0xa7, 0x51, 0xdb, 0x64, 0x73, 0xc1, 0x55, 0x23, 0xc2, 0x54, 0x85, 0x11, 0x95, 0x19, 0x52, 0x50,
	0xd5, 0x8d, 0x28, 0x53, 0x15, 0x46, 0x14, 0xb5, 0xc0, 0xc4, 0x4f, 0xc6, 0xde, 0x30, 0x91, 0x25,
	0xae, 0xe0, 0xec, 0x06, 0x1f, 0xdb, 0x5c, 0x70, 0x25, 0x8a, 0xa9, 0x1d, 0x79, 0xb1, 0xac, 0x68,
	0x05, 0xb5, 0xf7, 0xbd, 0x98, 0xa9, 0x1d, 0x79, 0x31, 0x7a, 0x13, 0x0c, 0xe2, 0x85, 0x03, 0xcc,
	0x4f, 0xe4, 0x47, 0x62, 0xee, 0xb2, 0xa1, 0xcd, 0x05, 0x57, 0x60, 0xb8, 0x0d, 0xcf, 0x82, 0x84,
	0x32, 0x56, 0x58, 0x66, 0x03, 0x1f, 0xe3, 0x36, 0xf0, 0x5f, 0x0c, 0x2f, 0x4e, 0xe9, 0x0d, 0x28,
	0xc3, 0xef, 0xf0, 0x31, 0x86, 0x17, 0x28, 0x86, 0x27, 0x78, 0x80, 0x9f, 0xc5, 0x8d, 0x6a, 0x19,
	0xde, 0xe5, 0x63, 0x0c, 0x2f, 0x50, 0xe8, 0x06, 0x54, 0x04, 0xb1, 0xf5, 0x1b, 0x8b, 0x65, 0x17,
	0x13, 0x1d, 0x31, 0xb8, 0xb9, 0xe0, 0xa6, 0x38, 0xb4, 0x02, 0xd6, 0xd3, 0x80, 0xee, 0xf3, 0x33,
	0xc5, 0x52, 0x99, 0xcc, 0xa3, 0x80, 0xee, 0x6f, 0x75, 0x98, 0x17, 0x15, 0x06, 0x64, 0xc7, 0x8a,
	0x9b, 0x00, 0x44, 0xb0, 0xc8, 0x1e, 0x8d, 0x1a, 0x35, 0x2e, 0xf5, 0x6a, 0xd1, 0x34, 0x3e, 0xfe,
	0x20, 0x92, 0xdb, 0x83, 0x68, 0xa0, 0x6f, 0x41, 0x95, 0x7f, 0x4d, 0x5e, 0x32, 0x9e, 0x29, 0xdd,
	0x9d, 0x03, 0xba, 0x2f, 0xee, 0x1c, 0x37, 0x17, 0x5c, 0x78, 0x9a, 0xb5, 0xd6, 0xac, 0x34, 0xbd,
	0x9d, 0x6f, 0x80, 0xb6, 0x1a, 0xfa, 0xa8, 0x05, 0x15, 0xd1, 0x31, 0xe3, 0xf4, 0x24, 0x13, 0x3e,
	0x05, 0x39, 0xef, 0x80, 0xba, 0x4d, 0x4e, 0x2d, 0xf5, 0x36, 0x68, 0xdd, 0x88, 0xe6, 0x16, 0x97,
	0x72, 0x82, 0xc5, 0xf5, 0x10, 0xb4, 0xfb, 0x5e, 0x3c, 0x63, 0x03, 0x3c, 0x07, 0x76, 0x32, 0xde,
	0xeb, 0x89, 0xf5, 0x2f, 0x76, 0x06, 0x2b, 0x19, 0xef, 0xdd, 0x63, 0xed, 0x74, 0x30, 0x7f, 0x65,
	0xc2, 0x06, 0x39, 0x93, 0x70, 0x6c, 0xa8, 0xc8, 0x39, 0x74, 0x76, 0xc0, 0x14, 0x39, 0x3e, 0xe3,
	0x23, 0xa7, 0x63, 0x5b, 0x6a, 0x5d, 0x73, 0x2e, 0x80, 0x29, 0x32, 0xb6, 0x5c, 0xa3, 0x73, 0x0e,
	0x2a, 0x32, 0x19, 0x18, 0x67, 0x4c, 0xcf, 0xac, 0x36, 0xbf, 0xab, 0x74, 0x2e, 0x02, 0x4c, 0x26,
	0x6e, 0xd6, 0x5d, 0xbd, 0x13, 0x82, 0x29, 0x92, 0x7c, 0x86, 0xd1, 0x6f, 0xc0, 0x92, 0xd8, 0xe0,
	0x47, 0x1e, 0xed, 0xef, 0xe3, 0xf4, 0x1a, 0x7a, 0x91, 0x77, 0xde, 0x17, 0x7d, 0xe8, 0x2a, 0xd4,
	0xfb, 0x5e, 0x82, 0x7b, 0x41, 0x98, 0xe0, 0x30, 0x09, 0x68, 0x70, 0x20, 0x9c, 0xb4, 0xdc, 0x33,
	0xac, 0x7f, 0x6b, 0xd2, 0xed, 0xac, 0x83, 0x29, 0x16, 0xc9, 0x17, 0xf8, 0x9e, 0xf3, 0x1f, 0x05,
	0x0c, 0xbe, 0xf0, 0x67, 0x28, 0x69, 0xa7, 0xe4, 0xb4, 0x94, 0x8c, 0x73, 0xc9, 0x69, 0x76, 0xda,
	0x4e, 0xd9, 0xa9, 0x36, 0x57, 0x40, 0xd0, 0xd3, 0x27, 0x29, 0x3d, 0x7d, 0x41, 0x2a, 0xfa, 0x02,
	0xd4, 0xfb, 0x47, 0x0a, 0xe7, 0x3b, 0x72, 0xdd, 0x96, 0x3b, 0x2e, 0x8e, 0x6d, 0xea, 0x9c, 0x63,
	0xdb, 0xad, 0xfc, 0xfb, 0x8c, 0xa0, 0x6c, 0x05, 0x42, 0x79, 0x87, 0x78, 0xf1, 0x7e, 0xd9, 0x63,
	0x8c, 0xf3, 0xb9, 0x0a, 0xf6, 0x56, 0xe8, 0xe3, 0x67, 0xa7, 0xb8, 0x4d, 0x98, 0xba, 0x2e, 0x50,
	0xe7, 0x5e, 0x17, 0x68, 0x25, 0xd7, 0x05, 0x99, 0xbb, 0x7a, 0xde, 0xdd, 0x26, 0x58, 0x31, 0xc1,
	0x09, 0x66, 0xc4, 0x58, 0x5c, 0x23, 0x64, 0x6d, 0x74, 0x09, 0x6a, 0x11, 0x09, 0x06, 0x41, 0xe8,
	0x0d, 0xe5, 0xd2, 0xad, 0x70, 0xd1, 0xa5, 0xb4, 0x57, 0x9c, 0x04, 0x5a, 0xf0, 0x32, 0x25, 0x5e,
	0x30, 0x0c, 0xc2, 0x41, 0xef, 0x39, 0x26, 0xf9, 0xdb, 0x5f, 0xc3, 0x7d, 0x29, 0x1d, 0xfa, 0x14,
	0x13, 0x71, 0x0f, 0x3c, 0x99, 0x37, 0x7b, 0xfe, 0x2d, 0x69, 0xba, 0x55, 0xc3, 0xf1, 0x5b, 0xb5,
	0xe0, 0x87, 0xd7, 0xae, 0x83, 0x9d, 0x65, 0x0a, 0x63, 0x9c, 0x0f, 0xbb, 0x6b, 0xdb, 0x0f, 0xbb,
	0x9d, 0x8d, 0x4e, 0x7d, 0x01, 0x01, 0x98, 0xeb, 0xf7, 0xb6, 0x77, 0x37, 0x3a, 0x75, 0x05, 0x59,
	0xa0, 0x6f, 0xef, 0x6c, 0x74, 0xeb, 0xea, 0xb5, 0xf7, 0x01, 0x26, 0xb4, 0x9c, 0xf5, 0x77, 0xb7,
	0xbb, 0x1b, 0xf5, 0x05, 0x64, 0x83, 0x71, 0x7b, 0xcb, 0xdd, 0x7d, 0x20, 0xc0, 0xf7, 0x56, 0x77,
	0x1f, 0xd4, 0x55, 0x54, 0x01, 0xed, 0xfe, 0x56, 0xb7, 0xae, 0xf1, 0x1f, 0xab, 0xdf, 0xa9, 0xeb,
	0xd7, 0xde, 0x84, 0xda, 0xf4, 0x3c, 0x23, 0x13, 0xd4, 0xad, 0x6e, 0x7d, 0x81, 0x41, 0xb6, 0x1f,
	0x4a, 0xf1, 0xb5, 0xed, 0x07, 0x9b, 0x75, 0x75, 0xe5, 0x5f, 0x9a, 0xb8, 0x26, 0xdb, 0xc5, 0xe4,
	0x20, 0xe8, 0x63, 0x74, 0x0b, 0xb4, 0x9d, 0x31, 0x45, 0x8d, 0x23, 0xaf, 0xb3, 0xf2, 0xa6, 0xb7,
	0xf9, 0x5a, 0xc9, 0x88, 0xbc, 0x1f, 0xbd, 0x0d, 0x15, 0xf9, 0x8c, 0x8b, 0xce, 0xcf, 0x78, 0xdd,
	0x15, 0x3a, 0x5e, 0x3f, 0xf6, 0xed, 0x17, 0xad, 0x83, 0x29, 0x1e, 0xdd, 0xd0, 0xb9, 0x63, 0x9e,
	0x17, 0x9b, 0xe7, 0x8f, 0x7b, 0xa7, 0x43, 0x5d, 0x38, 0xb3, 0x4b, 0x09, 0xf6, 0x46, 0x41, 0x38,
	0xf8, 0xc2, 0xda, 0xae, 0x2b, 0x2c, 0x30, 0x77, 0xf0, 0x91, 0xc0, 0x4c, 0x9e, 0xce, 0x8a, 0x81,
	0xc9, 0xbf, 0x65, 0xdd, 0x86, 0x8a, 0x7c, 0x09, 0x2a, 0x06, 0x66, 0xfa, 0xbd, 0xaa, 0x18, 0x98,
	0xe2, 0xf3, 0xd1, 0x47, 0x60, 0x88, 0x6c, 0x6d, 0x16, 0xb6, 0xc4, 0xdc, 0xf3, 0x50, 0xf3, 0x5c,
	0xe9, 0x98, 0xd0, 0xb0, 0xf2, 0x4b, 0x45, 0x5c, 0x07, 0x6d, 0x85, 0x9c, 0xd6, 0xff, 0x0f, 0xcc,
	0xf6, 0xda, 0x03, 0x58, 0x8e, 0xc8, 0x20, 0xc5, 0x3c, 0x0f, 0xc2, 0x81, 0xf8, 0x2f, 0x08, 0x09,
	0x3f, 0xf4, 0x46, 0x64, 0x47, 0xf9, 0xb4, 0x35, 0x08, 0xe8, 0xfe, 0x78, 0xaf, 0xd5, 0x8f, 0x46,
	0xed, 0xdc, 0xff, 0x50, 0x7c, 0x5d, 0xfc, 0x0f, 0xc5, 0xc1, 0x8d, 0x1b, 0xed, 0x41, 0xfe, 0x9f,
	0x2f, 0xf6, 0x4c, 0x3e, 0xf0, 0xf6, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x06, 0xf1, 0xed, 0x22,
	0xa3, 0x21, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// YamrServiceClient is the client API for YamrService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YamrServiceClient interface {
	// Put ingests a single yamr item
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	// PutBulk ingests multiple yamr items
	PutBulk(ctx context.Context, in *PutBulkRequest, opts ...grpc.CallOption) (*PutBulkResponse, error)
	// Search queries for yamr items
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	// StreamingSearch performs a query for yamr items and return a stream of results
	StreamingSearch(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (YamrService_StreamingSearchClient, error)
	// Get returns a single item by its id
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// GetBulk returns multiple items by their ids
	GetBulk(ctx context.Context, in *GetBulkRequest, opts ...grpc.CallOption) (*GetBulkResponse, error)
	// Count returns the number of ids that applies to each value for a time
	Count(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error)
}

type yamrServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewYamrServiceClient(cc grpc.ClientConnInterface) YamrServiceClient {
	return &yamrServiceClient{cc}
}

func (c *yamrServiceClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrService/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yamrServiceClient) PutBulk(ctx context.Context, in *PutBulkRequest, opts ...grpc.CallOption) (*PutBulkResponse, error) {
	out := new(PutBulkResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrService/PutBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yamrServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yamrServiceClient) StreamingSearch(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (YamrService_StreamingSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_YamrService_serviceDesc.Streams[0], "/zenoss.cloud.YamrService/StreamingSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &yamrServiceStreamingSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type YamrService_StreamingSearchClient interface {
	Recv() (*SearchResponse, error)
	grpc.ClientStream
}

type yamrServiceStreamingSearchClient struct {
	grpc.ClientStream
}

func (x *yamrServiceStreamingSearchClient) Recv() (*SearchResponse, error) {
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *yamrServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yamrServiceClient) GetBulk(ctx context.Context, in *GetBulkRequest, opts ...grpc.CallOption) (*GetBulkResponse, error) {
	out := new(GetBulkResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrService/GetBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yamrServiceClient) Count(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error) {
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrService/Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YamrServiceServer is the server API for YamrService service.
type YamrServiceServer interface {
	// Put ingests a single yamr item
	Put(context.Context, *PutRequest) (*PutResponse, error)
	// PutBulk ingests multiple yamr items
	PutBulk(context.Context, *PutBulkRequest) (*PutBulkResponse, error)
	// Search queries for yamr items
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	// StreamingSearch performs a query for yamr items and return a stream of results
	StreamingSearch(*SearchRequest, YamrService_StreamingSearchServer) error
	// Get returns a single item by its id
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// GetBulk returns multiple items by their ids
	GetBulk(context.Context, *GetBulkRequest) (*GetBulkResponse, error)
	// Count returns the number of ids that applies to each value for a time
	Count(context.Context, *CountRequest) (*CountResponse, error)
}

// UnimplementedYamrServiceServer can be embedded to have forward compatible implementations.
type UnimplementedYamrServiceServer struct {
}

func (*UnimplementedYamrServiceServer) Put(ctx context.Context, req *PutRequest) (*PutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedYamrServiceServer) PutBulk(ctx context.Context, req *PutBulkRequest) (*PutBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutBulk not implemented")
}
func (*UnimplementedYamrServiceServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedYamrServiceServer) StreamingSearch(req *SearchRequest, srv YamrService_StreamingSearchServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamingSearch not implemented")
}
func (*UnimplementedYamrServiceServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedYamrServiceServer) GetBulk(ctx context.Context, req *GetBulkRequest) (*GetBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBulk not implemented")
}
func (*UnimplementedYamrServiceServer) Count(ctx context.Context, req *CountRequest) (*CountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Count not implemented")
}

func RegisterYamrServiceServer(s *grpc.Server, srv YamrServiceServer) {
	s.RegisterService(&_YamrService_serviceDesc, srv)
}

func _YamrService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrServiceServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YamrService_PutBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrServiceServer).PutBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrService/PutBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrServiceServer).PutBulk(ctx, req.(*PutBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YamrService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrServiceServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YamrService_StreamingSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(YamrServiceServer).StreamingSearch(m, &yamrServiceStreamingSearchServer{stream})
}

type YamrService_StreamingSearchServer interface {
	Send(*SearchResponse) error
	grpc.ServerStream
}

type yamrServiceStreamingSearchServer struct {
	grpc.ServerStream
}

func (x *yamrServiceStreamingSearchServer) Send(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _YamrService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YamrService_GetBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrServiceServer).GetBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrService/GetBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrServiceServer).GetBulk(ctx, req.(*GetBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YamrService_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrServiceServer).Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrService/Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrServiceServer).Count(ctx, req.(*CountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YamrService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zenoss.cloud.YamrService",
	HandlerType: (*YamrServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _YamrService_Put_Handler,
		},
		{
			MethodName: "PutBulk",
			Handler:    _YamrService_PutBulk_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _YamrService_Search_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _YamrService_Get_Handler,
		},
		{
			MethodName: "GetBulk",
			Handler:    _YamrService_GetBulk_Handler,
		},
		{
			MethodName: "Count",
			Handler:    _YamrService_Count_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamingSearch",
			Handler:       _YamrService_StreamingSearch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "zenoss/zing/proto/cloud/yamr.proto",
}

// YamrIngestClient is the client API for YamrIngest service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YamrIngestClient interface {
	// Put ingests a single yamr item
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	// PutBulk ingests multiple yamr items
	PutBulk(ctx context.Context, in *PutBulkRequest, opts ...grpc.CallOption) (*PutBulkResponse, error)
}

type yamrIngestClient struct {
	cc grpc.ClientConnInterface
}

func NewYamrIngestClient(cc grpc.ClientConnInterface) YamrIngestClient {
	return &yamrIngestClient{cc}
}

func (c *yamrIngestClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrIngest/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yamrIngestClient) PutBulk(ctx context.Context, in *PutBulkRequest, opts ...grpc.CallOption) (*PutBulkResponse, error) {
	out := new(PutBulkResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrIngest/PutBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YamrIngestServer is the server API for YamrIngest service.
type YamrIngestServer interface {
	// Put ingests a single yamr item
	Put(context.Context, *PutRequest) (*PutResponse, error)
	// PutBulk ingests multiple yamr items
	PutBulk(context.Context, *PutBulkRequest) (*PutBulkResponse, error)
}

// UnimplementedYamrIngestServer can be embedded to have forward compatible implementations.
type UnimplementedYamrIngestServer struct {
}

func (*UnimplementedYamrIngestServer) Put(ctx context.Context, req *PutRequest) (*PutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedYamrIngestServer) PutBulk(ctx context.Context, req *PutBulkRequest) (*PutBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutBulk not implemented")
}

func RegisterYamrIngestServer(s *grpc.Server, srv YamrIngestServer) {
	s.RegisterService(&_YamrIngest_serviceDesc, srv)
}

func _YamrIngest_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrIngestServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrIngest/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrIngestServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YamrIngest_PutBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrIngestServer).PutBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrIngest/PutBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrIngestServer).PutBulk(ctx, req.(*PutBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YamrIngest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zenoss.cloud.YamrIngest",
	HandlerType: (*YamrIngestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _YamrIngest_Put_Handler,
		},
		{
			MethodName: "PutBulk",
			Handler:    _YamrIngest_PutBulk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zenoss/zing/proto/cloud/yamr.proto",
}
