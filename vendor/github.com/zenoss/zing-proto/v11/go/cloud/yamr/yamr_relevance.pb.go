// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        (unknown)
// source: zenoss/zing/proto/cloud/yamr_relevance.proto

package yamr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type YamrPageRankUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string                            `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id    *YamrID                           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Edges []*YamrPageRankUpdateRequest_Edge `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *YamrPageRankUpdateRequest) Reset() {
	*x = YamrPageRankUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YamrPageRankUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YamrPageRankUpdateRequest) ProtoMessage() {}

func (x *YamrPageRankUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YamrPageRankUpdateRequest.ProtoReflect.Descriptor instead.
func (*YamrPageRankUpdateRequest) Descriptor() ([]byte, []int) {
	return file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescGZIP(), []int{0}
}

func (x *YamrPageRankUpdateRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *YamrPageRankUpdateRequest) GetId() *YamrID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *YamrPageRankUpdateRequest) GetEdges() []*YamrPageRankUpdateRequest_Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type YamrPageRankUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*YamrPageRankUpdateResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *YamrPageRankUpdateResponse) Reset() {
	*x = YamrPageRankUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YamrPageRankUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YamrPageRankUpdateResponse) ProtoMessage() {}

func (x *YamrPageRankUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YamrPageRankUpdateResponse.ProtoReflect.Descriptor instead.
func (*YamrPageRankUpdateResponse) Descriptor() ([]byte, []int) {
	return file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescGZIP(), []int{1}
}

func (x *YamrPageRankUpdateResponse) GetResults() []*YamrPageRankUpdateResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type YamrPageRankGetTopNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id    *YamrID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Limit int32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	When  *When   `protobuf:"bytes,4,opt,name=when,proto3" json:"when,omitempty"`
}

func (x *YamrPageRankGetTopNRequest) Reset() {
	*x = YamrPageRankGetTopNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YamrPageRankGetTopNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YamrPageRankGetTopNRequest) ProtoMessage() {}

func (x *YamrPageRankGetTopNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YamrPageRankGetTopNRequest.ProtoReflect.Descriptor instead.
func (*YamrPageRankGetTopNRequest) Descriptor() ([]byte, []int) {
	return file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescGZIP(), []int{2}
}

func (x *YamrPageRankGetTopNRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *YamrPageRankGetTopNRequest) GetId() *YamrID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *YamrPageRankGetTopNRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *YamrPageRankGetTopNRequest) GetWhen() *When {
	if x != nil {
		return x.When
	}
	return nil
}

type YamrPageRankGetTopNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranks []*YamrPageRankGetTopNResponse_Rank `protobuf:"bytes,1,rep,name=ranks,proto3" json:"ranks,omitempty"`
}

func (x *YamrPageRankGetTopNResponse) Reset() {
	*x = YamrPageRankGetTopNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YamrPageRankGetTopNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YamrPageRankGetTopNResponse) ProtoMessage() {}

func (x *YamrPageRankGetTopNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YamrPageRankGetTopNResponse.ProtoReflect.Descriptor instead.
func (*YamrPageRankGetTopNResponse) Descriptor() ([]byte, []int) {
	return file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescGZIP(), []int{3}
}

func (x *YamrPageRankGetTopNResponse) GetRanks() []*YamrPageRankGetTopNResponse_Rank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

type YamrPageRankUpdateRequest_Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *YamrID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	When     *When   `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
	Presence bool    `protobuf:"varint,3,opt,name=presence,proto3" json:"presence,omitempty"`
}

func (x *YamrPageRankUpdateRequest_Edge) Reset() {
	*x = YamrPageRankUpdateRequest_Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YamrPageRankUpdateRequest_Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YamrPageRankUpdateRequest_Edge) ProtoMessage() {}

func (x *YamrPageRankUpdateRequest_Edge) ProtoReflect() protoreflect.Message {
	mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YamrPageRankUpdateRequest_Edge.ProtoReflect.Descriptor instead.
func (*YamrPageRankUpdateRequest_Edge) Descriptor() ([]byte, []int) {
	return file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescGZIP(), []int{0, 0}
}

func (x *YamrPageRankUpdateRequest_Edge) GetId() *YamrID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *YamrPageRankUpdateRequest_Edge) GetWhen() *When {
	if x != nil {
		return x.When
	}
	return nil
}

func (x *YamrPageRankUpdateRequest_Edge) GetPresence() bool {
	if x != nil {
		return x.Presence
	}
	return false
}

type YamrPageRankUpdateResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id    *YamrID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Error:
	//	*YamrPageRankUpdateResponse_Result_Retry
	//	*YamrPageRankUpdateResponse_Result_Fail
	Error isYamrPageRankUpdateResponse_Result_Error `protobuf_oneof:"error"`
}

func (x *YamrPageRankUpdateResponse_Result) Reset() {
	*x = YamrPageRankUpdateResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YamrPageRankUpdateResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YamrPageRankUpdateResponse_Result) ProtoMessage() {}

func (x *YamrPageRankUpdateResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YamrPageRankUpdateResponse_Result.ProtoReflect.Descriptor instead.
func (*YamrPageRankUpdateResponse_Result) Descriptor() ([]byte, []int) {
	return file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescGZIP(), []int{1, 0}
}

func (x *YamrPageRankUpdateResponse_Result) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *YamrPageRankUpdateResponse_Result) GetId() *YamrID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (m *YamrPageRankUpdateResponse_Result) GetError() isYamrPageRankUpdateResponse_Result_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (x *YamrPageRankUpdateResponse_Result) GetRetry() string {
	if x, ok := x.GetError().(*YamrPageRankUpdateResponse_Result_Retry); ok {
		return x.Retry
	}
	return ""
}

func (x *YamrPageRankUpdateResponse_Result) GetFail() string {
	if x, ok := x.GetError().(*YamrPageRankUpdateResponse_Result_Fail); ok {
		return x.Fail
	}
	return ""
}

type isYamrPageRankUpdateResponse_Result_Error interface {
	isYamrPageRankUpdateResponse_Result_Error()
}

type YamrPageRankUpdateResponse_Result_Retry struct {
	Retry string `protobuf:"bytes,3,opt,name=retry,proto3,oneof"`
}

type YamrPageRankUpdateResponse_Result_Fail struct {
	Fail string `protobuf:"bytes,4,opt,name=fail,proto3,oneof"`
}

func (*YamrPageRankUpdateResponse_Result_Retry) isYamrPageRankUpdateResponse_Result_Error() {}

func (*YamrPageRankUpdateResponse_Result_Fail) isYamrPageRankUpdateResponse_Result_Error() {}

type YamrPageRankGetTopNResponse_Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *YamrID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *YamrPageRankGetTopNResponse_Rank) Reset() {
	*x = YamrPageRankGetTopNResponse_Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YamrPageRankGetTopNResponse_Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YamrPageRankGetTopNResponse_Rank) ProtoMessage() {}

func (x *YamrPageRankGetTopNResponse_Rank) ProtoReflect() protoreflect.Message {
	mi := &file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YamrPageRankGetTopNResponse_Rank.ProtoReflect.Descriptor instead.
func (*YamrPageRankGetTopNResponse_Rank) Descriptor() ([]byte, []int) {
	return file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescGZIP(), []int{3, 0}
}

func (x *YamrPageRankGetTopNResponse_Rank) GetId() *YamrID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *YamrPageRankGetTopNResponse_Rank) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_zenoss_zing_proto_cloud_yamr_relevance_proto protoreflect.FileDescriptor

var file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2f, 0x7a, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x79, 0x61, 0x6d, 0x72, 0x5f, 0x72,
	0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x1a, 0x22, 0x7a, 0x65,
	0x6e, 0x6f, 0x73, 0x73, 0x2f, 0x7a, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x79, 0x61, 0x6d, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8d, 0x02, 0x0a, 0x19, 0x59, 0x61, 0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x59, 0x61, 0x6d, 0x72, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x7a, 0x65, 0x6e, 0x6f,
	0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x59, 0x61, 0x6d, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x1a, 0x70,
	0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x59, 0x61, 0x6d, 0x72, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04,
	0x77, 0x68, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x65, 0x6e,
	0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x57, 0x68, 0x65, 0x6e, 0x52, 0x04,
	0x77, 0x68, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0xe4, 0x01, 0x0a, 0x1a, 0x59, 0x61, 0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x59, 0x61, 0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x7b, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x59, 0x61, 0x6d, 0x72, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x42, 0x07,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x1a, 0x59, 0x61, 0x6d, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x59, 0x61, 0x6d, 0x72, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x57, 0x68, 0x65, 0x6e, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e,
	0x22, 0xa7, 0x01, 0x0a, 0x1b, 0x59, 0x61, 0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x59,
	0x61, 0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x1a, 0x42, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x24,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e,
	0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x59, 0x61, 0x6d, 0x72, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x32, 0x73, 0x0a, 0x12, 0x59, 0x61,
	0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x12, 0x5d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x7a, 0x65, 0x6e,
	0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x59, 0x61, 0x6d, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x59, 0x61, 0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x32,
	0x73, 0x0a, 0x11, 0x59, 0x61, 0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x5e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x12,
	0x28, 0x2e, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x59,
	0x61, 0x6d, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x7a, 0x65, 0x6e, 0x6f,
	0x73, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x59, 0x61, 0x6d, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x54, 0x0a, 0x20, 0x6f, 0x72, 0x67, 0x2e, 0x7a, 0x65, 0x6e, 0x6f,
	0x73, 0x73, 0x2e, 0x7a, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x79, 0x61, 0x6d, 0x72, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x65, 0x6e, 0x6f, 0x73, 0x73, 0x2f, 0x7a, 0x69,
	0x6e, 0x67, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x31, 0x2f, 0x67, 0x6f, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x79, 0x61, 0x6d, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescOnce sync.Once
	file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescData = file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDesc
)

func file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescGZIP() []byte {
	file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescOnce.Do(func() {
		file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescData = protoimpl.X.CompressGZIP(file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescData)
	})
	return file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDescData
}

var file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_zenoss_zing_proto_cloud_yamr_relevance_proto_goTypes = []interface{}{
	(*YamrPageRankUpdateRequest)(nil),         // 0: zenoss.cloud.YamrPageRankUpdateRequest
	(*YamrPageRankUpdateResponse)(nil),        // 1: zenoss.cloud.YamrPageRankUpdateResponse
	(*YamrPageRankGetTopNRequest)(nil),        // 2: zenoss.cloud.YamrPageRankGetTopNRequest
	(*YamrPageRankGetTopNResponse)(nil),       // 3: zenoss.cloud.YamrPageRankGetTopNResponse
	(*YamrPageRankUpdateRequest_Edge)(nil),    // 4: zenoss.cloud.YamrPageRankUpdateRequest.Edge
	(*YamrPageRankUpdateResponse_Result)(nil), // 5: zenoss.cloud.YamrPageRankUpdateResponse.Result
	(*YamrPageRankGetTopNResponse_Rank)(nil),  // 6: zenoss.cloud.YamrPageRankGetTopNResponse.Rank
	(*YamrID)(nil),                            // 7: zenoss.cloud.YamrID
	(*When)(nil),                              // 8: zenoss.cloud.When
}
var file_zenoss_zing_proto_cloud_yamr_relevance_proto_depIdxs = []int32{
	7,  // 0: zenoss.cloud.YamrPageRankUpdateRequest.id:type_name -> zenoss.cloud.YamrID
	4,  // 1: zenoss.cloud.YamrPageRankUpdateRequest.edges:type_name -> zenoss.cloud.YamrPageRankUpdateRequest.Edge
	5,  // 2: zenoss.cloud.YamrPageRankUpdateResponse.results:type_name -> zenoss.cloud.YamrPageRankUpdateResponse.Result
	7,  // 3: zenoss.cloud.YamrPageRankGetTopNRequest.id:type_name -> zenoss.cloud.YamrID
	8,  // 4: zenoss.cloud.YamrPageRankGetTopNRequest.when:type_name -> zenoss.cloud.When
	6,  // 5: zenoss.cloud.YamrPageRankGetTopNResponse.ranks:type_name -> zenoss.cloud.YamrPageRankGetTopNResponse.Rank
	7,  // 6: zenoss.cloud.YamrPageRankUpdateRequest.Edge.id:type_name -> zenoss.cloud.YamrID
	8,  // 7: zenoss.cloud.YamrPageRankUpdateRequest.Edge.when:type_name -> zenoss.cloud.When
	7,  // 8: zenoss.cloud.YamrPageRankUpdateResponse.Result.id:type_name -> zenoss.cloud.YamrID
	7,  // 9: zenoss.cloud.YamrPageRankGetTopNResponse.Rank.id:type_name -> zenoss.cloud.YamrID
	0,  // 10: zenoss.cloud.YamrPageRankIngest.Update:input_type -> zenoss.cloud.YamrPageRankUpdateRequest
	2,  // 11: zenoss.cloud.YamrPageRankQuery.GetTopN:input_type -> zenoss.cloud.YamrPageRankGetTopNRequest
	1,  // 12: zenoss.cloud.YamrPageRankIngest.Update:output_type -> zenoss.cloud.YamrPageRankUpdateResponse
	3,  // 13: zenoss.cloud.YamrPageRankQuery.GetTopN:output_type -> zenoss.cloud.YamrPageRankGetTopNResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_zenoss_zing_proto_cloud_yamr_relevance_proto_init() }
func file_zenoss_zing_proto_cloud_yamr_relevance_proto_init() {
	if File_zenoss_zing_proto_cloud_yamr_relevance_proto != nil {
		return
	}
	file_zenoss_zing_proto_cloud_yamr_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YamrPageRankUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YamrPageRankUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YamrPageRankGetTopNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YamrPageRankGetTopNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YamrPageRankUpdateRequest_Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YamrPageRankUpdateResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YamrPageRankGetTopNResponse_Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*YamrPageRankUpdateResponse_Result_Retry)(nil),
		(*YamrPageRankUpdateResponse_Result_Fail)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_zenoss_zing_proto_cloud_yamr_relevance_proto_goTypes,
		DependencyIndexes: file_zenoss_zing_proto_cloud_yamr_relevance_proto_depIdxs,
		MessageInfos:      file_zenoss_zing_proto_cloud_yamr_relevance_proto_msgTypes,
	}.Build()
	File_zenoss_zing_proto_cloud_yamr_relevance_proto = out.File
	file_zenoss_zing_proto_cloud_yamr_relevance_proto_rawDesc = nil
	file_zenoss_zing_proto_cloud_yamr_relevance_proto_goTypes = nil
	file_zenoss_zing_proto_cloud_yamr_relevance_proto_depIdxs = nil
}
