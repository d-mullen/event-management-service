// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zenoss/zing/proto/cloud/yamr_relevance.proto

package yamr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type YamrPageRankUpdateRequest struct {
	Label                string                            `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id                   *YamrID                           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Edges                []*YamrPageRankUpdateRequest_Edge `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *YamrPageRankUpdateRequest) Reset()         { *m = YamrPageRankUpdateRequest{} }
func (m *YamrPageRankUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*YamrPageRankUpdateRequest) ProtoMessage()    {}
func (*YamrPageRankUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f95edd630b4a8c, []int{0}
}

func (m *YamrPageRankUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrPageRankUpdateRequest.Unmarshal(m, b)
}
func (m *YamrPageRankUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrPageRankUpdateRequest.Marshal(b, m, deterministic)
}
func (m *YamrPageRankUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrPageRankUpdateRequest.Merge(m, src)
}
func (m *YamrPageRankUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_YamrPageRankUpdateRequest.Size(m)
}
func (m *YamrPageRankUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrPageRankUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YamrPageRankUpdateRequest proto.InternalMessageInfo

func (m *YamrPageRankUpdateRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *YamrPageRankUpdateRequest) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *YamrPageRankUpdateRequest) GetEdges() []*YamrPageRankUpdateRequest_Edge {
	if m != nil {
		return m.Edges
	}
	return nil
}

type YamrPageRankUpdateRequest_Edge struct {
	Id                   *YamrID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	When                 *When    `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
	Presence             bool     `protobuf:"varint,3,opt,name=presence,proto3" json:"presence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamrPageRankUpdateRequest_Edge) Reset()         { *m = YamrPageRankUpdateRequest_Edge{} }
func (m *YamrPageRankUpdateRequest_Edge) String() string { return proto.CompactTextString(m) }
func (*YamrPageRankUpdateRequest_Edge) ProtoMessage()    {}
func (*YamrPageRankUpdateRequest_Edge) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f95edd630b4a8c, []int{0, 0}
}

func (m *YamrPageRankUpdateRequest_Edge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrPageRankUpdateRequest_Edge.Unmarshal(m, b)
}
func (m *YamrPageRankUpdateRequest_Edge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrPageRankUpdateRequest_Edge.Marshal(b, m, deterministic)
}
func (m *YamrPageRankUpdateRequest_Edge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrPageRankUpdateRequest_Edge.Merge(m, src)
}
func (m *YamrPageRankUpdateRequest_Edge) XXX_Size() int {
	return xxx_messageInfo_YamrPageRankUpdateRequest_Edge.Size(m)
}
func (m *YamrPageRankUpdateRequest_Edge) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrPageRankUpdateRequest_Edge.DiscardUnknown(m)
}

var xxx_messageInfo_YamrPageRankUpdateRequest_Edge proto.InternalMessageInfo

func (m *YamrPageRankUpdateRequest_Edge) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *YamrPageRankUpdateRequest_Edge) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *YamrPageRankUpdateRequest_Edge) GetPresence() bool {
	if m != nil {
		return m.Presence
	}
	return false
}

type YamrPageRankUpdateResponse struct {
	Results              []*YamrPageRankUpdateResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *YamrPageRankUpdateResponse) Reset()         { *m = YamrPageRankUpdateResponse{} }
func (m *YamrPageRankUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*YamrPageRankUpdateResponse) ProtoMessage()    {}
func (*YamrPageRankUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f95edd630b4a8c, []int{1}
}

func (m *YamrPageRankUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrPageRankUpdateResponse.Unmarshal(m, b)
}
func (m *YamrPageRankUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrPageRankUpdateResponse.Marshal(b, m, deterministic)
}
func (m *YamrPageRankUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrPageRankUpdateResponse.Merge(m, src)
}
func (m *YamrPageRankUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_YamrPageRankUpdateResponse.Size(m)
}
func (m *YamrPageRankUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrPageRankUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YamrPageRankUpdateResponse proto.InternalMessageInfo

func (m *YamrPageRankUpdateResponse) GetResults() []*YamrPageRankUpdateResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type YamrPageRankUpdateResponse_Result struct {
	Label string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id    *YamrID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Error:
	//	*YamrPageRankUpdateResponse_Result_Retry
	//	*YamrPageRankUpdateResponse_Result_Fail
	Error                isYamrPageRankUpdateResponse_Result_Error `protobuf_oneof:"error"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *YamrPageRankUpdateResponse_Result) Reset()         { *m = YamrPageRankUpdateResponse_Result{} }
func (m *YamrPageRankUpdateResponse_Result) String() string { return proto.CompactTextString(m) }
func (*YamrPageRankUpdateResponse_Result) ProtoMessage()    {}
func (*YamrPageRankUpdateResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f95edd630b4a8c, []int{1, 0}
}

func (m *YamrPageRankUpdateResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrPageRankUpdateResponse_Result.Unmarshal(m, b)
}
func (m *YamrPageRankUpdateResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrPageRankUpdateResponse_Result.Marshal(b, m, deterministic)
}
func (m *YamrPageRankUpdateResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrPageRankUpdateResponse_Result.Merge(m, src)
}
func (m *YamrPageRankUpdateResponse_Result) XXX_Size() int {
	return xxx_messageInfo_YamrPageRankUpdateResponse_Result.Size(m)
}
func (m *YamrPageRankUpdateResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrPageRankUpdateResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_YamrPageRankUpdateResponse_Result proto.InternalMessageInfo

func (m *YamrPageRankUpdateResponse_Result) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *YamrPageRankUpdateResponse_Result) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

type isYamrPageRankUpdateResponse_Result_Error interface {
	isYamrPageRankUpdateResponse_Result_Error()
}

type YamrPageRankUpdateResponse_Result_Retry struct {
	Retry string `protobuf:"bytes,3,opt,name=retry,proto3,oneof"`
}

type YamrPageRankUpdateResponse_Result_Fail struct {
	Fail string `protobuf:"bytes,4,opt,name=fail,proto3,oneof"`
}

func (*YamrPageRankUpdateResponse_Result_Retry) isYamrPageRankUpdateResponse_Result_Error() {}

func (*YamrPageRankUpdateResponse_Result_Fail) isYamrPageRankUpdateResponse_Result_Error() {}

func (m *YamrPageRankUpdateResponse_Result) GetError() isYamrPageRankUpdateResponse_Result_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *YamrPageRankUpdateResponse_Result) GetRetry() string {
	if x, ok := m.GetError().(*YamrPageRankUpdateResponse_Result_Retry); ok {
		return x.Retry
	}
	return ""
}

func (m *YamrPageRankUpdateResponse_Result) GetFail() string {
	if x, ok := m.GetError().(*YamrPageRankUpdateResponse_Result_Fail); ok {
		return x.Fail
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*YamrPageRankUpdateResponse_Result) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*YamrPageRankUpdateResponse_Result_Retry)(nil),
		(*YamrPageRankUpdateResponse_Result_Fail)(nil),
	}
}

type YamrPageRankGetTopNRequest struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id                   *YamrID  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Limit                int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	When                 *When    `protobuf:"bytes,4,opt,name=when,proto3" json:"when,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamrPageRankGetTopNRequest) Reset()         { *m = YamrPageRankGetTopNRequest{} }
func (m *YamrPageRankGetTopNRequest) String() string { return proto.CompactTextString(m) }
func (*YamrPageRankGetTopNRequest) ProtoMessage()    {}
func (*YamrPageRankGetTopNRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f95edd630b4a8c, []int{2}
}

func (m *YamrPageRankGetTopNRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrPageRankGetTopNRequest.Unmarshal(m, b)
}
func (m *YamrPageRankGetTopNRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrPageRankGetTopNRequest.Marshal(b, m, deterministic)
}
func (m *YamrPageRankGetTopNRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrPageRankGetTopNRequest.Merge(m, src)
}
func (m *YamrPageRankGetTopNRequest) XXX_Size() int {
	return xxx_messageInfo_YamrPageRankGetTopNRequest.Size(m)
}
func (m *YamrPageRankGetTopNRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrPageRankGetTopNRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YamrPageRankGetTopNRequest proto.InternalMessageInfo

func (m *YamrPageRankGetTopNRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *YamrPageRankGetTopNRequest) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *YamrPageRankGetTopNRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *YamrPageRankGetTopNRequest) GetWhen() *When {
	if m != nil {
		return m.When
	}
	return nil
}

type YamrPageRankGetTopNResponse struct {
	Ranks                []*YamrPageRankGetTopNResponse_Rank `protobuf:"bytes,1,rep,name=ranks,proto3" json:"ranks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *YamrPageRankGetTopNResponse) Reset()         { *m = YamrPageRankGetTopNResponse{} }
func (m *YamrPageRankGetTopNResponse) String() string { return proto.CompactTextString(m) }
func (*YamrPageRankGetTopNResponse) ProtoMessage()    {}
func (*YamrPageRankGetTopNResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f95edd630b4a8c, []int{3}
}

func (m *YamrPageRankGetTopNResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrPageRankGetTopNResponse.Unmarshal(m, b)
}
func (m *YamrPageRankGetTopNResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrPageRankGetTopNResponse.Marshal(b, m, deterministic)
}
func (m *YamrPageRankGetTopNResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrPageRankGetTopNResponse.Merge(m, src)
}
func (m *YamrPageRankGetTopNResponse) XXX_Size() int {
	return xxx_messageInfo_YamrPageRankGetTopNResponse.Size(m)
}
func (m *YamrPageRankGetTopNResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrPageRankGetTopNResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YamrPageRankGetTopNResponse proto.InternalMessageInfo

func (m *YamrPageRankGetTopNResponse) GetRanks() []*YamrPageRankGetTopNResponse_Rank {
	if m != nil {
		return m.Ranks
	}
	return nil
}

type YamrPageRankGetTopNResponse_Rank struct {
	Id                   *YamrID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score                float64  `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YamrPageRankGetTopNResponse_Rank) Reset()         { *m = YamrPageRankGetTopNResponse_Rank{} }
func (m *YamrPageRankGetTopNResponse_Rank) String() string { return proto.CompactTextString(m) }
func (*YamrPageRankGetTopNResponse_Rank) ProtoMessage()    {}
func (*YamrPageRankGetTopNResponse_Rank) Descriptor() ([]byte, []int) {
	return fileDescriptor_70f95edd630b4a8c, []int{3, 0}
}

func (m *YamrPageRankGetTopNResponse_Rank) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YamrPageRankGetTopNResponse_Rank.Unmarshal(m, b)
}
func (m *YamrPageRankGetTopNResponse_Rank) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YamrPageRankGetTopNResponse_Rank.Marshal(b, m, deterministic)
}
func (m *YamrPageRankGetTopNResponse_Rank) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YamrPageRankGetTopNResponse_Rank.Merge(m, src)
}
func (m *YamrPageRankGetTopNResponse_Rank) XXX_Size() int {
	return xxx_messageInfo_YamrPageRankGetTopNResponse_Rank.Size(m)
}
func (m *YamrPageRankGetTopNResponse_Rank) XXX_DiscardUnknown() {
	xxx_messageInfo_YamrPageRankGetTopNResponse_Rank.DiscardUnknown(m)
}

var xxx_messageInfo_YamrPageRankGetTopNResponse_Rank proto.InternalMessageInfo

func (m *YamrPageRankGetTopNResponse_Rank) GetId() *YamrID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *YamrPageRankGetTopNResponse_Rank) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func init() {
	proto.RegisterType((*YamrPageRankUpdateRequest)(nil), "zenoss.cloud.YamrPageRankUpdateRequest")
	proto.RegisterType((*YamrPageRankUpdateRequest_Edge)(nil), "zenoss.cloud.YamrPageRankUpdateRequest.Edge")
	proto.RegisterType((*YamrPageRankUpdateResponse)(nil), "zenoss.cloud.YamrPageRankUpdateResponse")
	proto.RegisterType((*YamrPageRankUpdateResponse_Result)(nil), "zenoss.cloud.YamrPageRankUpdateResponse.Result")
	proto.RegisterType((*YamrPageRankGetTopNRequest)(nil), "zenoss.cloud.YamrPageRankGetTopNRequest")
	proto.RegisterType((*YamrPageRankGetTopNResponse)(nil), "zenoss.cloud.YamrPageRankGetTopNResponse")
	proto.RegisterType((*YamrPageRankGetTopNResponse_Rank)(nil), "zenoss.cloud.YamrPageRankGetTopNResponse.Rank")
}

func init() {
	proto.RegisterFile("zenoss/zing/proto/cloud/yamr_relevance.proto", fileDescriptor_70f95edd630b4a8c)
}

var fileDescriptor_70f95edd630b4a8c = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x51, 0x6e, 0xd3, 0x40,
	0x10, 0x65, 0x13, 0x3b, 0x69, 0xa7, 0xfc, 0xb0, 0x8a, 0x90, 0x31, 0x3f, 0x91, 0x85, 0xc0, 0x48,
	0x65, 0xad, 0x86, 0x1b, 0x44, 0x45, 0x90, 0x1f, 0x54, 0x56, 0x45, 0x08, 0x24, 0x40, 0x8e, 0x3d,
	0x38, 0x56, 0x9d, 0x5d, 0xb3, 0x6b, 0x17, 0xa5, 0x9c, 0x81, 0x5f, 0xae, 0xc0, 0xc5, 0x38, 0x08,
	0xf2, 0xae, 0x53, 0x99, 0x12, 0x5a, 0x4b, 0xf0, 0xf9, 0x76, 0xe6, 0xed, 0xcc, 0xbc, 0x19, 0x3d,
	0x38, 0xbc, 0x40, 0x21, 0xb5, 0x8e, 0x2e, 0x72, 0x91, 0x45, 0xa5, 0x92, 0x95, 0x8c, 0x92, 0x42,
	0xd6, 0x69, 0xb4, 0x89, 0xd7, 0xea, 0xa3, 0xc2, 0x02, 0xcf, 0x63, 0x91, 0x20, 0x33, 0x21, 0x7a,
	0xdb, 0x66, 0x33, 0x93, 0xe2, 0x07, 0xd7, 0x71, 0x2d, 0x23, 0xf8, 0x36, 0x80, 0x7b, 0x6f, 0xe3,
	0xb5, 0x3a, 0x89, 0x33, 0xe4, 0xb1, 0x38, 0x7b, 0x5d, 0xa6, 0x71, 0x85, 0x1c, 0x3f, 0xd7, 0xa8,
	0x2b, 0x3a, 0x01, 0xb7, 0x88, 0x97, 0x58, 0x78, 0x64, 0x4a, 0xc2, 0x7d, 0x6e, 0x01, 0x7d, 0x00,
	0x83, 0x3c, 0xf5, 0x06, 0x53, 0x12, 0x1e, 0xcc, 0x26, 0xac, 0x5b, 0x92, 0x35, 0x5f, 0x2d, 0x8e,
	0xf9, 0x20, 0x4f, 0xe9, 0x1c, 0x5c, 0x4c, 0x33, 0xd4, 0xde, 0x70, 0x3a, 0x0c, 0x0f, 0x66, 0x87,
	0x7f, 0x26, 0xee, 0xac, 0xc9, 0x9e, 0xa5, 0x19, 0x72, 0x4b, 0xf5, 0x4b, 0x70, 0x1a, 0xd8, 0x56,
	0x24, 0x37, 0x54, 0x7c, 0x08, 0xce, 0x97, 0x15, 0x8a, 0xb6, 0x33, 0xfa, 0x7b, 0xde, 0x9b, 0x15,
	0x0a, 0x6e, 0xe2, 0xd4, 0x87, 0xbd, 0x52, 0xa1, 0x46, 0x91, 0xa0, 0x37, 0x9c, 0x92, 0x70, 0x8f,
	0x5f, 0xe2, 0xe0, 0x27, 0x01, 0x7f, 0x57, 0x6f, 0xba, 0x94, 0x42, 0x23, 0x5d, 0xc0, 0x58, 0xa1,
	0xae, 0x8b, 0x4a, 0x7b, 0xc4, 0x8c, 0x15, 0xdd, 0x3c, 0x96, 0xa5, 0x32, 0x6e, 0x78, 0x7c, 0xcb,
	0xf7, 0xbf, 0xc2, 0xc8, 0x3e, 0xfd, 0x93, 0xca, 0x77, 0xc1, 0x55, 0x58, 0xa9, 0x8d, 0x19, 0x64,
	0xff, 0xc5, 0x2d, 0x6e, 0x21, 0x9d, 0x80, 0xf3, 0x29, 0xce, 0x0b, 0xcf, 0x69, 0x9f, 0x0d, 0x9a,
	0x8f, 0xc1, 0x45, 0xa5, 0xa4, 0x0a, 0xbe, 0x5f, 0x19, 0xf3, 0x39, 0x56, 0xa7, 0xb2, 0x7c, 0xf9,
	0x3f, 0xf6, 0xde, 0x70, 0xf3, 0x75, 0x5e, 0x99, 0x8e, 0x5c, 0x6e, 0xc1, 0xe5, 0x6e, 0x9c, 0xeb,
	0x77, 0x13, 0xfc, 0x20, 0x70, 0x7f, 0x67, 0x63, 0xed, 0x02, 0x8e, 0xc1, 0x55, 0xb1, 0x38, 0xdb,
	0xca, 0xcf, 0xfe, 0x2e, 0xff, 0x15, 0x26, 0x6b, 0xde, 0xb8, 0x25, 0xfb, 0x73, 0x70, 0x1a, 0xd8,
	0xf3, 0xae, 0x26, 0xe0, 0xea, 0x44, 0x2a, 0x34, 0xa3, 0x13, 0x6e, 0xc1, 0x4c, 0x03, 0xed, 0x96,
	0x5b, 0x88, 0xac, 0x51, 0xee, 0x3d, 0x8c, 0xec, 0xde, 0xe9, 0xa3, 0x9e, 0x07, 0xef, 0x87, 0x7d,
	0x4f, 0x28, 0x24, 0x33, 0x0d, 0x77, 0xba, 0xf1, 0x57, 0x35, 0xaa, 0x0d, 0xfd, 0x00, 0xe3, 0x76,
	0x58, 0x1a, 0xf6, 0xd0, 0xc3, 0x56, 0x7d, 0xdc, 0x5b, 0xb9, 0xf9, 0x29, 0x4c, 0xa5, 0xca, 0xb6,
	0xf9, 0x8d, 0x9b, 0x58, 0xf3, 0x68, 0xa9, 0x8d, 0x9b, 0x9c, 0x90, 0x77, 0x2c, 0xcb, 0xab, 0x55,
	0xbd, 0x64, 0x89, 0x5c, 0x47, 0x1d, 0xe3, 0x79, 0x62, 0x8d, 0xe7, 0xfc, 0xe8, 0x28, 0xca, 0xba,
	0xfe, 0xb3, 0x1c, 0x99, 0xc0, 0xd3, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x49, 0x80, 0x33, 0x93,
	0xe2, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// YamrPageRankIngestClient is the client API for YamrPageRankIngest service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YamrPageRankIngestClient interface {
	Update(ctx context.Context, opts ...grpc.CallOption) (YamrPageRankIngest_UpdateClient, error)
}

type yamrPageRankIngestClient struct {
	cc grpc.ClientConnInterface
}

func NewYamrPageRankIngestClient(cc grpc.ClientConnInterface) YamrPageRankIngestClient {
	return &yamrPageRankIngestClient{cc}
}

func (c *yamrPageRankIngestClient) Update(ctx context.Context, opts ...grpc.CallOption) (YamrPageRankIngest_UpdateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_YamrPageRankIngest_serviceDesc.Streams[0], "/zenoss.cloud.YamrPageRankIngest/Update", opts...)
	if err != nil {
		return nil, err
	}
	x := &yamrPageRankIngestUpdateClient{stream}
	return x, nil
}

type YamrPageRankIngest_UpdateClient interface {
	Send(*YamrPageRankUpdateRequest) error
	CloseAndRecv() (*YamrPageRankUpdateResponse, error)
	grpc.ClientStream
}

type yamrPageRankIngestUpdateClient struct {
	grpc.ClientStream
}

func (x *yamrPageRankIngestUpdateClient) Send(m *YamrPageRankUpdateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *yamrPageRankIngestUpdateClient) CloseAndRecv() (*YamrPageRankUpdateResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(YamrPageRankUpdateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// YamrPageRankIngestServer is the server API for YamrPageRankIngest service.
type YamrPageRankIngestServer interface {
	Update(YamrPageRankIngest_UpdateServer) error
}

// UnimplementedYamrPageRankIngestServer can be embedded to have forward compatible implementations.
type UnimplementedYamrPageRankIngestServer struct {
}

func (*UnimplementedYamrPageRankIngestServer) Update(srv YamrPageRankIngest_UpdateServer) error {
	return status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterYamrPageRankIngestServer(s *grpc.Server, srv YamrPageRankIngestServer) {
	s.RegisterService(&_YamrPageRankIngest_serviceDesc, srv)
}

func _YamrPageRankIngest_Update_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(YamrPageRankIngestServer).Update(&yamrPageRankIngestUpdateServer{stream})
}

type YamrPageRankIngest_UpdateServer interface {
	SendAndClose(*YamrPageRankUpdateResponse) error
	Recv() (*YamrPageRankUpdateRequest, error)
	grpc.ServerStream
}

type yamrPageRankIngestUpdateServer struct {
	grpc.ServerStream
}

func (x *yamrPageRankIngestUpdateServer) SendAndClose(m *YamrPageRankUpdateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *yamrPageRankIngestUpdateServer) Recv() (*YamrPageRankUpdateRequest, error) {
	m := new(YamrPageRankUpdateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _YamrPageRankIngest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zenoss.cloud.YamrPageRankIngest",
	HandlerType: (*YamrPageRankIngestServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Update",
			Handler:       _YamrPageRankIngest_Update_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "zenoss/zing/proto/cloud/yamr_relevance.proto",
}

// YamrPageRankQueryClient is the client API for YamrPageRankQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YamrPageRankQueryClient interface {
	GetTopN(ctx context.Context, in *YamrPageRankGetTopNRequest, opts ...grpc.CallOption) (*YamrPageRankGetTopNResponse, error)
}

type yamrPageRankQueryClient struct {
	cc grpc.ClientConnInterface
}

func NewYamrPageRankQueryClient(cc grpc.ClientConnInterface) YamrPageRankQueryClient {
	return &yamrPageRankQueryClient{cc}
}

func (c *yamrPageRankQueryClient) GetTopN(ctx context.Context, in *YamrPageRankGetTopNRequest, opts ...grpc.CallOption) (*YamrPageRankGetTopNResponse, error) {
	out := new(YamrPageRankGetTopNResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.YamrPageRankQuery/GetTopN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YamrPageRankQueryServer is the server API for YamrPageRankQuery service.
type YamrPageRankQueryServer interface {
	GetTopN(context.Context, *YamrPageRankGetTopNRequest) (*YamrPageRankGetTopNResponse, error)
}

// UnimplementedYamrPageRankQueryServer can be embedded to have forward compatible implementations.
type UnimplementedYamrPageRankQueryServer struct {
}

func (*UnimplementedYamrPageRankQueryServer) GetTopN(ctx context.Context, req *YamrPageRankGetTopNRequest) (*YamrPageRankGetTopNResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopN not implemented")
}

func RegisterYamrPageRankQueryServer(s *grpc.Server, srv YamrPageRankQueryServer) {
	s.RegisterService(&_YamrPageRankQuery_serviceDesc, srv)
}

func _YamrPageRankQuery_GetTopN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YamrPageRankGetTopNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YamrPageRankQueryServer).GetTopN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.YamrPageRankQuery/GetTopN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YamrPageRankQueryServer).GetTopN(ctx, req.(*YamrPageRankGetTopNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YamrPageRankQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zenoss.cloud.YamrPageRankQuery",
	HandlerType: (*YamrPageRankQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTopN",
			Handler:    _YamrPageRankQuery_GetTopN_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zenoss/zing/proto/cloud/yamr_relevance.proto",
}
