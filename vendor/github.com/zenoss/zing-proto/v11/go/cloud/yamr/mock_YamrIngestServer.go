// Code generated by mockery v1.0.0. DO NOT EDIT.

package yamr

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockYamrIngestServer is an autogenerated mock type for the YamrIngestServer type
type MockYamrIngestServer struct {
	mock.Mock
}

// Put provides a mock function with given fields: _a0, _a1
func (_m *MockYamrIngestServer) Put(_a0 context.Context, _a1 *PutRequest) (*PutResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *PutResponse
	if rf, ok := ret.Get(0).(func(context.Context, *PutRequest) *PutResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*PutResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *PutRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutBulk provides a mock function with given fields: _a0, _a1
func (_m *MockYamrIngestServer) PutBulk(_a0 context.Context, _a1 *PutBulkRequest) (*PutBulkResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *PutBulkResponse
	if rf, ok := ret.Get(0).(func(context.Context, *PutBulkRequest) *PutBulkResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*PutBulkResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *PutBulkRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
