// Code generated by mockery v2.13.1. DO NOT EDIT.

package eventquery

import mock "github.com/stretchr/testify/mock"

// mockIsClause_Clause is an autogenerated mock type for the isClause_Clause type
type mockIsClause_Clause struct {
	mock.Mock
}

type mockIsClause_Clause_Expecter struct {
	mock *mock.Mock
}

func (_m *mockIsClause_Clause) EXPECT() *mockIsClause_Clause_Expecter {
	return &mockIsClause_Clause_Expecter{mock: &_m.Mock}
}

// isClause_Clause provides a mock function with given fields:
func (_m *mockIsClause_Clause) isClause_Clause() {
	_m.Called()
}

// mockIsClause_Clause_isClause_Clause_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isClause_Clause'
type mockIsClause_Clause_isClause_Clause_Call struct {
	*mock.Call
}

// isClause_Clause is a helper method to define mock.On call
func (_e *mockIsClause_Clause_Expecter) isClause_Clause() *mockIsClause_Clause_isClause_Clause_Call {
	return &mockIsClause_Clause_isClause_Clause_Call{Call: _e.mock.On("isClause_Clause")}
}

func (_c *mockIsClause_Clause_isClause_Clause_Call) Run(run func()) *mockIsClause_Clause_isClause_Clause_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockIsClause_Clause_isClause_Clause_Call) Return() *mockIsClause_Clause_isClause_Clause_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTnewMockIsClause_Clause interface {
	mock.TestingT
	Cleanup(func())
}

// newMockIsClause_Clause creates a new instance of mockIsClause_Clause. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockIsClause_Clause(t mockConstructorTestingTnewMockIsClause_Clause) *mockIsClause_Clause {
	mock := &mockIsClause_Clause{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
