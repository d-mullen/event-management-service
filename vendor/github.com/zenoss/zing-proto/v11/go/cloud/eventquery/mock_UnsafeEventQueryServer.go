// Code generated by mockery v2.12.2. DO NOT EDIT.

package eventquery

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockUnsafeEventQueryServer is an autogenerated mock type for the UnsafeEventQueryServer type
type MockUnsafeEventQueryServer struct {
	mock.Mock
}

type MockUnsafeEventQueryServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeEventQueryServer) EXPECT() *MockUnsafeEventQueryServer_Expecter {
	return &MockUnsafeEventQueryServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedEventQueryServer provides a mock function with given fields:
func (_m *MockUnsafeEventQueryServer) mustEmbedUnimplementedEventQueryServer() {
	_m.Called()
}

// MockUnsafeEventQueryServer_mustEmbedUnimplementedEventQueryServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedEventQueryServer'
type MockUnsafeEventQueryServer_mustEmbedUnimplementedEventQueryServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedEventQueryServer is a helper method to define mock.On call
func (_e *MockUnsafeEventQueryServer_Expecter) mustEmbedUnimplementedEventQueryServer() *MockUnsafeEventQueryServer_mustEmbedUnimplementedEventQueryServer_Call {
	return &MockUnsafeEventQueryServer_mustEmbedUnimplementedEventQueryServer_Call{Call: _e.mock.On("mustEmbedUnimplementedEventQueryServer")}
}

func (_c *MockUnsafeEventQueryServer_mustEmbedUnimplementedEventQueryServer_Call) Run(run func()) *MockUnsafeEventQueryServer_mustEmbedUnimplementedEventQueryServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeEventQueryServer_mustEmbedUnimplementedEventQueryServer_Call) Return() *MockUnsafeEventQueryServer_mustEmbedUnimplementedEventQueryServer_Call {
	_c.Call.Return()
	return _c
}

// NewMockUnsafeEventQueryServer creates a new instance of MockUnsafeEventQueryServer. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockUnsafeEventQueryServer(t testing.TB) *MockUnsafeEventQueryServer {
	mock := &MockUnsafeEventQueryServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
