// Code generated by mockery v2.14.0. DO NOT EDIT.

package tenant

import mock "github.com/stretchr/testify/mock"

// mockIsDeleteTenantNameRequest_TenantIdentifier is an autogenerated mock type for the isDeleteTenantNameRequest_TenantIdentifier type
type mockIsDeleteTenantNameRequest_TenantIdentifier struct {
	mock.Mock
}

type mockIsDeleteTenantNameRequest_TenantIdentifier_Expecter struct {
	mock *mock.Mock
}

func (_m *mockIsDeleteTenantNameRequest_TenantIdentifier) EXPECT() *mockIsDeleteTenantNameRequest_TenantIdentifier_Expecter {
	return &mockIsDeleteTenantNameRequest_TenantIdentifier_Expecter{mock: &_m.Mock}
}

// isDeleteTenantNameRequest_TenantIdentifier provides a mock function with given fields:
func (_m *mockIsDeleteTenantNameRequest_TenantIdentifier) isDeleteTenantNameRequest_TenantIdentifier() {
	_m.Called()
}

// mockIsDeleteTenantNameRequest_TenantIdentifier_isDeleteTenantNameRequest_TenantIdentifier_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isDeleteTenantNameRequest_TenantIdentifier'
type mockIsDeleteTenantNameRequest_TenantIdentifier_isDeleteTenantNameRequest_TenantIdentifier_Call struct {
	*mock.Call
}

// isDeleteTenantNameRequest_TenantIdentifier is a helper method to define mock.On call
func (_e *mockIsDeleteTenantNameRequest_TenantIdentifier_Expecter) isDeleteTenantNameRequest_TenantIdentifier() *mockIsDeleteTenantNameRequest_TenantIdentifier_isDeleteTenantNameRequest_TenantIdentifier_Call {
	return &mockIsDeleteTenantNameRequest_TenantIdentifier_isDeleteTenantNameRequest_TenantIdentifier_Call{Call: _e.mock.On("isDeleteTenantNameRequest_TenantIdentifier")}
}

func (_c *mockIsDeleteTenantNameRequest_TenantIdentifier_isDeleteTenantNameRequest_TenantIdentifier_Call) Run(run func()) *mockIsDeleteTenantNameRequest_TenantIdentifier_isDeleteTenantNameRequest_TenantIdentifier_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockIsDeleteTenantNameRequest_TenantIdentifier_isDeleteTenantNameRequest_TenantIdentifier_Call) Return() *mockIsDeleteTenantNameRequest_TenantIdentifier_isDeleteTenantNameRequest_TenantIdentifier_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTnewMockIsDeleteTenantNameRequest_TenantIdentifier interface {
	mock.TestingT
	Cleanup(func())
}

// newMockIsDeleteTenantNameRequest_TenantIdentifier creates a new instance of mockIsDeleteTenantNameRequest_TenantIdentifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockIsDeleteTenantNameRequest_TenantIdentifier(t mockConstructorTestingTnewMockIsDeleteTenantNameRequest_TenantIdentifier) *mockIsDeleteTenantNameRequest_TenantIdentifier {
	mock := &mockIsDeleteTenantNameRequest_TenantIdentifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
