// Code generated by mockery v1.0.0. DO NOT EDIT.

package tenant

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockTenantInternalServiceServer is an autogenerated mock type for the TenantInternalServiceServer type
type MockTenantInternalServiceServer struct {
	mock.Mock
}

// GetTenantDataId provides a mock function with given fields: _a0, _a1
func (_m *MockTenantInternalServiceServer) GetTenantDataId(_a0 context.Context, _a1 *GetTenantDataIdRequest) (*GetTenantDataIdResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetTenantDataIdResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetTenantDataIdRequest) *GetTenantDataIdResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetTenantDataIdResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetTenantDataIdRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTenantDataIds provides a mock function with given fields: _a0, _a1
func (_m *MockTenantInternalServiceServer) GetTenantDataIds(_a0 context.Context, _a1 *GetTenantDataIdsRequest) (*GetTenantDataIdsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetTenantDataIdsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetTenantDataIdsRequest) *GetTenantDataIdsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetTenantDataIdsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetTenantDataIdsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTenantId provides a mock function with given fields: _a0, _a1
func (_m *MockTenantInternalServiceServer) GetTenantId(_a0 context.Context, _a1 *GetTenantIdRequest) (*GetTenantIdResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetTenantIdResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetTenantIdRequest) *GetTenantIdResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetTenantIdResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetTenantIdRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTenantIds provides a mock function with given fields: _a0, _a1
func (_m *MockTenantInternalServiceServer) GetTenantIds(_a0 context.Context, _a1 *GetTenantIdsRequest) (*GetTenantIdsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetTenantIdsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetTenantIdsRequest) *GetTenantIdsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetTenantIdsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetTenantIdsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTenantName provides a mock function with given fields: _a0, _a1
func (_m *MockTenantInternalServiceServer) GetTenantName(_a0 context.Context, _a1 *GetTenantNameRequest) (*GetTenantNameResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetTenantNameResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetTenantNameRequest) *GetTenantNameResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetTenantNameResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetTenantNameRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTenantNames provides a mock function with given fields: _a0, _a1
func (_m *MockTenantInternalServiceServer) GetTenantNames(_a0 context.Context, _a1 *GetTenantNamesRequest) (*GetTenantNamesResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetTenantNamesResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetTenantNamesRequest) *GetTenantNamesResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetTenantNamesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetTenantNamesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTenants provides a mock function with given fields: _a0, _a1
func (_m *MockTenantInternalServiceServer) ListTenants(_a0 context.Context, _a1 *ListTenantsRequest) (*ListTenantsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *ListTenantsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *ListTenantsRequest) *ListTenantsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ListTenantsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ListTenantsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
