// Code generated by mockery v2.12.2. DO NOT EDIT.

package tenant

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// mockIsChangeTenantNameRequest_TenantIdentifier is an autogenerated mock type for the isChangeTenantNameRequest_TenantIdentifier type
type mockIsChangeTenantNameRequest_TenantIdentifier struct {
	mock.Mock
}

type mockIsChangeTenantNameRequest_TenantIdentifier_Expecter struct {
	mock *mock.Mock
}

func (_m *mockIsChangeTenantNameRequest_TenantIdentifier) EXPECT() *mockIsChangeTenantNameRequest_TenantIdentifier_Expecter {
	return &mockIsChangeTenantNameRequest_TenantIdentifier_Expecter{mock: &_m.Mock}
}

// isChangeTenantNameRequest_TenantIdentifier provides a mock function with given fields:
func (_m *mockIsChangeTenantNameRequest_TenantIdentifier) isChangeTenantNameRequest_TenantIdentifier() {
	_m.Called()
}

// mockIsChangeTenantNameRequest_TenantIdentifier_isChangeTenantNameRequest_TenantIdentifier_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isChangeTenantNameRequest_TenantIdentifier'
type mockIsChangeTenantNameRequest_TenantIdentifier_isChangeTenantNameRequest_TenantIdentifier_Call struct {
	*mock.Call
}

// isChangeTenantNameRequest_TenantIdentifier is a helper method to define mock.On call
func (_e *mockIsChangeTenantNameRequest_TenantIdentifier_Expecter) isChangeTenantNameRequest_TenantIdentifier() *mockIsChangeTenantNameRequest_TenantIdentifier_isChangeTenantNameRequest_TenantIdentifier_Call {
	return &mockIsChangeTenantNameRequest_TenantIdentifier_isChangeTenantNameRequest_TenantIdentifier_Call{Call: _e.mock.On("isChangeTenantNameRequest_TenantIdentifier")}
}

func (_c *mockIsChangeTenantNameRequest_TenantIdentifier_isChangeTenantNameRequest_TenantIdentifier_Call) Run(run func()) *mockIsChangeTenantNameRequest_TenantIdentifier_isChangeTenantNameRequest_TenantIdentifier_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockIsChangeTenantNameRequest_TenantIdentifier_isChangeTenantNameRequest_TenantIdentifier_Call) Return() *mockIsChangeTenantNameRequest_TenantIdentifier_isChangeTenantNameRequest_TenantIdentifier_Call {
	_c.Call.Return()
	return _c
}

// newMockIsChangeTenantNameRequest_TenantIdentifier creates a new instance of mockIsChangeTenantNameRequest_TenantIdentifier. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func newMockIsChangeTenantNameRequest_TenantIdentifier(t testing.TB) *mockIsChangeTenantNameRequest_TenantIdentifier {
	mock := &mockIsChangeTenantNameRequest_TenantIdentifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
