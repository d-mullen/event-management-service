// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zenoss/zing/proto/cloud/scalar.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScalarArray struct {
	Scalars              []*Scalar `protobuf:"bytes,1,rep,name=scalars,proto3" json:"scalars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ScalarArray) Reset()         { *m = ScalarArray{} }
func (m *ScalarArray) String() string { return proto.CompactTextString(m) }
func (*ScalarArray) ProtoMessage()    {}
func (*ScalarArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_528d767dfd01e0de, []int{0}
}

func (m *ScalarArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScalarArray.Unmarshal(m, b)
}
func (m *ScalarArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScalarArray.Marshal(b, m, deterministic)
}
func (m *ScalarArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScalarArray.Merge(m, src)
}
func (m *ScalarArray) XXX_Size() int {
	return xxx_messageInfo_ScalarArray.Size(m)
}
func (m *ScalarArray) XXX_DiscardUnknown() {
	xxx_messageInfo_ScalarArray.DiscardUnknown(m)
}

var xxx_messageInfo_ScalarArray proto.InternalMessageInfo

func (m *ScalarArray) GetScalars() []*Scalar {
	if m != nil {
		return m.Scalars
	}
	return nil
}

type Scalar struct {
	// Types that are valid to be assigned to Value:
	//	*Scalar_LongVal
	//	*Scalar_UlongVal
	//	*Scalar_UintVal
	//	*Scalar_FloatVal
	//	*Scalar_DoubleVal
	//	*Scalar_StringVal
	//	*Scalar_BoolVal
	Value                isScalar_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Scalar) Reset()         { *m = Scalar{} }
func (m *Scalar) String() string { return proto.CompactTextString(m) }
func (*Scalar) ProtoMessage()    {}
func (*Scalar) Descriptor() ([]byte, []int) {
	return fileDescriptor_528d767dfd01e0de, []int{1}
}

func (m *Scalar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scalar.Unmarshal(m, b)
}
func (m *Scalar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scalar.Marshal(b, m, deterministic)
}
func (m *Scalar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scalar.Merge(m, src)
}
func (m *Scalar) XXX_Size() int {
	return xxx_messageInfo_Scalar.Size(m)
}
func (m *Scalar) XXX_DiscardUnknown() {
	xxx_messageInfo_Scalar.DiscardUnknown(m)
}

var xxx_messageInfo_Scalar proto.InternalMessageInfo

type isScalar_Value interface {
	isScalar_Value()
}

type Scalar_LongVal struct {
	LongVal int64 `protobuf:"varint,1,opt,name=long_val,json=longVal,proto3,oneof"`
}

type Scalar_UlongVal struct {
	UlongVal uint64 `protobuf:"varint,2,opt,name=ulong_val,json=ulongVal,proto3,oneof"`
}

type Scalar_UintVal struct {
	UintVal uint32 `protobuf:"varint,3,opt,name=uint_val,json=uintVal,proto3,oneof"`
}

type Scalar_FloatVal struct {
	FloatVal float32 `protobuf:"fixed32,4,opt,name=float_val,json=floatVal,proto3,oneof"`
}

type Scalar_DoubleVal struct {
	DoubleVal float64 `protobuf:"fixed64,5,opt,name=double_val,json=doubleVal,proto3,oneof"`
}

type Scalar_StringVal struct {
	StringVal string `protobuf:"bytes,6,opt,name=string_val,json=stringVal,proto3,oneof"`
}

type Scalar_BoolVal struct {
	BoolVal bool `protobuf:"varint,7,opt,name=bool_val,json=boolVal,proto3,oneof"`
}

func (*Scalar_LongVal) isScalar_Value() {}

func (*Scalar_UlongVal) isScalar_Value() {}

func (*Scalar_UintVal) isScalar_Value() {}

func (*Scalar_FloatVal) isScalar_Value() {}

func (*Scalar_DoubleVal) isScalar_Value() {}

func (*Scalar_StringVal) isScalar_Value() {}

func (*Scalar_BoolVal) isScalar_Value() {}

func (m *Scalar) GetValue() isScalar_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Scalar) GetLongVal() int64 {
	if x, ok := m.GetValue().(*Scalar_LongVal); ok {
		return x.LongVal
	}
	return 0
}

func (m *Scalar) GetUlongVal() uint64 {
	if x, ok := m.GetValue().(*Scalar_UlongVal); ok {
		return x.UlongVal
	}
	return 0
}

func (m *Scalar) GetUintVal() uint32 {
	if x, ok := m.GetValue().(*Scalar_UintVal); ok {
		return x.UintVal
	}
	return 0
}

func (m *Scalar) GetFloatVal() float32 {
	if x, ok := m.GetValue().(*Scalar_FloatVal); ok {
		return x.FloatVal
	}
	return 0
}

func (m *Scalar) GetDoubleVal() float64 {
	if x, ok := m.GetValue().(*Scalar_DoubleVal); ok {
		return x.DoubleVal
	}
	return 0
}

func (m *Scalar) GetStringVal() string {
	if x, ok := m.GetValue().(*Scalar_StringVal); ok {
		return x.StringVal
	}
	return ""
}

func (m *Scalar) GetBoolVal() bool {
	if x, ok := m.GetValue().(*Scalar_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Scalar) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Scalar_LongVal)(nil),
		(*Scalar_UlongVal)(nil),
		(*Scalar_UintVal)(nil),
		(*Scalar_FloatVal)(nil),
		(*Scalar_DoubleVal)(nil),
		(*Scalar_StringVal)(nil),
		(*Scalar_BoolVal)(nil),
	}
}

func init() {
	proto.RegisterType((*ScalarArray)(nil), "zenoss.cloud.ScalarArray")
	proto.RegisterType((*Scalar)(nil), "zenoss.cloud.Scalar")
}

func init() {
	proto.RegisterFile("zenoss/zing/proto/cloud/scalar.proto", fileDescriptor_528d767dfd01e0de)
}

var fileDescriptor_528d767dfd01e0de = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x7b, 0x9b, 0x36, 0x3f, 0x53, 0xdd, 0x04, 0x17, 0x85, 0x22, 0x0e, 0xc1, 0xc5, 0x6c,
	0xcc, 0x58, 0x5d, 0xbb, 0xb0, 0xab, 0x2c, 0x25, 0x42, 0x11, 0x37, 0x32, 0x49, 0x63, 0x0c, 0x4c,
	0x73, 0x65, 0x92, 0x09, 0xd8, 0x27, 0xf6, 0x31, 0x64, 0x66, 0x12, 0xe9, 0xf6, 0xfb, 0xce, 0xe1,
	0xc2, 0xb9, 0xe4, 0xf6, 0x54, 0xb5, 0xd8, 0x75, 0xfc, 0xd4, 0xb4, 0x35, 0xff, 0x56, 0xd8, 0x23,
	0x2f, 0x25, 0xea, 0x03, 0xef, 0x4a, 0x21, 0x85, 0x4a, 0x2d, 0x8a, 0x2f, 0x5c, 0x2a, 0xb5, 0x2a,
	0x79, 0x22, 0xab, 0x57, 0x6b, 0x9f, 0x95, 0x12, 0x3f, 0x71, 0x4a, 0x02, 0x17, 0xee, 0xd6, 0x40,
	0x3d, 0xb6, 0x7a, 0xb8, 0x4a, 0xcf, 0xe3, 0xa9, 0xcb, 0xe6, 0x53, 0x28, 0xf9, 0x05, 0xe2, 0x3b,
	0x16, 0x6f, 0x48, 0x28, 0xb1, 0xad, 0x3f, 0x06, 0x21, 0xd7, 0x40, 0x81, 0x79, 0xd9, 0x2c, 0x0f,
	0x0c, 0xd9, 0x0b, 0x19, 0x5f, 0x93, 0x48, 0xff, 0xdb, 0x39, 0x05, 0xb6, 0xc8, 0x66, 0x79, 0xa8,
	0x27, 0xbd, 0x21, 0xa1, 0x6e, 0xda, 0xde, 0x5a, 0x8f, 0x02, 0xbb, 0x34, 0x5d, 0x43, 0xc6, 0xee,
	0xa7, 0x44, 0xe1, 0xec, 0x82, 0x02, 0x9b, 0x9b, 0xae, 0x45, 0x46, 0xdf, 0x10, 0x72, 0x40, 0x5d,
	0xc8, 0xca, 0xfa, 0x25, 0x05, 0x06, 0xd9, 0x2c, 0x8f, 0x1c, 0x1b, 0x03, 0x5d, 0xaf, 0x9a, 0xf1,
	0xb8, 0x4f, 0x81, 0x45, 0x26, 0xe0, 0xd8, 0x78, 0xbd, 0x40, 0x94, 0x56, 0x07, 0x14, 0x58, 0x68,
	0xae, 0x1b, 0xb2, 0x17, 0x72, 0x17, 0x90, 0xe5, 0x20, 0xa4, 0xae, 0x76, 0x6f, 0x24, 0x41, 0x55,
	0x4f, 0x73, 0x98, 0x8d, 0xdd, 0xa0, 0xe3, 0x32, 0x25, 0x1e, 0x8f, 0xd8, 0xbe, 0xc0, 0xfb, 0x7d,
	0xdd, 0xf4, 0x5f, 0xba, 0x30, 0x80, 0x9f, 0x3d, 0xe4, 0xce, 0x3d, 0x64, 0xd8, 0x6e, 0x79, 0x3d,
	0xfd, 0xc5, 0x75, 0x0a, 0xdf, 0xaa, 0xc7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x5c, 0xf9,
	0x1c, 0xc0, 0x01, 0x00, 0x00,
}
