// Code generated by mockery v2.14.0. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// mockIsSortBy_SortType is an autogenerated mock type for the isSortBy_SortType type
type mockIsSortBy_SortType struct {
	mock.Mock
}

type mockIsSortBy_SortType_Expecter struct {
	mock *mock.Mock
}

func (_m *mockIsSortBy_SortType) EXPECT() *mockIsSortBy_SortType_Expecter {
	return &mockIsSortBy_SortType_Expecter{mock: &_m.Mock}
}

// isSortBy_SortType provides a mock function with given fields:
func (_m *mockIsSortBy_SortType) isSortBy_SortType() {
	_m.Called()
}

// mockIsSortBy_SortType_isSortBy_SortType_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isSortBy_SortType'
type mockIsSortBy_SortType_isSortBy_SortType_Call struct {
	*mock.Call
}

// isSortBy_SortType is a helper method to define mock.On call
func (_e *mockIsSortBy_SortType_Expecter) isSortBy_SortType() *mockIsSortBy_SortType_isSortBy_SortType_Call {
	return &mockIsSortBy_SortType_isSortBy_SortType_Call{Call: _e.mock.On("isSortBy_SortType")}
}

func (_c *mockIsSortBy_SortType_isSortBy_SortType_Call) Run(run func()) *mockIsSortBy_SortType_isSortBy_SortType_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockIsSortBy_SortType_isSortBy_SortType_Call) Return() *mockIsSortBy_SortType_isSortBy_SortType_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTnewMockIsSortBy_SortType interface {
	mock.TestingT
	Cleanup(func())
}

// newMockIsSortBy_SortType creates a new instance of mockIsSortBy_SortType. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockIsSortBy_SortType(t mockConstructorTestingTnewMockIsSortBy_SortType) *mockIsSortBy_SortType {
	mock := &mockIsSortBy_SortType{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
