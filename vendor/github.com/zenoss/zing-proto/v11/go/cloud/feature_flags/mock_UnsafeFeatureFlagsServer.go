// Code generated by mockery v2.12.2. DO NOT EDIT.

package feature_flags

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockUnsafeFeatureFlagsServer is an autogenerated mock type for the UnsafeFeatureFlagsServer type
type MockUnsafeFeatureFlagsServer struct {
	mock.Mock
}

type MockUnsafeFeatureFlagsServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeFeatureFlagsServer) EXPECT() *MockUnsafeFeatureFlagsServer_Expecter {
	return &MockUnsafeFeatureFlagsServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedFeatureFlagsServer provides a mock function with given fields:
func (_m *MockUnsafeFeatureFlagsServer) mustEmbedUnimplementedFeatureFlagsServer() {
	_m.Called()
}

// MockUnsafeFeatureFlagsServer_mustEmbedUnimplementedFeatureFlagsServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedFeatureFlagsServer'
type MockUnsafeFeatureFlagsServer_mustEmbedUnimplementedFeatureFlagsServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedFeatureFlagsServer is a helper method to define mock.On call
func (_e *MockUnsafeFeatureFlagsServer_Expecter) mustEmbedUnimplementedFeatureFlagsServer() *MockUnsafeFeatureFlagsServer_mustEmbedUnimplementedFeatureFlagsServer_Call {
	return &MockUnsafeFeatureFlagsServer_mustEmbedUnimplementedFeatureFlagsServer_Call{Call: _e.mock.On("mustEmbedUnimplementedFeatureFlagsServer")}
}

func (_c *MockUnsafeFeatureFlagsServer_mustEmbedUnimplementedFeatureFlagsServer_Call) Run(run func()) *MockUnsafeFeatureFlagsServer_mustEmbedUnimplementedFeatureFlagsServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeFeatureFlagsServer_mustEmbedUnimplementedFeatureFlagsServer_Call) Return() *MockUnsafeFeatureFlagsServer_mustEmbedUnimplementedFeatureFlagsServer_Call {
	_c.Call.Return()
	return _c
}

// NewMockUnsafeFeatureFlagsServer creates a new instance of MockUnsafeFeatureFlagsServer. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockUnsafeFeatureFlagsServer(t testing.TB) *MockUnsafeFeatureFlagsServer {
	mock := &MockUnsafeFeatureFlagsServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
