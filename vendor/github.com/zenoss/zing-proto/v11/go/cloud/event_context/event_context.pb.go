// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zenoss/zing/proto/cloud/event_context.proto

package event_context

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "github.com/zenoss/zing-proto/v11/go/cloud/common"
	_ "github.com/zenoss/zing-proto/v11/go/cloud/eventts"
	event "github.com/zenoss/zing-proto/v11/go/event"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PageInput_Direction int32

const (
	PageInput_FORWARD  PageInput_Direction = 0
	PageInput_BACKWARD PageInput_Direction = 1
)

var PageInput_Direction_name = map[int32]string{
	0: "FORWARD",
	1: "BACKWARD",
}

var PageInput_Direction_value = map[string]int32{
	"FORWARD":  0,
	"BACKWARD": 1,
}

func (x PageInput_Direction) String() string {
	return proto.EnumName(PageInput_Direction_name, int32(x))
}

func (PageInput_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{15, 0}
}

// An EventOccurrenceSeries is a collection of contextual data for
// quickly accessing event time series data.
type EventOccurrenceSeries struct {
	Id                   string                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tenant               string                              `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Entity               string                              `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	Dimensions           map[string]*common.Scalar           `protobuf:"bytes,4,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Occurrences          []*EventOccurrenceSeries_Occurrence `protobuf:"bytes,5,rep,name=occurrences,proto3" json:"occurrences,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *EventOccurrenceSeries) Reset()         { *m = EventOccurrenceSeries{} }
func (m *EventOccurrenceSeries) String() string { return proto.CompactTextString(m) }
func (*EventOccurrenceSeries) ProtoMessage()    {}
func (*EventOccurrenceSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{0}
}

func (m *EventOccurrenceSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventOccurrenceSeries.Unmarshal(m, b)
}
func (m *EventOccurrenceSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventOccurrenceSeries.Marshal(b, m, deterministic)
}
func (m *EventOccurrenceSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventOccurrenceSeries.Merge(m, src)
}
func (m *EventOccurrenceSeries) XXX_Size() int {
	return xxx_messageInfo_EventOccurrenceSeries.Size(m)
}
func (m *EventOccurrenceSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_EventOccurrenceSeries.DiscardUnknown(m)
}

var xxx_messageInfo_EventOccurrenceSeries proto.InternalMessageInfo

func (m *EventOccurrenceSeries) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EventOccurrenceSeries) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *EventOccurrenceSeries) GetEntity() string {
	if m != nil {
		return m.Entity
	}
	return ""
}

func (m *EventOccurrenceSeries) GetDimensions() map[string]*common.Scalar {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *EventOccurrenceSeries) GetOccurrences() []*EventOccurrenceSeries_Occurrence {
	if m != nil {
		return m.Occurrences
	}
	return nil
}

// An Occurrence captures the duration in which several event instances
// were observed to have taken place. An occurrence provides a snapshot
// of often queried attributes within an event time-series.
type EventOccurrenceSeries_Occurrence struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TimeRange            *common.TimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	IsActive             bool              `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Severity             event.Severity    `protobuf:"varint,4,opt,name=severity,proto3,enum=events.Severity" json:"severity,omitempty"`
	Notes                []*OccurrenceNote `protobuf:"bytes,5,rep,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EventOccurrenceSeries_Occurrence) Reset()         { *m = EventOccurrenceSeries_Occurrence{} }
func (m *EventOccurrenceSeries_Occurrence) String() string { return proto.CompactTextString(m) }
func (*EventOccurrenceSeries_Occurrence) ProtoMessage()    {}
func (*EventOccurrenceSeries_Occurrence) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{0, 1}
}

func (m *EventOccurrenceSeries_Occurrence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventOccurrenceSeries_Occurrence.Unmarshal(m, b)
}
func (m *EventOccurrenceSeries_Occurrence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventOccurrenceSeries_Occurrence.Marshal(b, m, deterministic)
}
func (m *EventOccurrenceSeries_Occurrence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventOccurrenceSeries_Occurrence.Merge(m, src)
}
func (m *EventOccurrenceSeries_Occurrence) XXX_Size() int {
	return xxx_messageInfo_EventOccurrenceSeries_Occurrence.Size(m)
}
func (m *EventOccurrenceSeries_Occurrence) XXX_DiscardUnknown() {
	xxx_messageInfo_EventOccurrenceSeries_Occurrence.DiscardUnknown(m)
}

var xxx_messageInfo_EventOccurrenceSeries_Occurrence proto.InternalMessageInfo

func (m *EventOccurrenceSeries_Occurrence) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EventOccurrenceSeries_Occurrence) GetTimeRange() *common.TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *EventOccurrenceSeries_Occurrence) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *EventOccurrenceSeries_Occurrence) GetSeverity() event.Severity {
	if m != nil {
		return m.Severity
	}
	return event.Severity_SEVERITY_DEFAULT
}

func (m *EventOccurrenceSeries_Occurrence) GetNotes() []*OccurrenceNote {
	if m != nil {
		return m.Notes
	}
	return nil
}

type OccurrenceNote struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OccurrenceNote) Reset()         { *m = OccurrenceNote{} }
func (m *OccurrenceNote) String() string { return proto.CompactTextString(m) }
func (*OccurrenceNote) ProtoMessage()    {}
func (*OccurrenceNote) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{1}
}

func (m *OccurrenceNote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OccurrenceNote.Unmarshal(m, b)
}
func (m *OccurrenceNote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OccurrenceNote.Marshal(b, m, deterministic)
}
func (m *OccurrenceNote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OccurrenceNote.Merge(m, src)
}
func (m *OccurrenceNote) XXX_Size() int {
	return xxx_messageInfo_OccurrenceNote.Size(m)
}
func (m *OccurrenceNote) XXX_DiscardUnknown() {
	xxx_messageInfo_OccurrenceNote.DiscardUnknown(m)
}

var xxx_messageInfo_OccurrenceNote proto.InternalMessageInfo

func (m *OccurrenceNote) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OccurrenceNote) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type PutEventRequest struct {
	Event                *event.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PutEventRequest) Reset()         { *m = PutEventRequest{} }
func (m *PutEventRequest) String() string { return proto.CompactTextString(m) }
func (*PutEventRequest) ProtoMessage()    {}
func (*PutEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{2}
}

func (m *PutEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutEventRequest.Unmarshal(m, b)
}
func (m *PutEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutEventRequest.Marshal(b, m, deterministic)
}
func (m *PutEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutEventRequest.Merge(m, src)
}
func (m *PutEventRequest) XXX_Size() int {
	return xxx_messageInfo_PutEventRequest.Size(m)
}
func (m *PutEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutEventRequest proto.InternalMessageInfo

func (m *PutEventRequest) GetEvent() *event.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type PutEventResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutEventResponse) Reset()         { *m = PutEventResponse{} }
func (m *PutEventResponse) String() string { return proto.CompactTextString(m) }
func (*PutEventResponse) ProtoMessage()    {}
func (*PutEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{3}
}

func (m *PutEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutEventResponse.Unmarshal(m, b)
}
func (m *PutEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutEventResponse.Marshal(b, m, deterministic)
}
func (m *PutEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutEventResponse.Merge(m, src)
}
func (m *PutEventResponse) XXX_Size() int {
	return xxx_messageInfo_PutEventResponse.Size(m)
}
func (m *PutEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutEventResponse proto.InternalMessageInfo

type PutEventBulkRequest struct {
	Events               []*event.Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PutEventBulkRequest) Reset()         { *m = PutEventBulkRequest{} }
func (m *PutEventBulkRequest) String() string { return proto.CompactTextString(m) }
func (*PutEventBulkRequest) ProtoMessage()    {}
func (*PutEventBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{4}
}

func (m *PutEventBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutEventBulkRequest.Unmarshal(m, b)
}
func (m *PutEventBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutEventBulkRequest.Marshal(b, m, deterministic)
}
func (m *PutEventBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutEventBulkRequest.Merge(m, src)
}
func (m *PutEventBulkRequest) XXX_Size() int {
	return xxx_messageInfo_PutEventBulkRequest.Size(m)
}
func (m *PutEventBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutEventBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutEventBulkRequest proto.InternalMessageInfo

func (m *PutEventBulkRequest) GetEvents() []*event.Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type PutEventBulkResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutEventBulkResponse) Reset()         { *m = PutEventBulkResponse{} }
func (m *PutEventBulkResponse) String() string { return proto.CompactTextString(m) }
func (*PutEventBulkResponse) ProtoMessage()    {}
func (*PutEventBulkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{5}
}

func (m *PutEventBulkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutEventBulkResponse.Unmarshal(m, b)
}
func (m *PutEventBulkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutEventBulkResponse.Marshal(b, m, deterministic)
}
func (m *PutEventBulkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutEventBulkResponse.Merge(m, src)
}
func (m *PutEventBulkResponse) XXX_Size() int {
	return xxx_messageInfo_PutEventBulkResponse.Size(m)
}
func (m *PutEventBulkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutEventBulkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutEventBulkResponse proto.InternalMessageInfo

type UpdateEventRequest struct {
	EventId              string                      `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	OccurrenceId         string                      `protobuf:"bytes,2,opt,name=occurrence_id,json=occurrenceId,proto3" json:"occurrence_id,omitempty"`
	StatusWrapper        *UpdateEventRequest_Wrapper `protobuf:"bytes,3,opt,name=status_wrapper,json=statusWrapper,proto3" json:"status_wrapper,omitempty"`
	Acknowledged         *wrappers.BoolValue         `protobuf:"bytes,4,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	NoteId               string                      `protobuf:"bytes,5,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Note                 string                      `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UpdateEventRequest) Reset()         { *m = UpdateEventRequest{} }
func (m *UpdateEventRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEventRequest) ProtoMessage()    {}
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{6}
}

func (m *UpdateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventRequest.Unmarshal(m, b)
}
func (m *UpdateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventRequest.Marshal(b, m, deterministic)
}
func (m *UpdateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventRequest.Merge(m, src)
}
func (m *UpdateEventRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEventRequest.Size(m)
}
func (m *UpdateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventRequest proto.InternalMessageInfo

func (m *UpdateEventRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *UpdateEventRequest) GetOccurrenceId() string {
	if m != nil {
		return m.OccurrenceId
	}
	return ""
}

func (m *UpdateEventRequest) GetStatusWrapper() *UpdateEventRequest_Wrapper {
	if m != nil {
		return m.StatusWrapper
	}
	return nil
}

func (m *UpdateEventRequest) GetAcknowledged() *wrappers.BoolValue {
	if m != nil {
		return m.Acknowledged
	}
	return nil
}

func (m *UpdateEventRequest) GetNoteId() string {
	if m != nil {
		return m.NoteId
	}
	return ""
}

func (m *UpdateEventRequest) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

type UpdateEventRequest_Wrapper struct {
	Status               event.Status `protobuf:"varint,1,opt,name=status,proto3,enum=events.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateEventRequest_Wrapper) Reset()         { *m = UpdateEventRequest_Wrapper{} }
func (m *UpdateEventRequest_Wrapper) String() string { return proto.CompactTextString(m) }
func (*UpdateEventRequest_Wrapper) ProtoMessage()    {}
func (*UpdateEventRequest_Wrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{6, 0}
}

func (m *UpdateEventRequest_Wrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventRequest_Wrapper.Unmarshal(m, b)
}
func (m *UpdateEventRequest_Wrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventRequest_Wrapper.Marshal(b, m, deterministic)
}
func (m *UpdateEventRequest_Wrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventRequest_Wrapper.Merge(m, src)
}
func (m *UpdateEventRequest_Wrapper) XXX_Size() int {
	return xxx_messageInfo_UpdateEventRequest_Wrapper.Size(m)
}
func (m *UpdateEventRequest_Wrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventRequest_Wrapper.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventRequest_Wrapper proto.InternalMessageInfo

func (m *UpdateEventRequest_Wrapper) GetStatus() event.Status {
	if m != nil {
		return m.Status
	}
	return event.Status_STATUS_DEFAULT
}

type UpdateEventResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	NoteId               string   `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEventResponse) Reset()         { *m = UpdateEventResponse{} }
func (m *UpdateEventResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateEventResponse) ProtoMessage()    {}
func (*UpdateEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{7}
}

func (m *UpdateEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventResponse.Unmarshal(m, b)
}
func (m *UpdateEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventResponse.Marshal(b, m, deterministic)
}
func (m *UpdateEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventResponse.Merge(m, src)
}
func (m *UpdateEventResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateEventResponse.Size(m)
}
func (m *UpdateEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventResponse proto.InternalMessageInfo

func (m *UpdateEventResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *UpdateEventResponse) GetNoteId() string {
	if m != nil {
		return m.NoteId
	}
	return ""
}

type Filter struct {
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Types that are valid to be assigned to Op:
	//	*Filter_Equals_
	//	*Filter_LessThan_
	//	*Filter_LessThanOrEquals_
	//	*Filter_GreaterThan_
	//	*Filter_GreaterThanOrEquals_
	//	*Filter_In_
	//	*Filter_NotEquals_
	//	*Filter_NotIn_
	Op                   isFilter_Op `protobuf_oneof:"op"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

type isFilter_Op interface {
	isFilter_Op()
}

type Filter_Equals_ struct {
	Equals *Filter_Equals `protobuf:"bytes,2,opt,name=equals,proto3,oneof"`
}

type Filter_LessThan_ struct {
	LessThan *Filter_LessThan `protobuf:"bytes,3,opt,name=less_than,json=lessThan,proto3,oneof"`
}

type Filter_LessThanOrEquals_ struct {
	LessThanOrEquals *Filter_LessThanOrEquals `protobuf:"bytes,4,opt,name=less_than_or_equals,json=lessThanOrEquals,proto3,oneof"`
}

type Filter_GreaterThan_ struct {
	GreaterThan *Filter_GreaterThan `protobuf:"bytes,5,opt,name=greater_than,json=greaterThan,proto3,oneof"`
}

type Filter_GreaterThanOrEquals_ struct {
	GreaterThanOrEquals *Filter_GreaterThanOrEquals `protobuf:"bytes,6,opt,name=greater_than_or_equals,json=greaterThanOrEquals,proto3,oneof"`
}

type Filter_In_ struct {
	In *Filter_In `protobuf:"bytes,7,opt,name=in,proto3,oneof"`
}

type Filter_NotEquals_ struct {
	NotEquals *Filter_NotEquals `protobuf:"bytes,8,opt,name=not_equals,json=notEquals,proto3,oneof"`
}

type Filter_NotIn_ struct {
	NotIn *Filter_NotIn `protobuf:"bytes,9,opt,name=not_in,json=notIn,proto3,oneof"`
}

func (*Filter_Equals_) isFilter_Op() {}

func (*Filter_LessThan_) isFilter_Op() {}

func (*Filter_LessThanOrEquals_) isFilter_Op() {}

func (*Filter_GreaterThan_) isFilter_Op() {}

func (*Filter_GreaterThanOrEquals_) isFilter_Op() {}

func (*Filter_In_) isFilter_Op() {}

func (*Filter_NotEquals_) isFilter_Op() {}

func (*Filter_NotIn_) isFilter_Op() {}

func (m *Filter) GetOp() isFilter_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (m *Filter) GetEquals() *Filter_Equals {
	if x, ok := m.GetOp().(*Filter_Equals_); ok {
		return x.Equals
	}
	return nil
}

func (m *Filter) GetLessThan() *Filter_LessThan {
	if x, ok := m.GetOp().(*Filter_LessThan_); ok {
		return x.LessThan
	}
	return nil
}

func (m *Filter) GetLessThanOrEquals() *Filter_LessThanOrEquals {
	if x, ok := m.GetOp().(*Filter_LessThanOrEquals_); ok {
		return x.LessThanOrEquals
	}
	return nil
}

func (m *Filter) GetGreaterThan() *Filter_GreaterThan {
	if x, ok := m.GetOp().(*Filter_GreaterThan_); ok {
		return x.GreaterThan
	}
	return nil
}

func (m *Filter) GetGreaterThanOrEquals() *Filter_GreaterThanOrEquals {
	if x, ok := m.GetOp().(*Filter_GreaterThanOrEquals_); ok {
		return x.GreaterThanOrEquals
	}
	return nil
}

func (m *Filter) GetIn() *Filter_In {
	if x, ok := m.GetOp().(*Filter_In_); ok {
		return x.In
	}
	return nil
}

func (m *Filter) GetNotEquals() *Filter_NotEquals {
	if x, ok := m.GetOp().(*Filter_NotEquals_); ok {
		return x.NotEquals
	}
	return nil
}

func (m *Filter) GetNotIn() *Filter_NotIn {
	if x, ok := m.GetOp().(*Filter_NotIn_); ok {
		return x.NotIn
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Filter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Filter_Equals_)(nil),
		(*Filter_LessThan_)(nil),
		(*Filter_LessThanOrEquals_)(nil),
		(*Filter_GreaterThan_)(nil),
		(*Filter_GreaterThanOrEquals_)(nil),
		(*Filter_In_)(nil),
		(*Filter_NotEquals_)(nil),
		(*Filter_NotIn_)(nil),
	}
}

type Filter_LessThan struct {
	Value                *common.Scalar `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Filter_LessThan) Reset()         { *m = Filter_LessThan{} }
func (m *Filter_LessThan) String() string { return proto.CompactTextString(m) }
func (*Filter_LessThan) ProtoMessage()    {}
func (*Filter_LessThan) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8, 0}
}

func (m *Filter_LessThan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_LessThan.Unmarshal(m, b)
}
func (m *Filter_LessThan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_LessThan.Marshal(b, m, deterministic)
}
func (m *Filter_LessThan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_LessThan.Merge(m, src)
}
func (m *Filter_LessThan) XXX_Size() int {
	return xxx_messageInfo_Filter_LessThan.Size(m)
}
func (m *Filter_LessThan) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_LessThan.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_LessThan proto.InternalMessageInfo

func (m *Filter_LessThan) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type Filter_LessThanOrEquals struct {
	Value                *common.Scalar `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Filter_LessThanOrEquals) Reset()         { *m = Filter_LessThanOrEquals{} }
func (m *Filter_LessThanOrEquals) String() string { return proto.CompactTextString(m) }
func (*Filter_LessThanOrEquals) ProtoMessage()    {}
func (*Filter_LessThanOrEquals) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8, 1}
}

func (m *Filter_LessThanOrEquals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_LessThanOrEquals.Unmarshal(m, b)
}
func (m *Filter_LessThanOrEquals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_LessThanOrEquals.Marshal(b, m, deterministic)
}
func (m *Filter_LessThanOrEquals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_LessThanOrEquals.Merge(m, src)
}
func (m *Filter_LessThanOrEquals) XXX_Size() int {
	return xxx_messageInfo_Filter_LessThanOrEquals.Size(m)
}
func (m *Filter_LessThanOrEquals) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_LessThanOrEquals.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_LessThanOrEquals proto.InternalMessageInfo

func (m *Filter_LessThanOrEquals) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type Filter_Equals struct {
	Value                *common.Scalar `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Filter_Equals) Reset()         { *m = Filter_Equals{} }
func (m *Filter_Equals) String() string { return proto.CompactTextString(m) }
func (*Filter_Equals) ProtoMessage()    {}
func (*Filter_Equals) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8, 2}
}

func (m *Filter_Equals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_Equals.Unmarshal(m, b)
}
func (m *Filter_Equals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_Equals.Marshal(b, m, deterministic)
}
func (m *Filter_Equals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_Equals.Merge(m, src)
}
func (m *Filter_Equals) XXX_Size() int {
	return xxx_messageInfo_Filter_Equals.Size(m)
}
func (m *Filter_Equals) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_Equals.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_Equals proto.InternalMessageInfo

func (m *Filter_Equals) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type Filter_GreaterThan struct {
	Value                *common.Scalar `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Filter_GreaterThan) Reset()         { *m = Filter_GreaterThan{} }
func (m *Filter_GreaterThan) String() string { return proto.CompactTextString(m) }
func (*Filter_GreaterThan) ProtoMessage()    {}
func (*Filter_GreaterThan) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8, 3}
}

func (m *Filter_GreaterThan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_GreaterThan.Unmarshal(m, b)
}
func (m *Filter_GreaterThan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_GreaterThan.Marshal(b, m, deterministic)
}
func (m *Filter_GreaterThan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_GreaterThan.Merge(m, src)
}
func (m *Filter_GreaterThan) XXX_Size() int {
	return xxx_messageInfo_Filter_GreaterThan.Size(m)
}
func (m *Filter_GreaterThan) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_GreaterThan.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_GreaterThan proto.InternalMessageInfo

func (m *Filter_GreaterThan) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type Filter_GreaterThanOrEquals struct {
	Value                *common.Scalar `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Filter_GreaterThanOrEquals) Reset()         { *m = Filter_GreaterThanOrEquals{} }
func (m *Filter_GreaterThanOrEquals) String() string { return proto.CompactTextString(m) }
func (*Filter_GreaterThanOrEquals) ProtoMessage()    {}
func (*Filter_GreaterThanOrEquals) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8, 4}
}

func (m *Filter_GreaterThanOrEquals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_GreaterThanOrEquals.Unmarshal(m, b)
}
func (m *Filter_GreaterThanOrEquals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_GreaterThanOrEquals.Marshal(b, m, deterministic)
}
func (m *Filter_GreaterThanOrEquals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_GreaterThanOrEquals.Merge(m, src)
}
func (m *Filter_GreaterThanOrEquals) XXX_Size() int {
	return xxx_messageInfo_Filter_GreaterThanOrEquals.Size(m)
}
func (m *Filter_GreaterThanOrEquals) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_GreaterThanOrEquals.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_GreaterThanOrEquals proto.InternalMessageInfo

func (m *Filter_GreaterThanOrEquals) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type Filter_In struct {
	Values               *common.ScalarArray `protobuf:"bytes,1,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Filter_In) Reset()         { *m = Filter_In{} }
func (m *Filter_In) String() string { return proto.CompactTextString(m) }
func (*Filter_In) ProtoMessage()    {}
func (*Filter_In) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8, 5}
}

func (m *Filter_In) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_In.Unmarshal(m, b)
}
func (m *Filter_In) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_In.Marshal(b, m, deterministic)
}
func (m *Filter_In) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_In.Merge(m, src)
}
func (m *Filter_In) XXX_Size() int {
	return xxx_messageInfo_Filter_In.Size(m)
}
func (m *Filter_In) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_In.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_In proto.InternalMessageInfo

func (m *Filter_In) GetValues() *common.ScalarArray {
	if m != nil {
		return m.Values
	}
	return nil
}

type Filter_NotEquals struct {
	Value                *common.Scalar `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Filter_NotEquals) Reset()         { *m = Filter_NotEquals{} }
func (m *Filter_NotEquals) String() string { return proto.CompactTextString(m) }
func (*Filter_NotEquals) ProtoMessage()    {}
func (*Filter_NotEquals) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8, 6}
}

func (m *Filter_NotEquals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_NotEquals.Unmarshal(m, b)
}
func (m *Filter_NotEquals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_NotEquals.Marshal(b, m, deterministic)
}
func (m *Filter_NotEquals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_NotEquals.Merge(m, src)
}
func (m *Filter_NotEquals) XXX_Size() int {
	return xxx_messageInfo_Filter_NotEquals.Size(m)
}
func (m *Filter_NotEquals) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_NotEquals.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_NotEquals proto.InternalMessageInfo

func (m *Filter_NotEquals) GetValue() *common.Scalar {
	if m != nil {
		return m.Value
	}
	return nil
}

type Filter_NotIn struct {
	Values               *common.ScalarArray `protobuf:"bytes,1,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Filter_NotIn) Reset()         { *m = Filter_NotIn{} }
func (m *Filter_NotIn) String() string { return proto.CompactTextString(m) }
func (*Filter_NotIn) ProtoMessage()    {}
func (*Filter_NotIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{8, 7}
}

func (m *Filter_NotIn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_NotIn.Unmarshal(m, b)
}
func (m *Filter_NotIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_NotIn.Marshal(b, m, deterministic)
}
func (m *Filter_NotIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_NotIn.Merge(m, src)
}
func (m *Filter_NotIn) XXX_Size() int {
	return xxx_messageInfo_Filter_NotIn.Size(m)
}
func (m *Filter_NotIn) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_NotIn.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_NotIn proto.InternalMessageInfo

func (m *Filter_NotIn) GetValues() *common.ScalarArray {
	if m != nil {
		return m.Values
	}
	return nil
}

type ECSearchRequest struct {
	Tenants   []string          `protobuf:"bytes,1,rep,name=tenants,proto3" json:"tenants,omitempty"`
	TimeRange *common.TimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	// Event context search results can be further specified by providing one or more filters.
	// If multiple filters are provided they will be AND'ed.
	// To construct a query with an `OR` clause, you can use the `In` type filter with a
	// limit of ten values.
	Filters    []*Filter        `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	Severities []event.Severity `protobuf:"varint,4,rep,packed,name=severities,proto3,enum=events.Severity" json:"severities,omitempty"`
	Statuses   []event.Status   `protobuf:"varint,5,rep,packed,name=statuses,proto3,enum=events.Status" json:"statuses,omitempty"`
	PageInput  *PageInput       `protobuf:"bytes,6,opt,name=page_input,json=pageInput,proto3" json:"page_input,omitempty"`
	// If true, return only event ids
	EnableIds            bool     `protobuf:"varint,7,opt,name=enable_ids,json=enableIds,proto3" json:"enable_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECSearchRequest) Reset()         { *m = ECSearchRequest{} }
func (m *ECSearchRequest) String() string { return proto.CompactTextString(m) }
func (*ECSearchRequest) ProtoMessage()    {}
func (*ECSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{9}
}

func (m *ECSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECSearchRequest.Unmarshal(m, b)
}
func (m *ECSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECSearchRequest.Marshal(b, m, deterministic)
}
func (m *ECSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECSearchRequest.Merge(m, src)
}
func (m *ECSearchRequest) XXX_Size() int {
	return xxx_messageInfo_ECSearchRequest.Size(m)
}
func (m *ECSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ECSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ECSearchRequest proto.InternalMessageInfo

func (m *ECSearchRequest) GetTenants() []string {
	if m != nil {
		return m.Tenants
	}
	return nil
}

func (m *ECSearchRequest) GetTimeRange() *common.TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *ECSearchRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *ECSearchRequest) GetSeverities() []event.Severity {
	if m != nil {
		return m.Severities
	}
	return nil
}

func (m *ECSearchRequest) GetStatuses() []event.Status {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *ECSearchRequest) GetPageInput() *PageInput {
	if m != nil {
		return m.PageInput
	}
	return nil
}

func (m *ECSearchRequest) GetEnableIds() bool {
	if m != nil {
		return m.EnableIds
	}
	return false
}

type ECSearchResponse struct {
	Series               []*EventOccurrenceSeries `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
	PageInfo             *common.PageInfo         `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	EventIds             []string                 `protobuf:"bytes,3,rep,name=event_ids,json=eventIds,proto3" json:"event_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ECSearchResponse) Reset()         { *m = ECSearchResponse{} }
func (m *ECSearchResponse) String() string { return proto.CompactTextString(m) }
func (*ECSearchResponse) ProtoMessage()    {}
func (*ECSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{10}
}

func (m *ECSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECSearchResponse.Unmarshal(m, b)
}
func (m *ECSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECSearchResponse.Marshal(b, m, deterministic)
}
func (m *ECSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECSearchResponse.Merge(m, src)
}
func (m *ECSearchResponse) XXX_Size() int {
	return xxx_messageInfo_ECSearchResponse.Size(m)
}
func (m *ECSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ECSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ECSearchResponse proto.InternalMessageInfo

func (m *ECSearchResponse) GetSeries() []*EventOccurrenceSeries {
	if m != nil {
		return m.Series
	}
	return nil
}

func (m *ECSearchResponse) GetPageInfo() *common.PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

func (m *ECSearchResponse) GetEventIds() []string {
	if m != nil {
		return m.EventIds
	}
	return nil
}

type ECGetBulkRequest struct {
	Tenant               string            `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Ids                  []string          `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	TimeRange            *common.TimeRange `protobuf:"bytes,3,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	Fields               []string          `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	PageInput            *PageInput        `protobuf:"bytes,5,opt,name=page_input,json=pageInput,proto3" json:"page_input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ECGetBulkRequest) Reset()         { *m = ECGetBulkRequest{} }
func (m *ECGetBulkRequest) String() string { return proto.CompactTextString(m) }
func (*ECGetBulkRequest) ProtoMessage()    {}
func (*ECGetBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{11}
}

func (m *ECGetBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECGetBulkRequest.Unmarshal(m, b)
}
func (m *ECGetBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECGetBulkRequest.Marshal(b, m, deterministic)
}
func (m *ECGetBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECGetBulkRequest.Merge(m, src)
}
func (m *ECGetBulkRequest) XXX_Size() int {
	return xxx_messageInfo_ECGetBulkRequest.Size(m)
}
func (m *ECGetBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ECGetBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ECGetBulkRequest proto.InternalMessageInfo

func (m *ECGetBulkRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ECGetBulkRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ECGetBulkRequest) GetTimeRange() *common.TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *ECGetBulkRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *ECGetBulkRequest) GetPageInput() *PageInput {
	if m != nil {
		return m.PageInput
	}
	return nil
}

type ECGetBulkResponse struct {
	Series               []*EventOccurrenceSeries `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
	PageInfo             *common.PageInfo         `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ECGetBulkResponse) Reset()         { *m = ECGetBulkResponse{} }
func (m *ECGetBulkResponse) String() string { return proto.CompactTextString(m) }
func (*ECGetBulkResponse) ProtoMessage()    {}
func (*ECGetBulkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{12}
}

func (m *ECGetBulkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECGetBulkResponse.Unmarshal(m, b)
}
func (m *ECGetBulkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECGetBulkResponse.Marshal(b, m, deterministic)
}
func (m *ECGetBulkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECGetBulkResponse.Merge(m, src)
}
func (m *ECGetBulkResponse) XXX_Size() int {
	return xxx_messageInfo_ECGetBulkResponse.Size(m)
}
func (m *ECGetBulkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ECGetBulkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ECGetBulkResponse proto.InternalMessageInfo

func (m *ECGetBulkResponse) GetSeries() []*EventOccurrenceSeries {
	if m != nil {
		return m.Series
	}
	return nil
}

func (m *ECGetBulkResponse) GetPageInfo() *common.PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

type ECGetActiveEventsRequest struct {
	Tenant               string            `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	EntityIds            []string          `protobuf:"bytes,2,rep,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"`
	TimeRange            *common.TimeRange `protobuf:"bytes,3,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	PageInput            *PageInput        `protobuf:"bytes,4,opt,name=page_input,json=pageInput,proto3" json:"page_input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ECGetActiveEventsRequest) Reset()         { *m = ECGetActiveEventsRequest{} }
func (m *ECGetActiveEventsRequest) String() string { return proto.CompactTextString(m) }
func (*ECGetActiveEventsRequest) ProtoMessage()    {}
func (*ECGetActiveEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{13}
}

func (m *ECGetActiveEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECGetActiveEventsRequest.Unmarshal(m, b)
}
func (m *ECGetActiveEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECGetActiveEventsRequest.Marshal(b, m, deterministic)
}
func (m *ECGetActiveEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECGetActiveEventsRequest.Merge(m, src)
}
func (m *ECGetActiveEventsRequest) XXX_Size() int {
	return xxx_messageInfo_ECGetActiveEventsRequest.Size(m)
}
func (m *ECGetActiveEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ECGetActiveEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ECGetActiveEventsRequest proto.InternalMessageInfo

func (m *ECGetActiveEventsRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ECGetActiveEventsRequest) GetEntityIds() []string {
	if m != nil {
		return m.EntityIds
	}
	return nil
}

func (m *ECGetActiveEventsRequest) GetTimeRange() *common.TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *ECGetActiveEventsRequest) GetPageInput() *PageInput {
	if m != nil {
		return m.PageInput
	}
	return nil
}

type ECGetActiveEventsResponse struct {
	EntityActiveEvents   map[string]*ECGetActiveEventsResponse_IdList `protobuf:"bytes,1,rep,name=entity_active_events,json=entityActiveEvents,proto3" json:"entity_active_events,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PageInfo             *common.PageInfo                             `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *ECGetActiveEventsResponse) Reset()         { *m = ECGetActiveEventsResponse{} }
func (m *ECGetActiveEventsResponse) String() string { return proto.CompactTextString(m) }
func (*ECGetActiveEventsResponse) ProtoMessage()    {}
func (*ECGetActiveEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{14}
}

func (m *ECGetActiveEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECGetActiveEventsResponse.Unmarshal(m, b)
}
func (m *ECGetActiveEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECGetActiveEventsResponse.Marshal(b, m, deterministic)
}
func (m *ECGetActiveEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECGetActiveEventsResponse.Merge(m, src)
}
func (m *ECGetActiveEventsResponse) XXX_Size() int {
	return xxx_messageInfo_ECGetActiveEventsResponse.Size(m)
}
func (m *ECGetActiveEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ECGetActiveEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ECGetActiveEventsResponse proto.InternalMessageInfo

func (m *ECGetActiveEventsResponse) GetEntityActiveEvents() map[string]*ECGetActiveEventsResponse_IdList {
	if m != nil {
		return m.EntityActiveEvents
	}
	return nil
}

func (m *ECGetActiveEventsResponse) GetPageInfo() *common.PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

type ECGetActiveEventsResponse_IdList struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECGetActiveEventsResponse_IdList) Reset()         { *m = ECGetActiveEventsResponse_IdList{} }
func (m *ECGetActiveEventsResponse_IdList) String() string { return proto.CompactTextString(m) }
func (*ECGetActiveEventsResponse_IdList) ProtoMessage()    {}
func (*ECGetActiveEventsResponse_IdList) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{14, 0}
}

func (m *ECGetActiveEventsResponse_IdList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECGetActiveEventsResponse_IdList.Unmarshal(m, b)
}
func (m *ECGetActiveEventsResponse_IdList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECGetActiveEventsResponse_IdList.Marshal(b, m, deterministic)
}
func (m *ECGetActiveEventsResponse_IdList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECGetActiveEventsResponse_IdList.Merge(m, src)
}
func (m *ECGetActiveEventsResponse_IdList) XXX_Size() int {
	return xxx_messageInfo_ECGetActiveEventsResponse_IdList.Size(m)
}
func (m *ECGetActiveEventsResponse_IdList) XXX_DiscardUnknown() {
	xxx_messageInfo_ECGetActiveEventsResponse_IdList.DiscardUnknown(m)
}

var xxx_messageInfo_ECGetActiveEventsResponse_IdList proto.InternalMessageInfo

func (m *ECGetActiveEventsResponse_IdList) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type PageInput struct {
	Cursor    string              `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Direction PageInput_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=zenoss.cloud.PageInput_Direction" json:"direction,omitempty"`
	// used to denote max number of events or event ids requested
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// used to denote max number of occurrences to be returned
	OccurrenceLimit      int64    `protobuf:"varint,4,opt,name=occurrence_limit,json=occurrenceLimit,proto3" json:"occurrence_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageInput) Reset()         { *m = PageInput{} }
func (m *PageInput) String() string { return proto.CompactTextString(m) }
func (*PageInput) ProtoMessage()    {}
func (*PageInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_6a7d9ee69067f657, []int{15}
}

func (m *PageInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInput.Unmarshal(m, b)
}
func (m *PageInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInput.Marshal(b, m, deterministic)
}
func (m *PageInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInput.Merge(m, src)
}
func (m *PageInput) XXX_Size() int {
	return xxx_messageInfo_PageInput.Size(m)
}
func (m *PageInput) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInput.DiscardUnknown(m)
}

var xxx_messageInfo_PageInput proto.InternalMessageInfo

func (m *PageInput) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *PageInput) GetDirection() PageInput_Direction {
	if m != nil {
		return m.Direction
	}
	return PageInput_FORWARD
}

func (m *PageInput) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PageInput) GetOccurrenceLimit() int64 {
	if m != nil {
		return m.OccurrenceLimit
	}
	return 0
}

func init() {
	proto.RegisterEnum("zenoss.cloud.PageInput_Direction", PageInput_Direction_name, PageInput_Direction_value)
	proto.RegisterType((*EventOccurrenceSeries)(nil), "zenoss.cloud.EventOccurrenceSeries")
	proto.RegisterMapType((map[string]*common.Scalar)(nil), "zenoss.cloud.EventOccurrenceSeries.DimensionsEntry")
	proto.RegisterType((*EventOccurrenceSeries_Occurrence)(nil), "zenoss.cloud.EventOccurrenceSeries.Occurrence")
	proto.RegisterType((*OccurrenceNote)(nil), "zenoss.cloud.OccurrenceNote")
	proto.RegisterType((*PutEventRequest)(nil), "zenoss.cloud.PutEventRequest")
	proto.RegisterType((*PutEventResponse)(nil), "zenoss.cloud.PutEventResponse")
	proto.RegisterType((*PutEventBulkRequest)(nil), "zenoss.cloud.PutEventBulkRequest")
	proto.RegisterType((*PutEventBulkResponse)(nil), "zenoss.cloud.PutEventBulkResponse")
	proto.RegisterType((*UpdateEventRequest)(nil), "zenoss.cloud.UpdateEventRequest")
	proto.RegisterType((*UpdateEventRequest_Wrapper)(nil), "zenoss.cloud.UpdateEventRequest.Wrapper")
	proto.RegisterType((*UpdateEventResponse)(nil), "zenoss.cloud.UpdateEventResponse")
	proto.RegisterType((*Filter)(nil), "zenoss.cloud.Filter")
	proto.RegisterType((*Filter_LessThan)(nil), "zenoss.cloud.Filter.LessThan")
	proto.RegisterType((*Filter_LessThanOrEquals)(nil), "zenoss.cloud.Filter.LessThanOrEquals")
	proto.RegisterType((*Filter_Equals)(nil), "zenoss.cloud.Filter.Equals")
	proto.RegisterType((*Filter_GreaterThan)(nil), "zenoss.cloud.Filter.GreaterThan")
	proto.RegisterType((*Filter_GreaterThanOrEquals)(nil), "zenoss.cloud.Filter.GreaterThanOrEquals")
	proto.RegisterType((*Filter_In)(nil), "zenoss.cloud.Filter.In")
	proto.RegisterType((*Filter_NotEquals)(nil), "zenoss.cloud.Filter.NotEquals")
	proto.RegisterType((*Filter_NotIn)(nil), "zenoss.cloud.Filter.NotIn")
	proto.RegisterType((*ECSearchRequest)(nil), "zenoss.cloud.ECSearchRequest")
	proto.RegisterType((*ECSearchResponse)(nil), "zenoss.cloud.ECSearchResponse")
	proto.RegisterType((*ECGetBulkRequest)(nil), "zenoss.cloud.ECGetBulkRequest")
	proto.RegisterType((*ECGetBulkResponse)(nil), "zenoss.cloud.ECGetBulkResponse")
	proto.RegisterType((*ECGetActiveEventsRequest)(nil), "zenoss.cloud.ECGetActiveEventsRequest")
	proto.RegisterType((*ECGetActiveEventsResponse)(nil), "zenoss.cloud.ECGetActiveEventsResponse")
	proto.RegisterMapType((map[string]*ECGetActiveEventsResponse_IdList)(nil), "zenoss.cloud.ECGetActiveEventsResponse.EntityActiveEventsEntry")
	proto.RegisterType((*ECGetActiveEventsResponse_IdList)(nil), "zenoss.cloud.ECGetActiveEventsResponse.IdList")
	proto.RegisterType((*PageInput)(nil), "zenoss.cloud.PageInput")
}

func init() {
	proto.RegisterFile("zenoss/zing/proto/cloud/event_context.proto", fileDescriptor_6a7d9ee69067f657)
}

var fileDescriptor_6a7d9ee69067f657 = []byte{
	// 1536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x4f, 0x6f, 0xdb, 0xc6,
	0x12, 0x8f, 0x68, 0x4b, 0x22, 0x47, 0x8e, 0xad, 0xac, 0xfd, 0x1c, 0x85, 0x79, 0xf1, 0x73, 0xe8,
	0x17, 0x3f, 0x27, 0xaf, 0xa5, 0x6b, 0xb9, 0x4d, 0xda, 0x34, 0x48, 0x60, 0xc7, 0x4e, 0xa2, 0x36,
	0x88, 0xdd, 0x75, 0xfe, 0x00, 0xbd, 0x08, 0xb4, 0xb4, 0xa6, 0x89, 0xd0, 0x4b, 0x99, 0xbb, 0x74,
	0xea, 0xdc, 0x7b, 0x29, 0x7a, 0xec, 0x17, 0xe8, 0xb1, 0x1f, 0xa3, 0x40, 0x0b, 0xf4, 0xd2, 0x53,
	0x81, 0x7e, 0x9e, 0x82, 0xbb, 0x4b, 0x8a, 0x94, 0x28, 0xff, 0xeb, 0xa1, 0x17, 0x61, 0x67, 0xf6,
	0x37, 0x7f, 0x76, 0x66, 0x38, 0x3b, 0x2b, 0xf8, 0xff, 0x7b, 0x42, 0x03, 0xc6, 0x96, 0xdf, 0x7b,
	0xd4, 0x5d, 0xee, 0x85, 0x01, 0x0f, 0x96, 0x3b, 0x7e, 0x10, 0x75, 0x97, 0xc9, 0x11, 0xa1, 0xbc,
	0xdd, 0x09, 0x28, 0x27, 0xdf, 0x70, 0x5b, 0xec, 0xa0, 0x09, 0x09, 0xb6, 0x05, 0xc2, 0x9c, 0x73,
	0x83, 0xc0, 0xf5, 0x89, 0x94, 0xda, 0x8d, 0xf6, 0x96, 0xdf, 0x85, 0x4e, 0xaf, 0x47, 0x42, 0x26,
	0xd1, 0xe6, 0xc2, 0xb0, 0x6a, 0xa1, 0x54, 0xfe, 0x2a, 0xd0, 0x9d, 0x51, 0xf6, 0x0f, 0x23, 0x12,
	0x1e, 0xb7, 0x3b, 0xc1, 0xc1, 0x41, 0x40, 0x15, 0x76, 0xf1, 0x64, 0x5f, 0x79, 0x62, 0xf8, 0xbf,
	0xa3, 0x70, 0xac, 0xe3, 0xf8, 0x4e, 0x28, 0x51, 0xd6, 0x4f, 0xe3, 0xf0, 0xaf, 0xcd, 0x58, 0x70,
	0xab, 0xd3, 0x89, 0xc2, 0x90, 0xd0, 0x0e, 0xd9, 0x21, 0xa1, 0x47, 0x18, 0x9a, 0x04, 0xcd, 0xeb,
	0x36, 0x4a, 0xf3, 0xa5, 0x25, 0x03, 0x6b, 0x5e, 0x17, 0xcd, 0x42, 0x85, 0x13, 0xea, 0x50, 0xde,
	0xd0, 0x04, 0x4f, 0x51, 0x31, 0x9f, 0x50, 0xee, 0xf1, 0xe3, 0xc6, 0x98, 0xe4, 0x4b, 0x0a, 0xed,
	0x00, 0x74, 0xbd, 0x03, 0x42, 0x99, 0x17, 0x50, 0xd6, 0x18, 0x9f, 0x1f, 0x5b, 0xaa, 0x35, 0x57,
	0xed, 0x6c, 0xec, 0xec, 0x42, 0xc3, 0xf6, 0x46, 0x2a, 0xb5, 0x49, 0x79, 0x78, 0x8c, 0x33, 0x6a,
	0xd0, 0x36, 0xd4, 0x82, 0x14, 0xcf, 0x1a, 0x65, 0xa1, 0xd5, 0x3e, 0x8b, 0xd6, 0x3e, 0x03, 0x67,
	0x55, 0x98, 0x3b, 0x30, 0x35, 0x60, 0x10, 0xd5, 0x61, 0xec, 0x2d, 0x39, 0x56, 0x47, 0x8f, 0x97,
	0xe8, 0x0e, 0x94, 0x8f, 0x1c, 0x3f, 0x22, 0xe2, 0xe8, 0xb5, 0xe6, 0x4c, 0xde, 0xe0, 0x8e, 0x08,
	0x28, 0x96, 0x90, 0xfb, 0xda, 0xa7, 0x25, 0xf3, 0x8f, 0x12, 0x40, 0xdf, 0xe0, 0x50, 0x28, 0xef,
	0x02, 0x70, 0xef, 0x80, 0xb4, 0x43, 0x87, 0xba, 0x89, 0xce, 0xab, 0x79, 0x9d, 0x2f, 0xbd, 0x03,
	0x82, 0xe3, 0x6d, 0x6c, 0xf0, 0x64, 0x89, 0xae, 0x83, 0xe1, 0xb1, 0xb6, 0xd3, 0xe1, 0xde, 0x11,
	0x11, 0xd1, 0xd6, 0xb1, 0xee, 0xb1, 0x35, 0x41, 0xa3, 0x0f, 0x40, 0x67, 0xe4, 0x88, 0x84, 0x71,
	0x26, 0xc6, 0xe7, 0x4b, 0x4b, 0x93, 0xcd, 0xba, 0x2d, 0x4a, 0x82, 0xd9, 0x3b, 0x8a, 0x8f, 0x53,
	0x04, 0x6a, 0x42, 0x99, 0x06, 0x3c, 0x0d, 0xe1, 0xbf, 0xf3, 0xd6, 0xfb, 0xbe, 0xbf, 0x08, 0x38,
	0xc1, 0x12, 0x6a, 0xdd, 0x87, 0xc9, 0xfc, 0xc6, 0xd0, 0xc1, 0x1a, 0x50, 0x15, 0xdf, 0x4a, 0x5a,
	0x24, 0x09, 0x69, 0xdd, 0x85, 0xa9, 0xed, 0x88, 0x8b, 0xd4, 0x60, 0x72, 0x18, 0x11, 0xc6, 0xd1,
	0x02, 0x94, 0x85, 0x7f, 0x42, 0xbe, 0xd6, 0xbc, 0x9c, 0x78, 0x2b, 0x41, 0x72, 0xcf, 0x42, 0x50,
	0xef, 0xcb, 0xb1, 0x5e, 0x40, 0x19, 0xb1, 0x1e, 0xc0, 0x74, 0xc2, 0x5b, 0x8f, 0xfc, 0xb7, 0x89,
	0xbe, 0x5b, 0x50, 0x91, 0x1a, 0x1a, 0x25, 0x71, 0xa6, 0x01, 0x85, 0x6a, 0xd3, 0x9a, 0x85, 0x99,
	0xbc, 0xb4, 0xd2, 0xfa, 0xab, 0x06, 0xe8, 0x55, 0xaf, 0xeb, 0x70, 0x92, 0xf3, 0xf2, 0x1a, 0xe8,
	0xf2, 0xc3, 0x4a, 0x0f, 0x5a, 0x15, 0x74, 0xab, 0x8b, 0x16, 0xe0, 0x72, 0xbf, 0x92, 0xe2, 0x7d,
	0x79, 0xe6, 0x89, 0x3e, 0xb3, 0xd5, 0x45, 0x5b, 0x30, 0xc9, 0xb8, 0xc3, 0x23, 0xd6, 0x56, 0x8d,
	0x41, 0x24, 0xae, 0xd6, 0x5c, 0xca, 0x47, 0x7c, 0xd8, 0xb2, 0xfd, 0x46, 0xe2, 0xf1, 0x65, 0x29,
	0xaf, 0x48, 0xf4, 0x10, 0x26, 0x9c, 0xce, 0x5b, 0x1a, 0xbc, 0xf3, 0x49, 0xd7, 0x25, 0x5d, 0x91,
	0xeb, 0x5a, 0xd3, 0xb4, 0x65, 0x1f, 0xb2, 0x93, 0x3e, 0x64, 0xaf, 0x07, 0x81, 0xff, 0x3a, 0xae,
	0x48, 0x9c, 0xc3, 0xa3, 0xab, 0x50, 0x8d, 0xd3, 0x19, 0xfb, 0x5b, 0x96, 0x1f, 0x6c, 0x4c, 0xb6,
	0xba, 0x08, 0xc1, 0x78, 0xbc, 0x6a, 0x54, 0x04, 0x57, 0xac, 0xcd, 0x15, 0xa8, 0x26, 0x76, 0x17,
	0xa1, 0x22, 0x1d, 0x11, 0x61, 0x98, 0x6c, 0x4e, 0xa6, 0xd5, 0x25, 0xb8, 0x58, 0xed, 0x5a, 0x4f,
	0x60, 0x3a, 0x77, 0x18, 0x19, 0xde, 0xb8, 0x4d, 0x64, 0xc4, 0xf5, 0x04, 0x9e, 0x75, 0x47, 0xcb,
	0xba, 0x63, 0xfd, 0xa0, 0x43, 0xe5, 0x89, 0xe7, 0x73, 0x12, 0xa2, 0x19, 0x28, 0xef, 0x79, 0xc4,
	0x4f, 0x12, 0x20, 0x09, 0xf4, 0x09, 0x54, 0xc8, 0x61, 0xe4, 0xf8, 0x4c, 0x7d, 0x41, 0xd7, 0xf3,
	0x11, 0x95, 0xb2, 0xf6, 0xa6, 0x80, 0x3c, 0xbb, 0x84, 0x15, 0x18, 0x3d, 0x00, 0xc3, 0x27, 0x8c,
	0xb5, 0xf9, 0xbe, 0x43, 0x55, 0x2e, 0x6e, 0x14, 0x4a, 0x3e, 0x27, 0x8c, 0xbd, 0xdc, 0x77, 0xe8,
	0xb3, 0x4b, 0x58, 0xf7, 0xd5, 0x1a, 0xbd, 0x86, 0xe9, 0x54, 0xba, 0x1d, 0x84, 0x6d, 0xe5, 0x81,
	0x4c, 0xc2, 0xad, 0x13, 0xf5, 0x6c, 0x85, 0xa9, 0x2f, 0x75, 0x7f, 0x80, 0x87, 0x36, 0x61, 0xc2,
	0x0d, 0x89, 0xc3, 0x49, 0x28, 0x1d, 0x2b, 0x0b, 0x85, 0xf3, 0x85, 0x0a, 0x9f, 0x4a, 0xa0, 0xf2,
	0xad, 0xe6, 0xf6, 0x49, 0xd4, 0x86, 0xd9, 0xac, 0x9a, 0x8c, 0x87, 0x95, 0xa2, 0xaa, 0x1b, 0x56,
	0x98, 0x71, 0x72, 0xda, 0x1d, 0x66, 0xa3, 0xdb, 0xa0, 0x79, 0xb4, 0x51, 0x2d, 0x6a, 0x59, 0x4a,
	0x59, 0x2b, 0x76, 0x4a, 0xf3, 0x28, 0x7a, 0x04, 0x40, 0x03, 0x9e, 0xd8, 0xd7, 0x85, 0xc8, 0x5c,
	0xa1, 0xc8, 0x8b, 0x80, 0xa7, 0x56, 0x0d, 0x9a, 0x10, 0x68, 0x15, 0xe2, 0x5a, 0x68, 0x7b, 0xb4,
	0x61, 0xa8, 0x1a, 0x1f, 0x21, 0x2c, 0x4c, 0xc6, 0x4d, 0xaa, 0x45, 0xcd, 0xbb, 0xa0, 0x27, 0x01,
	0xef, 0xb7, 0xed, 0xd2, 0xa9, 0x6d, 0xdb, 0x7c, 0x08, 0xf5, 0xc1, 0x44, 0x9d, 0x4b, 0xfe, 0x63,
	0xa8, 0x5c, 0x40, 0xea, 0x33, 0xa8, 0x65, 0x82, 0x7f, 0x2e, 0xd1, 0x35, 0x98, 0x2e, 0xc8, 0xdb,
	0xb9, 0x54, 0xdc, 0x03, 0xad, 0x45, 0xd1, 0x0a, 0x54, 0x04, 0xc9, 0x94, 0xc8, 0xb5, 0x22, 0x91,
	0xb5, 0x30, 0x74, 0x8e, 0xb1, 0x02, 0x9a, 0xf7, 0xc0, 0x48, 0x73, 0x76, 0x2e, 0x8b, 0xf7, 0xa1,
	0x2c, 0xf2, 0x75, 0x01, 0xa3, 0xeb, 0xe3, 0xa0, 0x05, 0x3d, 0xeb, 0x37, 0x0d, 0xa6, 0x36, 0x1f,
	0xef, 0x10, 0x27, 0xec, 0xec, 0x27, 0x3d, 0xba, 0x01, 0x55, 0x39, 0x8c, 0xc8, 0xd6, 0x6f, 0xe0,
	0x84, 0xbc, 0xf0, 0x4d, 0x6b, 0x43, 0x75, 0x4f, 0x94, 0x17, 0x6b, 0x8c, 0x89, 0xcb, 0x64, 0xa6,
	0xa8, 0xf6, 0x70, 0x02, 0x42, 0x1f, 0x01, 0xa8, 0xab, 0xd5, 0x23, 0x72, 0xd8, 0x29, 0xba, 0x7e,
	0x33, 0x18, 0x74, 0x07, 0x74, 0xd9, 0x01, 0xd5, 0x1d, 0x3c, 0xdc, 0x50, 0xd3, 0xfd, 0xf8, 0x14,
	0x3d, 0xc7, 0x25, 0x6d, 0x8f, 0xf6, 0x22, 0xae, 0xbe, 0xe4, 0x81, 0x53, 0x6c, 0x3b, 0x2e, 0x69,
	0xc5, 0xdb, 0xd8, 0xe8, 0x25, 0x4b, 0x74, 0x03, 0x80, 0x50, 0x67, 0xd7, 0x8f, 0xbb, 0x2b, 0x13,
	0x1f, 0xad, 0x8e, 0x0d, 0xc9, 0x69, 0x75, 0x99, 0xf5, 0x63, 0x09, 0xea, 0xfd, 0x50, 0xaa, 0x3e,
	0xfd, 0x39, 0x54, 0x98, 0x98, 0x98, 0xd4, 0x2d, 0xba, 0x70, 0x86, 0xe1, 0x0a, 0x2b, 0x11, 0xb4,
	0x0a, 0x86, 0x72, 0x74, 0x2f, 0x50, 0xd1, 0x9e, 0x2d, 0xf2, 0x73, 0x2f, 0xc0, 0x7a, 0x4f, 0xad,
	0xe2, 0xa9, 0x26, 0xb9, 0x61, 0x65, 0xb4, 0x0d, 0xac, 0xab, 0x2b, 0x96, 0x59, 0xbf, 0x08, 0x1f,
	0x9f, 0x92, 0xdc, 0x4d, 0xdf, 0x1f, 0x45, 0x4b, 0xb9, 0x51, 0xb4, 0x0e, 0x63, 0xb1, 0x0e, 0x4d,
	0xe8, 0x88, 0x97, 0x03, 0xf9, 0x1f, 0x3b, 0x73, 0xfe, 0x67, 0xa1, 0x22, 0x2e, 0x19, 0x99, 0x4b,
	0x03, 0x2b, 0x6a, 0x20, 0x13, 0xe5, 0xb3, 0x66, 0xc2, 0xfa, 0xb6, 0x04, 0x57, 0x32, 0xc7, 0xf8,
	0xa7, 0x62, 0x6d, 0xfd, 0x5c, 0x82, 0x86, 0xf0, 0x43, 0x0e, 0x8d, 0xc2, 0x02, 0x3b, 0x2d, 0xac,
	0xa2, 0x8c, 0xe2, 0x99, 0xbe, 0xdd, 0x8f, 0xae, 0x21, 0x39, 0xad, 0xbf, 0x11, 0xe3, 0x7c, 0x2c,
	0xc7, 0xcf, 0x1c, 0xcb, 0x3f, 0x35, 0xb8, 0x56, 0x70, 0x06, 0x15, 0xd3, 0x43, 0x98, 0x51, 0xce,
	0xca, 0x39, 0xb9, 0x9d, 0x9b, 0x09, 0x1f, 0x0d, 0x44, 0x78, 0x94, 0x1a, 0x7b, 0x53, 0xe8, 0xc8,
	0x6e, 0xc9, 0xc7, 0x08, 0x22, 0x43, 0x1b, 0x17, 0xca, 0x84, 0x69, 0x42, 0xa5, 0xd5, 0x7d, 0xee,
	0xb1, 0xb4, 0x6a, 0x4b, 0x69, 0xd5, 0x9a, 0x11, 0x5c, 0x1d, 0x61, 0xbf, 0xe0, 0x6d, 0xb2, 0x91,
	0x7f, 0x9b, 0xd8, 0x67, 0x3d, 0xa1, 0xb4, 0x9e, 0x79, 0xb5, 0x58, 0xbf, 0x97, 0xc0, 0x48, 0x23,
	0x1e, 0x57, 0x43, 0x27, 0x0a, 0x59, 0x10, 0x26, 0xd5, 0x20, 0x29, 0xf4, 0x08, 0x8c, 0xae, 0x17,
	0x92, 0x0e, 0xf7, 0x02, 0x2a, 0x6c, 0x4e, 0x36, 0x6f, 0x8e, 0xc8, 0x9a, 0xbd, 0x91, 0x00, 0x71,
	0x5f, 0x26, 0x9e, 0xe6, 0x7c, 0xef, 0xc0, 0xe3, 0xa2, 0x54, 0xc6, 0xb0, 0x24, 0xd0, 0x6d, 0xa8,
	0x67, 0x86, 0x69, 0x09, 0x18, 0x17, 0x80, 0xa9, 0x3e, 0xff, 0x79, 0xcc, 0xb6, 0x16, 0xc1, 0x48,
	0x15, 0xa3, 0x1a, 0x54, 0x9f, 0x6c, 0xe1, 0x37, 0x6b, 0x78, 0xa3, 0x7e, 0x09, 0x4d, 0x80, 0xbe,
	0xbe, 0xf6, 0xf8, 0x4b, 0x41, 0x95, 0x9a, 0xdf, 0x69, 0x80, 0xc4, 0xa1, 0x1f, 0xcb, 0xf7, 0x7b,
	0x8b, 0xba, 0x71, 0x99, 0xb7, 0x40, 0x4f, 0x1e, 0x00, 0x68, 0x60, 0xf2, 0x1b, 0x78, 0xa2, 0x98,
	0x73, 0xa3, 0xb6, 0x55, 0xb1, 0xbd, 0x82, 0x89, 0xec, 0x5b, 0x02, 0xdd, 0x2c, 0xc6, 0x67, 0x7a,
	0x97, 0x69, 0x9d, 0x04, 0x51, 0x6a, 0x31, 0xd4, 0x32, 0x23, 0x34, 0x9a, 0x3f, 0xed, 0xa9, 0x60,
	0xde, 0x3c, 0x01, 0x21, 0x75, 0x36, 0xbf, 0xd7, 0xe0, 0x4a, 0x36, 0x18, 0x5f, 0x45, 0x24, 0x3c,
	0x46, 0x4f, 0xa1, 0x22, 0xfb, 0xff, 0x60, 0x24, 0x06, 0xae, 0xd8, 0xc1, 0x48, 0x0c, 0x5d, 0x1b,
	0x5f, 0x40, 0x55, 0x75, 0x37, 0x34, 0x57, 0x50, 0x81, 0xd9, 0x08, 0xfc, 0x67, 0xe4, 0xbe, 0xd2,
	0xb5, 0x0b, 0x53, 0x03, 0x45, 0x8b, 0x16, 0x4f, 0xad, 0x6a, 0xa9, 0xfb, 0x7f, 0x67, 0xac, 0xfe,
	0x75, 0x02, 0x4b, 0x41, 0xe8, 0x26, 0xe8, 0xf7, 0x1e, 0x75, 0xe5, 0xcb, 0x49, 0x09, 0x92, 0x4c,
	0xa4, 0xb6, 0x4b, 0x5f, 0xdf, 0x73, 0x3d, 0xbe, 0x1f, 0xed, 0xda, 0x9d, 0xe0, 0x60, 0x39, 0xf3,
	0xb7, 0xca, 0x87, 0xf2, 0x6f, 0x95, 0xa3, 0x95, 0x95, 0x65, 0xb7, 0xf0, 0x1f, 0xa3, 0xdd, 0x8a,
	0x40, 0xac, 0xfe, 0x15, 0x00, 0x00, 0xff, 0xff, 0xad, 0x2c, 0x1e, 0x38, 0x61, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventContextIngestClient is the client API for EventContextIngest service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventContextIngestClient interface {
	PutEvent(ctx context.Context, in *PutEventRequest, opts ...grpc.CallOption) (*PutEventResponse, error)
	PutEventBulk(ctx context.Context, in *PutEventBulkRequest, opts ...grpc.CallOption) (*PutEventBulkResponse, error)
	UpdateEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*UpdateEventResponse, error)
}

type eventContextIngestClient struct {
	cc grpc.ClientConnInterface
}

func NewEventContextIngestClient(cc grpc.ClientConnInterface) EventContextIngestClient {
	return &eventContextIngestClient{cc}
}

func (c *eventContextIngestClient) PutEvent(ctx context.Context, in *PutEventRequest, opts ...grpc.CallOption) (*PutEventResponse, error) {
	out := new(PutEventResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.EventContextIngest/PutEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventContextIngestClient) PutEventBulk(ctx context.Context, in *PutEventBulkRequest, opts ...grpc.CallOption) (*PutEventBulkResponse, error) {
	out := new(PutEventBulkResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.EventContextIngest/PutEventBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventContextIngestClient) UpdateEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*UpdateEventResponse, error) {
	out := new(UpdateEventResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.EventContextIngest/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventContextIngestServer is the server API for EventContextIngest service.
type EventContextIngestServer interface {
	PutEvent(context.Context, *PutEventRequest) (*PutEventResponse, error)
	PutEventBulk(context.Context, *PutEventBulkRequest) (*PutEventBulkResponse, error)
	UpdateEvent(context.Context, *UpdateEventRequest) (*UpdateEventResponse, error)
}

// UnimplementedEventContextIngestServer can be embedded to have forward compatible implementations.
type UnimplementedEventContextIngestServer struct {
}

func (*UnimplementedEventContextIngestServer) PutEvent(ctx context.Context, req *PutEventRequest) (*PutEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutEvent not implemented")
}
func (*UnimplementedEventContextIngestServer) PutEventBulk(ctx context.Context, req *PutEventBulkRequest) (*PutEventBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutEventBulk not implemented")
}
func (*UnimplementedEventContextIngestServer) UpdateEvent(ctx context.Context, req *UpdateEventRequest) (*UpdateEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}

func RegisterEventContextIngestServer(s *grpc.Server, srv EventContextIngestServer) {
	s.RegisterService(&_EventContextIngest_serviceDesc, srv)
}

func _EventContextIngest_PutEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventContextIngestServer).PutEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.EventContextIngest/PutEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventContextIngestServer).PutEvent(ctx, req.(*PutEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventContextIngest_PutEventBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutEventBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventContextIngestServer).PutEventBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.EventContextIngest/PutEventBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventContextIngestServer).PutEventBulk(ctx, req.(*PutEventBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventContextIngest_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventContextIngestServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.EventContextIngest/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventContextIngestServer).UpdateEvent(ctx, req.(*UpdateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventContextIngest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zenoss.cloud.EventContextIngest",
	HandlerType: (*EventContextIngestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutEvent",
			Handler:    _EventContextIngest_PutEvent_Handler,
		},
		{
			MethodName: "PutEventBulk",
			Handler:    _EventContextIngest_PutEventBulk_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _EventContextIngest_UpdateEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zenoss/zing/proto/cloud/event_context.proto",
}

// EventContextQueryClient is the client API for EventContextQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventContextQueryClient interface {
	Search(ctx context.Context, in *ECSearchRequest, opts ...grpc.CallOption) (*ECSearchResponse, error)
	GetBulk(ctx context.Context, in *ECGetBulkRequest, opts ...grpc.CallOption) (*ECGetBulkResponse, error)
	GetActiveEvents(ctx context.Context, in *ECGetActiveEventsRequest, opts ...grpc.CallOption) (*ECGetActiveEventsResponse, error)
}

type eventContextQueryClient struct {
	cc grpc.ClientConnInterface
}

func NewEventContextQueryClient(cc grpc.ClientConnInterface) EventContextQueryClient {
	return &eventContextQueryClient{cc}
}

func (c *eventContextQueryClient) Search(ctx context.Context, in *ECSearchRequest, opts ...grpc.CallOption) (*ECSearchResponse, error) {
	out := new(ECSearchResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.EventContextQuery/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventContextQueryClient) GetBulk(ctx context.Context, in *ECGetBulkRequest, opts ...grpc.CallOption) (*ECGetBulkResponse, error) {
	out := new(ECGetBulkResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.EventContextQuery/GetBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventContextQueryClient) GetActiveEvents(ctx context.Context, in *ECGetActiveEventsRequest, opts ...grpc.CallOption) (*ECGetActiveEventsResponse, error) {
	out := new(ECGetActiveEventsResponse)
	err := c.cc.Invoke(ctx, "/zenoss.cloud.EventContextQuery/GetActiveEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventContextQueryServer is the server API for EventContextQuery service.
type EventContextQueryServer interface {
	Search(context.Context, *ECSearchRequest) (*ECSearchResponse, error)
	GetBulk(context.Context, *ECGetBulkRequest) (*ECGetBulkResponse, error)
	GetActiveEvents(context.Context, *ECGetActiveEventsRequest) (*ECGetActiveEventsResponse, error)
}

// UnimplementedEventContextQueryServer can be embedded to have forward compatible implementations.
type UnimplementedEventContextQueryServer struct {
}

func (*UnimplementedEventContextQueryServer) Search(ctx context.Context, req *ECSearchRequest) (*ECSearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedEventContextQueryServer) GetBulk(ctx context.Context, req *ECGetBulkRequest) (*ECGetBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBulk not implemented")
}
func (*UnimplementedEventContextQueryServer) GetActiveEvents(ctx context.Context, req *ECGetActiveEventsRequest) (*ECGetActiveEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActiveEvents not implemented")
}

func RegisterEventContextQueryServer(s *grpc.Server, srv EventContextQueryServer) {
	s.RegisterService(&_EventContextQuery_serviceDesc, srv)
}

func _EventContextQuery_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ECSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventContextQueryServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.EventContextQuery/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventContextQueryServer).Search(ctx, req.(*ECSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventContextQuery_GetBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ECGetBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventContextQueryServer).GetBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.EventContextQuery/GetBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventContextQueryServer).GetBulk(ctx, req.(*ECGetBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventContextQuery_GetActiveEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ECGetActiveEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventContextQueryServer).GetActiveEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zenoss.cloud.EventContextQuery/GetActiveEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventContextQueryServer).GetActiveEvents(ctx, req.(*ECGetActiveEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventContextQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zenoss.cloud.EventContextQuery",
	HandlerType: (*EventContextQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _EventContextQuery_Search_Handler,
		},
		{
			MethodName: "GetBulk",
			Handler:    _EventContextQuery_GetBulk_Handler,
		},
		{
			MethodName: "GetActiveEvents",
			Handler:    _EventContextQuery_GetActiveEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zenoss/zing/proto/cloud/event_context.proto",
}
